{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":1,"renderable":0},{"_id":"source/README","path":"README","modified":1,"renderable":0},{"_id":"themes/next/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/canvas-nest/canvas-nest.js","path":"vendors/canvas-nest/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1478604442513},{"_id":"source/README","hash":"6ab1db9edb3556be224b73c462bb09d63b6d8942","modified":1478765261705},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1462448087000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1462448087000},{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1462448087000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1462448087000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1462448087000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1462448087000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1462448087000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1462448087000},{"_id":"themes/next/_config.yml","hash":"277174a80614758d9ad682e02742ddafc2b028f6","modified":1497524174982},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1462448087000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1462448087000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1462448087000},{"_id":"source/_posts/CSS-修改-placeholder-的文字颜色.md","hash":"8b9f538f8a1c70a5b53db28365caf416f1f35117","modified":1498466402365},{"_id":"source/_posts/G20杭州峰会logo.md","hash":"c0021e698c935bdc5f4b787b658218fcab51bc9e","modified":1497527903782},{"_id":"source/_posts/node简单的爬虫.md","hash":"663ee1635b1f40f173f18537f9c32beb91da2eec","modified":1482976123257},{"_id":"source/_posts/vue-2-0-loading-组件.md","hash":"3c7350f9b5b9ae39720af0dcccfe3be682998a3f","modified":1497528493790},{"_id":"source/_posts/一年转身不过几个瞬间.md","hash":"23bb168c472ff58cec1e653d66b929e2f08a8541","modified":1497526311098},{"_id":"source/_posts/兼容之殇.md","hash":"1162433440e071dcc6029f8af77958c4be2b5606","modified":1474542779009},{"_id":"source/_posts/写在重新开始的地方.md","hash":"0e8616c11af362d5d36a408e55f3d39953c4ae6a","modified":1474542787425},{"_id":"source/_posts/前端技术栈-Front-End-Develop.md","hash":"9e03fdd1cb51604c9611b97441aaf8e871f800e1","modified":1507482700399},{"_id":"source/_posts/厦门印象.md","hash":"65120a0d2ad58b6ba313b9e67c05d1183cfbb025","modified":1497528425094},{"_id":"source/_posts/异步解决方案-async-await.md","hash":"b20e2de04de20958fa7a8b749b82376a17be0992","modified":1499608616700},{"_id":"source/_posts/榕城一两事（一）.md","hash":"d9e351b36fb4c265f595158aa8065bb2a6ab71a9","modified":1497525888104},{"_id":"source/_posts/榕城一两事（三）.md","hash":"01e41163a94018cb5a567cf7580d75eb23eea667","modified":1482300686348},{"_id":"source/_posts/榕城一两事（二）.md","hash":"4401339c664c41a7182fecc32fedea8fb4287f97","modified":1475110247775},{"_id":"source/_posts/浅析前后端分离.md","hash":"89c11860a3a0c80ed750260fc72540712121d46c","modified":1482975876574},{"_id":"source/_posts/浑浑噩噩的一个周末.md","hash":"410e4012b98751bf45d226453d6e272f69061f93","modified":1482300675622},{"_id":"source/_posts/第一次浏览器大战.md","hash":"34ad0d7f7fa4f93c73ab1f510986be2823087076","modified":1497527799674},{"_id":"source/_posts/美丽的平潭岛.md","hash":"c883a900dcfda2c830b20d39f731c5278057441c","modified":1497528361996},{"_id":"source/_posts/老派剧的闪光.md","hash":"cd1ca8d04d0332a61e4081e2dc19b213d8abd34a","modified":1497528395104},{"_id":"source/_posts/车.md","hash":"d39359c5b5250f351922805441390336f4b62546","modified":1497538142720},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1462448087000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1462448087000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1462448087000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1462448087000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1462448087000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1462448087000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1462448087000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1462448087000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1462448087000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1462448087000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"effca5e8da56580f00400db1a93b8641a49cc8a7","modified":1482917452349},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1462448087000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1462448087000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1462448087000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1482973229812},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1462448087000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1462448087000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1462448087000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1462448087000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1462448087000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1462448087000},{"_id":"themes/next/source/favicon.ico","hash":"df03d66bc2e2a98490b301115a451e12c8262752","modified":1472736520083},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1462448087000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1462448087000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1462448087000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1462448087000},{"_id":"themes/next/layout/_macro/post.swig","hash":"d86ff3adde06f1133b44006ff9e68c99c3bed16c","modified":1482927993467},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1462448087000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1462448087000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1462448087000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"6cbcee5481f5f1c30200a240804c6b72bcc7bb97","modified":1497524487170},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1462448087000},{"_id":"themes/next/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1462448087000},{"_id":"themes/next/layout/_partials/head.swig","hash":"f83b1c55bedd2c1a3eb734c72c6997795a4e5f99","modified":1462448087000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1462448087000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"94835f39adf6c14f7961b4e150040c18e38e89dd","modified":1482918004303},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1462448087000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1462448087000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1462448087000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1462448087000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"316be5d30a1f16769b7f01f62e017ac4459c85ca","modified":1502712382395},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1462448087000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1462448087000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1462448087000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1462448087000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1462448087000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1462448087000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1462448087000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1462448087000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1462448087000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1462448087000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1462448087000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1462448087000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1462448087000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1462448087000},{"_id":"themes/next/source/images/logo.png","hash":"2a9cc54e2ebf5bcb0199b429eb179efb09fa453e","modified":1472473104985},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1462448087000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1462448087000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1462448087000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1462448087000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1462448087000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1462448087000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1462448087000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1462448087000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1462448087000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1462448087000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1462448087000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1462448087000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1462448087000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"2e915cde0a13f1d344637a8294e94a92d58db0c8","modified":1497407132784},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"069bb17fb1db3bc7c85c88efa3ed94ab6becbe2c","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1462448087000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"a916a682967039572c875795667e767659b7bdcf","modified":1482917967358},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1462448087000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1462448087000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1462448087000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1462448087000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4e293cdc668c5bf649e89d5a896d2d4d2c5813ce","modified":1482929139796},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1462448087000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1462448087000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1462448087000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1462448087000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1462448087000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1462448087000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1462448087000},{"_id":"themes/next/source/vendors/canvas-nest/canvas-nest.js","hash":"d2c20f2def44014d7ef13b7c08f6f6ea480cac8c","modified":1502712755216},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1462448087000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1462448087000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1462448087000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1462448087000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"44e761721e8ad787ef571a3cc57bbc12d318a2a3","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"334176d838ee528e58468d8bc74ff3a6d3f25b2b","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"3491d3cebabc8a28857200db28a1be65aad6adc2","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1462448087000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"8fad235347d5999e67b6d66124f9bac1a33e84d1","modified":1497408064827},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"f5ad8f075cbfa8d56b2e4e9566c45e010496133b","modified":1482928973606},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1462448087000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"758acacba040d8f0c38f24bbe4655caefe2bacbe","modified":1502713863302},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"b09578d51ad52d0f20cf7389594fbeaf00f8c624","modified":1482926830496},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1462448087000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1462448087000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1462448087000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"8d612f8c5f0042185c39437bb8f182dec1100edf","modified":1482928537549},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"3b3a8d0fbbab7ab27aa8f0084c208339d2377456","modified":1482929961490},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ed63528817b778951e545cd4cfc2ba8e349c4c86","modified":1482927268619},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1502714006747},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1462448087000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1462448087000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1462448087000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1462448087000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1462448087000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d8105a9d9c5aae300cc82422102c96c63459b77a","modified":1482926869394},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"51166ff965e0aca4ff560d13bc8c500474df3489","modified":1482927608085},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"d5c782e4d826317552d43981d00f3b3f2687fb5b","modified":1482928315167},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6912964f30b42ca4b3bac3e9d9a8ad57ffb0316","modified":1482929835980},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"da616d0e35da582c26372120ce00448af939ff09","modified":1482918547771},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"fbe69d9d11149f92207058472c7b9de6147b6357","modified":1482918829333},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"48c000163ce191a76e9e5c747c72be5c46930b88","modified":1482930319955},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1462448087000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1462448087000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462448087000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1462448087000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1462448087000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CSS 修改 placeholder 的文字颜色","date":"2017-06-26T08:02:59.000Z","_content":"\n针对 INPUT 标签 placeholder 的样式，[StackOverflow](https://stackoverflow.com/questions/2610497/change-an-html5-inputs-placeholder-color-with-css) 上面有一个高分回答，兼容性还不错，适合多种浏览器，特意记录下来，以后留用。\n\n<!-- more -->\n** CSS **\n```\n::-webkit-input-placeholder { /* WebKit, Blink, Edge */\n    color: #909;\n}\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\n   color: #909;\n   opacity: 1;\n}\n::-moz-placeholder { /* Mozilla Firefox 19+ */\n   color: #909;\n   opacity: 1;\n}\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\n   color: #909;\n}\n::-ms-input-placeholder { /* Microsoft Edge */\n   color: #909;\n}\n```\n\n** 效果 **\n![](http://ocz1xi4bl.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170626163150.png)\n","source":"_posts/CSS-修改-placeholder-的文字颜色.md","raw":"---\ntitle: CSS 修改 placeholder 的文字颜色\ndate: 2017-06-26 16:02:59\ntags: 前端\n---\n\n针对 INPUT 标签 placeholder 的样式，[StackOverflow](https://stackoverflow.com/questions/2610497/change-an-html5-inputs-placeholder-color-with-css) 上面有一个高分回答，兼容性还不错，适合多种浏览器，特意记录下来，以后留用。\n\n<!-- more -->\n** CSS **\n```\n::-webkit-input-placeholder { /* WebKit, Blink, Edge */\n    color: #909;\n}\n:-moz-placeholder { /* Mozilla Firefox 4 to 18 */\n   color: #909;\n   opacity: 1;\n}\n::-moz-placeholder { /* Mozilla Firefox 19+ */\n   color: #909;\n   opacity: 1;\n}\n:-ms-input-placeholder { /* Internet Explorer 10-11 */\n   color: #909;\n}\n::-ms-input-placeholder { /* Microsoft Edge */\n   color: #909;\n}\n```\n\n** 效果 **\n![](http://ocz1xi4bl.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170626163150.png)\n","slug":"CSS-修改-placeholder-的文字颜色","published":1,"updated":"2017-06-26T08:40:02.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a75d00006klb7i824lr9","content":"<p>针对 INPUT 标签 placeholder 的样式，<a href=\"https://stackoverflow.com/questions/2610497/change-an-html5-inputs-placeholder-color-with-css\" target=\"_blank\" rel=\"external\">StackOverflow</a> 上面有一个高分回答，兼容性还不错，适合多种浏览器，特意记录下来，以后留用。</p>\n<a id=\"more\"></a>\n<p><strong> CSS </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">::-webkit-input-placeholder &#123; /* WebKit, Blink, Edge */</div><div class=\"line\">    color: #909;</div><div class=\"line\">&#125;</div><div class=\"line\">:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</div><div class=\"line\">   color: #909;</div><div class=\"line\">   opacity: 1;</div><div class=\"line\">&#125;</div><div class=\"line\">::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</div><div class=\"line\">   color: #909;</div><div class=\"line\">   opacity: 1;</div><div class=\"line\">&#125;</div><div class=\"line\">:-ms-input-placeholder &#123; /* Internet Explorer 10-11 */</div><div class=\"line\">   color: #909;</div><div class=\"line\">&#125;</div><div class=\"line\">::-ms-input-placeholder &#123; /* Microsoft Edge */</div><div class=\"line\">   color: #909;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong> 效果 </strong><br><img src=\"http://ocz1xi4bl.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170626163150.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>针对 INPUT 标签 placeholder 的样式，<a href=\"https://stackoverflow.com/questions/2610497/change-an-html5-inputs-placeholder-color-with-css\" target=\"_blank\" rel=\"external\">StackOverflow</a> 上面有一个高分回答，兼容性还不错，适合多种浏览器，特意记录下来，以后留用。</p>","more":"<p><strong> CSS </strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">::-webkit-input-placeholder &#123; /* WebKit, Blink, Edge */</div><div class=\"line\">    color: #909;</div><div class=\"line\">&#125;</div><div class=\"line\">:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</div><div class=\"line\">   color: #909;</div><div class=\"line\">   opacity: 1;</div><div class=\"line\">&#125;</div><div class=\"line\">::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</div><div class=\"line\">   color: #909;</div><div class=\"line\">   opacity: 1;</div><div class=\"line\">&#125;</div><div class=\"line\">:-ms-input-placeholder &#123; /* Internet Explorer 10-11 */</div><div class=\"line\">   color: #909;</div><div class=\"line\">&#125;</div><div class=\"line\">::-ms-input-placeholder &#123; /* Microsoft Edge */</div><div class=\"line\">   color: #909;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong> 效果 </strong><br><img src=\"http://ocz1xi4bl.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170626163150.png\" alt=\"\"></p>"},{"title":"G20杭州峰会logo","date":"2016-09-04T08:40:31.000Z","_content":"\n![](http://ocz1xi4bl.bkt.clouddn.com/timg.jpg)\n\nG20峰会今天在中国杭州开幕，杭州、杭州西湖、杭州西湖的桥反反复复出现在各大媒体首页。翠绿的湖面波光粼粼，西湖断桥在远处、在水中，迭影重重，配合淅淅沥沥的小雨，俨然一副典型的江南水墨画。各国政要聚会西湖，怎么看也不像是谈论世界大事的，他们更应该先撑一把伞，好好欣赏这里的诗情画意。我注意到这次峰会的LOGO，简直就是西湖画卷的精装版。来看看官方的描述：<!-- more -->\n\n> 2016年G20峰会会标图案，用20根线条，描绘出一个桥形轮廓，同时辅以G20 2016 CHINA和篆刻隶书“中国”印章。桥梁寓意着G20已成为全球经济增长之桥、国际社会合作之桥、面向未来的共赢之桥。同时桥梁线条形似光纤，寓意信息时代的互联互通。图案中G20的\"O\"体现了各国团结协作精神。中文印章彰显了中国传统文化内涵，与英文CHINA相呼应。\n\n有没有很官方......\n\n但就设计而言简单大方，充分体现现代化的设计趋势：**类扁平化、元素更轻量、更少的颜色、聚焦数据内容**......\n\n个人感觉唯一略显突兀的是篆刻隶书\"中国\"印章，简直就是强制植入广告嘛，有没有......值得一提的是，官方规定logo设计是不允许使用任何当国文字的，而中国的设计师巧妙地运用印章作为图像元素避开了限制，可谓一大创造。","source":"_posts/G20杭州峰会logo.md","raw":"---\ntitle: G20杭州峰会logo\ndate: 2016-09-04 16:40:31\ntags: 扯\n---\n\n![](http://ocz1xi4bl.bkt.clouddn.com/timg.jpg)\n\nG20峰会今天在中国杭州开幕，杭州、杭州西湖、杭州西湖的桥反反复复出现在各大媒体首页。翠绿的湖面波光粼粼，西湖断桥在远处、在水中，迭影重重，配合淅淅沥沥的小雨，俨然一副典型的江南水墨画。各国政要聚会西湖，怎么看也不像是谈论世界大事的，他们更应该先撑一把伞，好好欣赏这里的诗情画意。我注意到这次峰会的LOGO，简直就是西湖画卷的精装版。来看看官方的描述：<!-- more -->\n\n> 2016年G20峰会会标图案，用20根线条，描绘出一个桥形轮廓，同时辅以G20 2016 CHINA和篆刻隶书“中国”印章。桥梁寓意着G20已成为全球经济增长之桥、国际社会合作之桥、面向未来的共赢之桥。同时桥梁线条形似光纤，寓意信息时代的互联互通。图案中G20的\"O\"体现了各国团结协作精神。中文印章彰显了中国传统文化内涵，与英文CHINA相呼应。\n\n有没有很官方......\n\n但就设计而言简单大方，充分体现现代化的设计趋势：**类扁平化、元素更轻量、更少的颜色、聚焦数据内容**......\n\n个人感觉唯一略显突兀的是篆刻隶书\"中国\"印章，简直就是强制植入广告嘛，有没有......值得一提的是，官方规定logo设计是不允许使用任何当国文字的，而中国的设计师巧妙地运用印章作为图像元素避开了限制，可谓一大创造。","slug":"G20杭州峰会logo","published":1,"updated":"2017-06-15T11:58:23.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a76800016klb08ien14g","content":"<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/timg.jpg\" alt=\"\"></p>\n<p>G20峰会今天在中国杭州开幕，杭州、杭州西湖、杭州西湖的桥反反复复出现在各大媒体首页。翠绿的湖面波光粼粼，西湖断桥在远处、在水中，迭影重重，配合淅淅沥沥的小雨，俨然一副典型的江南水墨画。各国政要聚会西湖，怎么看也不像是谈论世界大事的，他们更应该先撑一把伞，好好欣赏这里的诗情画意。我注意到这次峰会的LOGO，简直就是西湖画卷的精装版。来看看官方的描述：<a id=\"more\"></a></p>\n<blockquote>\n<p>2016年G20峰会会标图案，用20根线条，描绘出一个桥形轮廓，同时辅以G20 2016 CHINA和篆刻隶书“中国”印章。桥梁寓意着G20已成为全球经济增长之桥、国际社会合作之桥、面向未来的共赢之桥。同时桥梁线条形似光纤，寓意信息时代的互联互通。图案中G20的”O”体现了各国团结协作精神。中文印章彰显了中国传统文化内涵，与英文CHINA相呼应。</p>\n</blockquote>\n<p>有没有很官方……</p>\n<p>但就设计而言简单大方，充分体现现代化的设计趋势：<strong>类扁平化、元素更轻量、更少的颜色、聚焦数据内容</strong>……</p>\n<p>个人感觉唯一略显突兀的是篆刻隶书”中国”印章，简直就是强制植入广告嘛，有没有……值得一提的是，官方规定logo设计是不允许使用任何当国文字的，而中国的设计师巧妙地运用印章作为图像元素避开了限制，可谓一大创造。</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/timg.jpg\" alt=\"\"></p>\n<p>G20峰会今天在中国杭州开幕，杭州、杭州西湖、杭州西湖的桥反反复复出现在各大媒体首页。翠绿的湖面波光粼粼，西湖断桥在远处、在水中，迭影重重，配合淅淅沥沥的小雨，俨然一副典型的江南水墨画。各国政要聚会西湖，怎么看也不像是谈论世界大事的，他们更应该先撑一把伞，好好欣赏这里的诗情画意。我注意到这次峰会的LOGO，简直就是西湖画卷的精装版。来看看官方的描述：","more":"</p>\n<blockquote>\n<p>2016年G20峰会会标图案，用20根线条，描绘出一个桥形轮廓，同时辅以G20 2016 CHINA和篆刻隶书“中国”印章。桥梁寓意着G20已成为全球经济增长之桥、国际社会合作之桥、面向未来的共赢之桥。同时桥梁线条形似光纤，寓意信息时代的互联互通。图案中G20的”O”体现了各国团结协作精神。中文印章彰显了中国传统文化内涵，与英文CHINA相呼应。</p>\n</blockquote>\n<p>有没有很官方……</p>\n<p>但就设计而言简单大方，充分体现现代化的设计趋势：<strong>类扁平化、元素更轻量、更少的颜色、聚焦数据内容</strong>……</p>\n<p>个人感觉唯一略显突兀的是篆刻隶书”中国”印章，简直就是强制植入广告嘛，有没有……值得一提的是，官方规定logo设计是不允许使用任何当国文字的，而中国的设计师巧妙地运用印章作为图像元素避开了限制，可谓一大创造。</p>"},{"title":"node简单的爬虫","date":"2016-09-26T15:39:46.000Z","_content":"\n最近学习 nodejs ，做一个爬虫玩玩。不知深浅爬了 segmentfault ，希望站长大大不要封我的IP，只是做练习用用，同时也表达对贵社区的喜爱和敬重。\n<!-- more -->\n\n## 目标\n- 目标网站：https://segmentfault.com\n- 分别进入每个主题，取得问题的题目、提问者、回答数，并打印。\n\n## 输出示例: \n```\n[\n  {\n    \"title\": \"python 是否存在限制 key 的 dict\",\n    \"author\": \"caimaoy\",\n    \"answer\": \"2个回答\"\n  },\n  {\n    \"title\": \"vue.js 主页面组件替换或跳转\",\n    \"author\": \"yulingsong\",\n    \"answer\": \"2个回答\"\n  }\n]\n```\n## 知识点\n- 安装 node 依赖包；\n- 使用 superagent 抓取网页；\n- 使用 cheerio 分析网页；\n- 使用 eventproxy 控制异步回调；\n- 使用 async 控制并发。\n\n## 主要库的介绍\n\n- ** superagent **\nsuperagent(http://visionmedia.github.io/superagent/) 是个 http 方面的库，轻量灵活而且简单易用。与 JQuery 的 ajax 类似，可以发起 get 或 post 请求。简单的用法如下：\n```\n request\n    .get(url)\n    .end(function(err, res){\n        // TODO \n    });\n```\n\n- ** cheerio **\ncheerio(https://github.com/cheeriojs/cheerio) 可以理解成一个 Node.js 版的 jquery，用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。\n```\nlet cheerio = require('cheerio')\nlet $ = cheerio.load('<h2 class=\"title\">Hello world</h2>')\n$('h2.title').text('Hello there!')\n$('h2').addClass('welcome')\n```\n\n- ** EventProxy **\nEventProxy 利用事件机制解耦复杂业务逻辑，移除被广为诟病的深度callback嵌套问题，将串行等待变成并行等待，提升多异步协作场景下的执行效率。\n过去的，深度嵌套的，串行的长这样：\n```\nvar render = function (template, data) {\n  _.template(template, data);\n};\n$.get(\"template\", function (template) {\n  // something\n  $.get(\"data\", function (data) {\n    // something\n  });\n});\n```\n\n现在，无深度嵌套的，并行的长这样：\n```\nvar ep = EventProxy.create(\"template\", \"data\", \"l10n\", function (template, data, l10n) {\n    _.template(template, data, l10n);\n});\n$.get(\"template\", function (template) {\n    // something\n    ep.emit(\"template\", template);\n});\n$.get(\"data\", function (data) {\n    // something\n    ep.emit(\"data\", data);\n});\n```\n\n- ** async **\nasync (http://caolan.github.io/async/) 可以用来控制并发连接数。为什么要控制并发数呢？我们在写爬虫的时候，如果有 1000 个链接要去爬，那么不可能同时发出 1000 个并发链接出去（站长可能会以为你是恶意攻击...）。我们需要控制一下并发的数量，比如并发 10 个就好，然后慢慢抓完这 1000 个链接。这里主要用mapLimit这个方法，例如：\n```\nasync.mapLimit(urls, 10, function (url, callback) {\n  // fetchData(url, callback);\n}, function (err, result) {\n  // handle err\n});\n```\n## 实现大致过程\n- ** 安装依赖 **\n```\nnpm init\nnpm install MODULES --save\n```\n\n- ** 引入类库 **\n```\nvar eventproxy = require('eventproxy');\nvar superagent = require('superagent');\nvar cheerio = require('cheerio');\nvar async = require(\"async\");\n```\n\n- ** 取得主题所有url，并且注册到eventproxy中 **\n```\n  superagent.get(url).end(function(err, sres) {\n      if(err) {\n          return next(err);\n      }\n      var $ = cheerio.load(sres.text);\n      $(element).each(function(idx, element) {\n          // save urls\n      })\n      ep.emit('topic_html', urls); // 交给eventproxy统一处理\n  })\n```\n\n- ** EventProxy控制异步结束，进入每一个主题 **\n```\nep.after('topic_html', pageUrls.length, function(topics) {\n    // fetchTopics\n})\n```\n\n- ** async控制最大并发数，在结果中取出callback返回来的整个结果数组。 **\n```\nasync.mapLimit(topicUrls, 5, function (myurl, callback) {\n    fetchUrl(myurl, callback);\n}, function (err, result) {\n    console.log(result);\n});\n```\n\n至此，主要工作都完成了，看看输出结果：\n\n![](http://p1.bpimg.com/575157/0504d2df35f19581.png)\n\n## 总结\n异步编程是nodejs的一大特点，也是容易让人晕头转向的地方，利用EventProxy很好的解决了异步回调深度嵌套的问题；另外，发现cheerio是个好东西啊，对于习惯使用jquery的同学来说简直不能再好。虽然明白爬别人的东西是不好的，但是合理的发掘并整理资源，最大限度的方便自己查阅和学习，也是很酷的。\n\n## 附件（源代码）\n\n```\nvar eventproxy = require('eventproxy');\nvar superagent = require('superagent');\nvar cheerio = require('cheerio');\nvar async = require(\"async\");\nvar ep = new eventproxy();\nvar url = require(\"url\"); // url 模块是nodejs里面的\nvar baseUrl = \"https://segmentfault.com/questions\";\n// 存放所有主题链接链接\nvar topicUrls = [];\nvar pageUrls = [];\n// 爬前两页的问题\nfor (var i=1; i<3; i++) {\n    pageUrls.push(baseUrl + '?&page=' + i);\n}\n/**\n * 所有的url请求完成后，ep控制异步结束，进入每一个主题\n */\nep.after('topic_html', pageUrls.length, function(topics) {\n    var concurrencyCount = 0;  // 记录并发数\n    /**\n     * 进入主题，取得题目、作者、回答数\n     * @callback topics [{title:'', author:'', answer:''}]\n     */\n    var fetchUrl = function(myurl, callback) {\n        var fetchStart = new Date().getTime();\n        concurrencyCount++;\n        console.log('现在的并发数是', concurrencyCount, '，正在抓取的是', myurl);\n        superagent.get(myurl).end(function(err, ssres) {\n            if (err) {\n                callback(err, myurl + ' error happened!');\n            }\n            var time = new Date().getTime() - fetchStart;\n            console.log('抓取 ' + myurl + ' 成功', '，耗时' + time + '毫秒');\n            concurrencyCount--;\n            var $ = cheerio.load(ssres.text);\n            var result = {\n              title: $('#questionTitle>a').text(),\n              author: $('.question__author>a>strong').text(),\n              answer: $('#answers-title').text()\n            };\n            callback(null, result);\n          })\n    }\n    // 控制最大并发数为5，在结果中取出callback返回来的整个结果数组。\n    async.mapLimit(topicUrls, 5, function (myurl, callback) {\n        fetchUrl(myurl, callback);\n    }, function (err, result) {\n        console.log('===== result: ======\\n', result);\n        //res.send(result);\n    });\n})\n// 获得所有主题链接 topicUrls\npageUrls.forEach(function(page) {\n    superagent.get(page).end(function(err, sres) {\n        if(err) {\n            return next(err);\n        }\n        var $ = cheerio.load(sres.text);\n        $('.stream-list__item').each(function(idx, element) {\n            var $element = $(element).find('.title>a');\n            var href = url.resolve(baseUrl, $element.attr('href'));\n            topicUrls.push(href);\n        })\n        console.log('get topicUrls successful!\\n');\n        ep.emit('topic_html', topicUrls);\n    })\n})\n```\n> 不知道怎么会在前后多出来那么大一块空白-_-","source":"_posts/node简单的爬虫.md","raw":"---\ntitle: node简单的爬虫\ndate: 2016-09-26 23:39:46\ntags: 前端\n---\n\n最近学习 nodejs ，做一个爬虫玩玩。不知深浅爬了 segmentfault ，希望站长大大不要封我的IP，只是做练习用用，同时也表达对贵社区的喜爱和敬重。\n<!-- more -->\n\n## 目标\n- 目标网站：https://segmentfault.com\n- 分别进入每个主题，取得问题的题目、提问者、回答数，并打印。\n\n## 输出示例: \n```\n[\n  {\n    \"title\": \"python 是否存在限制 key 的 dict\",\n    \"author\": \"caimaoy\",\n    \"answer\": \"2个回答\"\n  },\n  {\n    \"title\": \"vue.js 主页面组件替换或跳转\",\n    \"author\": \"yulingsong\",\n    \"answer\": \"2个回答\"\n  }\n]\n```\n## 知识点\n- 安装 node 依赖包；\n- 使用 superagent 抓取网页；\n- 使用 cheerio 分析网页；\n- 使用 eventproxy 控制异步回调；\n- 使用 async 控制并发。\n\n## 主要库的介绍\n\n- ** superagent **\nsuperagent(http://visionmedia.github.io/superagent/) 是个 http 方面的库，轻量灵活而且简单易用。与 JQuery 的 ajax 类似，可以发起 get 或 post 请求。简单的用法如下：\n```\n request\n    .get(url)\n    .end(function(err, res){\n        // TODO \n    });\n```\n\n- ** cheerio **\ncheerio(https://github.com/cheeriojs/cheerio) 可以理解成一个 Node.js 版的 jquery，用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。\n```\nlet cheerio = require('cheerio')\nlet $ = cheerio.load('<h2 class=\"title\">Hello world</h2>')\n$('h2.title').text('Hello there!')\n$('h2').addClass('welcome')\n```\n\n- ** EventProxy **\nEventProxy 利用事件机制解耦复杂业务逻辑，移除被广为诟病的深度callback嵌套问题，将串行等待变成并行等待，提升多异步协作场景下的执行效率。\n过去的，深度嵌套的，串行的长这样：\n```\nvar render = function (template, data) {\n  _.template(template, data);\n};\n$.get(\"template\", function (template) {\n  // something\n  $.get(\"data\", function (data) {\n    // something\n  });\n});\n```\n\n现在，无深度嵌套的，并行的长这样：\n```\nvar ep = EventProxy.create(\"template\", \"data\", \"l10n\", function (template, data, l10n) {\n    _.template(template, data, l10n);\n});\n$.get(\"template\", function (template) {\n    // something\n    ep.emit(\"template\", template);\n});\n$.get(\"data\", function (data) {\n    // something\n    ep.emit(\"data\", data);\n});\n```\n\n- ** async **\nasync (http://caolan.github.io/async/) 可以用来控制并发连接数。为什么要控制并发数呢？我们在写爬虫的时候，如果有 1000 个链接要去爬，那么不可能同时发出 1000 个并发链接出去（站长可能会以为你是恶意攻击...）。我们需要控制一下并发的数量，比如并发 10 个就好，然后慢慢抓完这 1000 个链接。这里主要用mapLimit这个方法，例如：\n```\nasync.mapLimit(urls, 10, function (url, callback) {\n  // fetchData(url, callback);\n}, function (err, result) {\n  // handle err\n});\n```\n## 实现大致过程\n- ** 安装依赖 **\n```\nnpm init\nnpm install MODULES --save\n```\n\n- ** 引入类库 **\n```\nvar eventproxy = require('eventproxy');\nvar superagent = require('superagent');\nvar cheerio = require('cheerio');\nvar async = require(\"async\");\n```\n\n- ** 取得主题所有url，并且注册到eventproxy中 **\n```\n  superagent.get(url).end(function(err, sres) {\n      if(err) {\n          return next(err);\n      }\n      var $ = cheerio.load(sres.text);\n      $(element).each(function(idx, element) {\n          // save urls\n      })\n      ep.emit('topic_html', urls); // 交给eventproxy统一处理\n  })\n```\n\n- ** EventProxy控制异步结束，进入每一个主题 **\n```\nep.after('topic_html', pageUrls.length, function(topics) {\n    // fetchTopics\n})\n```\n\n- ** async控制最大并发数，在结果中取出callback返回来的整个结果数组。 **\n```\nasync.mapLimit(topicUrls, 5, function (myurl, callback) {\n    fetchUrl(myurl, callback);\n}, function (err, result) {\n    console.log(result);\n});\n```\n\n至此，主要工作都完成了，看看输出结果：\n\n![](http://p1.bpimg.com/575157/0504d2df35f19581.png)\n\n## 总结\n异步编程是nodejs的一大特点，也是容易让人晕头转向的地方，利用EventProxy很好的解决了异步回调深度嵌套的问题；另外，发现cheerio是个好东西啊，对于习惯使用jquery的同学来说简直不能再好。虽然明白爬别人的东西是不好的，但是合理的发掘并整理资源，最大限度的方便自己查阅和学习，也是很酷的。\n\n## 附件（源代码）\n\n```\nvar eventproxy = require('eventproxy');\nvar superagent = require('superagent');\nvar cheerio = require('cheerio');\nvar async = require(\"async\");\nvar ep = new eventproxy();\nvar url = require(\"url\"); // url 模块是nodejs里面的\nvar baseUrl = \"https://segmentfault.com/questions\";\n// 存放所有主题链接链接\nvar topicUrls = [];\nvar pageUrls = [];\n// 爬前两页的问题\nfor (var i=1; i<3; i++) {\n    pageUrls.push(baseUrl + '?&page=' + i);\n}\n/**\n * 所有的url请求完成后，ep控制异步结束，进入每一个主题\n */\nep.after('topic_html', pageUrls.length, function(topics) {\n    var concurrencyCount = 0;  // 记录并发数\n    /**\n     * 进入主题，取得题目、作者、回答数\n     * @callback topics [{title:'', author:'', answer:''}]\n     */\n    var fetchUrl = function(myurl, callback) {\n        var fetchStart = new Date().getTime();\n        concurrencyCount++;\n        console.log('现在的并发数是', concurrencyCount, '，正在抓取的是', myurl);\n        superagent.get(myurl).end(function(err, ssres) {\n            if (err) {\n                callback(err, myurl + ' error happened!');\n            }\n            var time = new Date().getTime() - fetchStart;\n            console.log('抓取 ' + myurl + ' 成功', '，耗时' + time + '毫秒');\n            concurrencyCount--;\n            var $ = cheerio.load(ssres.text);\n            var result = {\n              title: $('#questionTitle>a').text(),\n              author: $('.question__author>a>strong').text(),\n              answer: $('#answers-title').text()\n            };\n            callback(null, result);\n          })\n    }\n    // 控制最大并发数为5，在结果中取出callback返回来的整个结果数组。\n    async.mapLimit(topicUrls, 5, function (myurl, callback) {\n        fetchUrl(myurl, callback);\n    }, function (err, result) {\n        console.log('===== result: ======\\n', result);\n        //res.send(result);\n    });\n})\n// 获得所有主题链接 topicUrls\npageUrls.forEach(function(page) {\n    superagent.get(page).end(function(err, sres) {\n        if(err) {\n            return next(err);\n        }\n        var $ = cheerio.load(sres.text);\n        $('.stream-list__item').each(function(idx, element) {\n            var $element = $(element).find('.title>a');\n            var href = url.resolve(baseUrl, $element.attr('href'));\n            topicUrls.push(href);\n        })\n        console.log('get topicUrls successful!\\n');\n        ep.emit('topic_html', topicUrls);\n    })\n})\n```\n> 不知道怎么会在前后多出来那么大一块空白-_-","slug":"node简单的爬虫","published":1,"updated":"2016-12-29T01:48:43.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a76q00036klbcnn88jph","content":"<p>最近学习 nodejs ，做一个爬虫玩玩。不知深浅爬了 segmentfault ，希望站长大大不要封我的IP，只是做练习用用，同时也表达对贵社区的喜爱和敬重。<br><a id=\"more\"></a></p>\n<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ul>\n<li>目标网站：<a href=\"https://segmentfault.com\" target=\"_blank\" rel=\"external\">https://segmentfault.com</a></li>\n<li>分别进入每个主题，取得问题的题目、提问者、回答数，并打印。</li>\n</ul>\n<h2 id=\"输出示例\"><a href=\"#输出示例\" class=\"headerlink\" title=\"输出示例:\"></a>输出示例:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;title&quot;: &quot;python 是否存在限制 key 的 dict&quot;,</div><div class=\"line\">    &quot;author&quot;: &quot;caimaoy&quot;,</div><div class=\"line\">    &quot;answer&quot;: &quot;2个回答&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;title&quot;: &quot;vue.js 主页面组件替换或跳转&quot;,</div><div class=\"line\">    &quot;author&quot;: &quot;yulingsong&quot;,</div><div class=\"line\">    &quot;answer&quot;: &quot;2个回答&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>安装 node 依赖包；</li>\n<li>使用 superagent 抓取网页；</li>\n<li>使用 cheerio 分析网页；</li>\n<li>使用 eventproxy 控制异步回调；</li>\n<li>使用 async 控制并发。</li>\n</ul>\n<h2 id=\"主要库的介绍\"><a href=\"#主要库的介绍\" class=\"headerlink\" title=\"主要库的介绍\"></a>主要库的介绍</h2><ul>\n<li><p><strong> superagent </strong><br>superagent(<a href=\"http://visionmedia.github.io/superagent/\" target=\"_blank\" rel=\"external\">http://visionmedia.github.io/superagent/</a>) 是个 http 方面的库，轻量灵活而且简单易用。与 JQuery 的 ajax 类似，可以发起 get 或 post 请求。简单的用法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">request</div><div class=\"line\">   .get(url)</div><div class=\"line\">   .end(function(err, res)&#123;</div><div class=\"line\">       // TODO </div><div class=\"line\">   &#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> cheerio </strong><br>cheerio(<a href=\"https://github.com/cheeriojs/cheerio\" target=\"_blank\" rel=\"external\">https://github.com/cheeriojs/cheerio</a>) 可以理解成一个 Node.js 版的 jquery，用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cheerio = require(&apos;cheerio&apos;)</div><div class=\"line\">let $ = cheerio.load(&apos;&lt;h2 class=&quot;title&quot;&gt;Hello world&lt;/h2&gt;&apos;)</div><div class=\"line\">$(&apos;h2.title&apos;).text(&apos;Hello there!&apos;)</div><div class=\"line\">$(&apos;h2&apos;).addClass(&apos;welcome&apos;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> EventProxy </strong><br>EventProxy 利用事件机制解耦复杂业务逻辑，移除被广为诟病的深度callback嵌套问题，将串行等待变成并行等待，提升多异步协作场景下的执行效率。<br>过去的，深度嵌套的，串行的长这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var render = function (template, data) &#123;</div><div class=\"line\">  _.template(template, data);</div><div class=\"line\">&#125;;</div><div class=\"line\">$.get(&quot;template&quot;, function (template) &#123;</div><div class=\"line\">  // something</div><div class=\"line\">  $.get(&quot;data&quot;, function (data) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>现在，无深度嵌套的，并行的长这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var ep = EventProxy.create(&quot;template&quot;, &quot;data&quot;, &quot;l10n&quot;, function (template, data, l10n) &#123;</div><div class=\"line\">    _.template(template, data, l10n);</div><div class=\"line\">&#125;);</div><div class=\"line\">$.get(&quot;template&quot;, function (template) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">    ep.emit(&quot;template&quot;, template);</div><div class=\"line\">&#125;);</div><div class=\"line\">$.get(&quot;data&quot;, function (data) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">    ep.emit(&quot;data&quot;, data);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<ul>\n<li><strong> async </strong><br>async (<a href=\"http://caolan.github.io/async/\" target=\"_blank\" rel=\"external\">http://caolan.github.io/async/</a>) 可以用来控制并发连接数。为什么要控制并发数呢？我们在写爬虫的时候，如果有 1000 个链接要去爬，那么不可能同时发出 1000 个并发链接出去（站长可能会以为你是恶意攻击…）。我们需要控制一下并发的数量，比如并发 10 个就好，然后慢慢抓完这 1000 个链接。这里主要用mapLimit这个方法，例如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">async.mapLimit(urls, 10, function (url, callback) &#123;</div><div class=\"line\">  // fetchData(url, callback);</div><div class=\"line\">&#125;, function (err, result) &#123;</div><div class=\"line\">  // handle err</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"实现大致过程\"><a href=\"#实现大致过程\" class=\"headerlink\" title=\"实现大致过程\"></a>实现大致过程</h2><ul>\n<li><p><strong> 安装依赖 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div><div class=\"line\">npm install MODULES --save</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> 引入类库 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var eventproxy = require(&apos;eventproxy&apos;);</div><div class=\"line\">var superagent = require(&apos;superagent&apos;);</div><div class=\"line\">var cheerio = require(&apos;cheerio&apos;);</div><div class=\"line\">var async = require(&quot;async&quot;);</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> 取得主题所有url，并且注册到eventproxy中 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">superagent.get(url).end(function(err, sres) &#123;</div><div class=\"line\">    if(err) &#123;</div><div class=\"line\">        return next(err);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var $ = cheerio.load(sres.text);</div><div class=\"line\">    $(element).each(function(idx, element) &#123;</div><div class=\"line\">        // save urls</div><div class=\"line\">    &#125;)</div><div class=\"line\">    ep.emit(&apos;topic_html&apos;, urls); // 交给eventproxy统一处理</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> EventProxy控制异步结束，进入每一个主题 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ep.after(&apos;topic_html&apos;, pageUrls.length, function(topics) &#123;</div><div class=\"line\">    // fetchTopics</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> async控制最大并发数，在结果中取出callback返回来的整个结果数组。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">async.mapLimit(topicUrls, 5, function (myurl, callback) &#123;</div><div class=\"line\">    fetchUrl(myurl, callback);</div><div class=\"line\">&#125;, function (err, result) &#123;</div><div class=\"line\">    console.log(result);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>至此，主要工作都完成了，看看输出结果：</p>\n<p><img src=\"http://p1.bpimg.com/575157/0504d2df35f19581.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>异步编程是nodejs的一大特点，也是容易让人晕头转向的地方，利用EventProxy很好的解决了异步回调深度嵌套的问题；另外，发现cheerio是个好东西啊，对于习惯使用jquery的同学来说简直不能再好。虽然明白爬别人的东西是不好的，但是合理的发掘并整理资源，最大限度的方便自己查阅和学习，也是很酷的。</p>\n<h2 id=\"附件（源代码）\"><a href=\"#附件（源代码）\" class=\"headerlink\" title=\"附件（源代码）\"></a>附件（源代码）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">var eventproxy = require(&apos;eventproxy&apos;);</div><div class=\"line\">var superagent = require(&apos;superagent&apos;);</div><div class=\"line\">var cheerio = require(&apos;cheerio&apos;);</div><div class=\"line\">var async = require(&quot;async&quot;);</div><div class=\"line\">var ep = new eventproxy();</div><div class=\"line\">var url = require(&quot;url&quot;); // url 模块是nodejs里面的</div><div class=\"line\">var baseUrl = &quot;https://segmentfault.com/questions&quot;;</div><div class=\"line\">// 存放所有主题链接链接</div><div class=\"line\">var topicUrls = [];</div><div class=\"line\">var pageUrls = [];</div><div class=\"line\">// 爬前两页的问题</div><div class=\"line\">for (var i=1; i&lt;3; i++) &#123;</div><div class=\"line\">    pageUrls.push(baseUrl + &apos;?&amp;page=&apos; + i);</div><div class=\"line\">&#125;</div><div class=\"line\">/**</div><div class=\"line\"> * 所有的url请求完成后，ep控制异步结束，进入每一个主题</div><div class=\"line\"> */</div><div class=\"line\">ep.after(&apos;topic_html&apos;, pageUrls.length, function(topics) &#123;</div><div class=\"line\">    var concurrencyCount = 0;  // 记录并发数</div><div class=\"line\">    /**</div><div class=\"line\">     * 进入主题，取得题目、作者、回答数</div><div class=\"line\">     * @callback topics [&#123;title:&apos;&apos;, author:&apos;&apos;, answer:&apos;&apos;&#125;]</div><div class=\"line\">     */</div><div class=\"line\">    var fetchUrl = function(myurl, callback) &#123;</div><div class=\"line\">        var fetchStart = new Date().getTime();</div><div class=\"line\">        concurrencyCount++;</div><div class=\"line\">        console.log(&apos;现在的并发数是&apos;, concurrencyCount, &apos;，正在抓取的是&apos;, myurl);</div><div class=\"line\">        superagent.get(myurl).end(function(err, ssres) &#123;</div><div class=\"line\">            if (err) &#123;</div><div class=\"line\">                callback(err, myurl + &apos; error happened!&apos;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            var time = new Date().getTime() - fetchStart;</div><div class=\"line\">            console.log(&apos;抓取 &apos; + myurl + &apos; 成功&apos;, &apos;，耗时&apos; + time + &apos;毫秒&apos;);</div><div class=\"line\">            concurrencyCount--;</div><div class=\"line\">            var $ = cheerio.load(ssres.text);</div><div class=\"line\">            var result = &#123;</div><div class=\"line\">              title: $(&apos;#questionTitle&gt;a&apos;).text(),</div><div class=\"line\">              author: $(&apos;.question__author&gt;a&gt;strong&apos;).text(),</div><div class=\"line\">              answer: $(&apos;#answers-title&apos;).text()</div><div class=\"line\">            &#125;;</div><div class=\"line\">            callback(null, result);</div><div class=\"line\">          &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    // 控制最大并发数为5，在结果中取出callback返回来的整个结果数组。</div><div class=\"line\">    async.mapLimit(topicUrls, 5, function (myurl, callback) &#123;</div><div class=\"line\">        fetchUrl(myurl, callback);</div><div class=\"line\">    &#125;, function (err, result) &#123;</div><div class=\"line\">        console.log(&apos;===== result: ======\\n&apos;, result);</div><div class=\"line\">        //res.send(result);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;)</div><div class=\"line\">// 获得所有主题链接 topicUrls</div><div class=\"line\">pageUrls.forEach(function(page) &#123;</div><div class=\"line\">    superagent.get(page).end(function(err, sres) &#123;</div><div class=\"line\">        if(err) &#123;</div><div class=\"line\">            return next(err);</div><div class=\"line\">        &#125;</div><div class=\"line\">        var $ = cheerio.load(sres.text);</div><div class=\"line\">        $(&apos;.stream-list__item&apos;).each(function(idx, element) &#123;</div><div class=\"line\">            var $element = $(element).find(&apos;.title&gt;a&apos;);</div><div class=\"line\">            var href = url.resolve(baseUrl, $element.attr(&apos;href&apos;));</div><div class=\"line\">            topicUrls.push(href);</div><div class=\"line\">        &#125;)</div><div class=\"line\">        console.log(&apos;get topicUrls successful!\\n&apos;);</div><div class=\"line\">        ep.emit(&apos;topic_html&apos;, topicUrls);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>不知道怎么会在前后多出来那么大一块空白-_-</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>最近学习 nodejs ，做一个爬虫玩玩。不知深浅爬了 segmentfault ，希望站长大大不要封我的IP，只是做练习用用，同时也表达对贵社区的喜爱和敬重。<br>","more":"</p>\n<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ul>\n<li>目标网站：<a href=\"https://segmentfault.com\" target=\"_blank\" rel=\"external\">https://segmentfault.com</a></li>\n<li>分别进入每个主题，取得问题的题目、提问者、回答数，并打印。</li>\n</ul>\n<h2 id=\"输出示例\"><a href=\"#输出示例\" class=\"headerlink\" title=\"输出示例:\"></a>输出示例:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;title&quot;: &quot;python 是否存在限制 key 的 dict&quot;,</div><div class=\"line\">    &quot;author&quot;: &quot;caimaoy&quot;,</div><div class=\"line\">    &quot;answer&quot;: &quot;2个回答&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    &quot;title&quot;: &quot;vue.js 主页面组件替换或跳转&quot;,</div><div class=\"line\">    &quot;author&quot;: &quot;yulingsong&quot;,</div><div class=\"line\">    &quot;answer&quot;: &quot;2个回答&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>安装 node 依赖包；</li>\n<li>使用 superagent 抓取网页；</li>\n<li>使用 cheerio 分析网页；</li>\n<li>使用 eventproxy 控制异步回调；</li>\n<li>使用 async 控制并发。</li>\n</ul>\n<h2 id=\"主要库的介绍\"><a href=\"#主要库的介绍\" class=\"headerlink\" title=\"主要库的介绍\"></a>主要库的介绍</h2><ul>\n<li><p><strong> superagent </strong><br>superagent(<a href=\"http://visionmedia.github.io/superagent/\" target=\"_blank\" rel=\"external\">http://visionmedia.github.io/superagent/</a>) 是个 http 方面的库，轻量灵活而且简单易用。与 JQuery 的 ajax 类似，可以发起 get 或 post 请求。简单的用法如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">request</div><div class=\"line\">   .get(url)</div><div class=\"line\">   .end(function(err, res)&#123;</div><div class=\"line\">       // TODO </div><div class=\"line\">   &#125;);</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> cheerio </strong><br>cheerio(<a href=\"https://github.com/cheeriojs/cheerio\" target=\"_blank\" rel=\"external\">https://github.com/cheeriojs/cheerio</a>) 可以理解成一个 Node.js 版的 jquery，用来从网页中以 css selector 取数据，使用方式跟 jquery 一样一样的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">let cheerio = require(&apos;cheerio&apos;)</div><div class=\"line\">let $ = cheerio.load(&apos;&lt;h2 class=&quot;title&quot;&gt;Hello world&lt;/h2&gt;&apos;)</div><div class=\"line\">$(&apos;h2.title&apos;).text(&apos;Hello there!&apos;)</div><div class=\"line\">$(&apos;h2&apos;).addClass(&apos;welcome&apos;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> EventProxy </strong><br>EventProxy 利用事件机制解耦复杂业务逻辑，移除被广为诟病的深度callback嵌套问题，将串行等待变成并行等待，提升多异步协作场景下的执行效率。<br>过去的，深度嵌套的，串行的长这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var render = function (template, data) &#123;</div><div class=\"line\">  _.template(template, data);</div><div class=\"line\">&#125;;</div><div class=\"line\">$.get(&quot;template&quot;, function (template) &#123;</div><div class=\"line\">  // something</div><div class=\"line\">  $.get(&quot;data&quot;, function (data) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">  &#125;);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>现在，无深度嵌套的，并行的长这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">var ep = EventProxy.create(&quot;template&quot;, &quot;data&quot;, &quot;l10n&quot;, function (template, data, l10n) &#123;</div><div class=\"line\">    _.template(template, data, l10n);</div><div class=\"line\">&#125;);</div><div class=\"line\">$.get(&quot;template&quot;, function (template) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">    ep.emit(&quot;template&quot;, template);</div><div class=\"line\">&#125;);</div><div class=\"line\">$.get(&quot;data&quot;, function (data) &#123;</div><div class=\"line\">    // something</div><div class=\"line\">    ep.emit(&quot;data&quot;, data);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<ul>\n<li><strong> async </strong><br>async (<a href=\"http://caolan.github.io/async/\" target=\"_blank\" rel=\"external\">http://caolan.github.io/async/</a>) 可以用来控制并发连接数。为什么要控制并发数呢？我们在写爬虫的时候，如果有 1000 个链接要去爬，那么不可能同时发出 1000 个并发链接出去（站长可能会以为你是恶意攻击…）。我们需要控制一下并发的数量，比如并发 10 个就好，然后慢慢抓完这 1000 个链接。这里主要用mapLimit这个方法，例如：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">async.mapLimit(urls, 10, function (url, callback) &#123;</div><div class=\"line\">  // fetchData(url, callback);</div><div class=\"line\">&#125;, function (err, result) &#123;</div><div class=\"line\">  // handle err</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"实现大致过程\"><a href=\"#实现大致过程\" class=\"headerlink\" title=\"实现大致过程\"></a>实现大致过程</h2><ul>\n<li><p><strong> 安装依赖 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm init</div><div class=\"line\">npm install MODULES --save</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> 引入类库 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">var eventproxy = require(&apos;eventproxy&apos;);</div><div class=\"line\">var superagent = require(&apos;superagent&apos;);</div><div class=\"line\">var cheerio = require(&apos;cheerio&apos;);</div><div class=\"line\">var async = require(&quot;async&quot;);</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> 取得主题所有url，并且注册到eventproxy中 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">superagent.get(url).end(function(err, sres) &#123;</div><div class=\"line\">    if(err) &#123;</div><div class=\"line\">        return next(err);</div><div class=\"line\">    &#125;</div><div class=\"line\">    var $ = cheerio.load(sres.text);</div><div class=\"line\">    $(element).each(function(idx, element) &#123;</div><div class=\"line\">        // save urls</div><div class=\"line\">    &#125;)</div><div class=\"line\">    ep.emit(&apos;topic_html&apos;, urls); // 交给eventproxy统一处理</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> EventProxy控制异步结束，进入每一个主题 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ep.after(&apos;topic_html&apos;, pageUrls.length, function(topics) &#123;</div><div class=\"line\">    // fetchTopics</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n</li>\n<li><p><strong> async控制最大并发数，在结果中取出callback返回来的整个结果数组。 </strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">async.mapLimit(topicUrls, 5, function (myurl, callback) &#123;</div><div class=\"line\">    fetchUrl(myurl, callback);</div><div class=\"line\">&#125;, function (err, result) &#123;</div><div class=\"line\">    console.log(result);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>至此，主要工作都完成了，看看输出结果：</p>\n<p><img src=\"http://p1.bpimg.com/575157/0504d2df35f19581.png\" alt=\"\"></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>异步编程是nodejs的一大特点，也是容易让人晕头转向的地方，利用EventProxy很好的解决了异步回调深度嵌套的问题；另外，发现cheerio是个好东西啊，对于习惯使用jquery的同学来说简直不能再好。虽然明白爬别人的东西是不好的，但是合理的发掘并整理资源，最大限度的方便自己查阅和学习，也是很酷的。</p>\n<h2 id=\"附件（源代码）\"><a href=\"#附件（源代码）\" class=\"headerlink\" title=\"附件（源代码）\"></a>附件（源代码）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\">var eventproxy = require(&apos;eventproxy&apos;);</div><div class=\"line\">var superagent = require(&apos;superagent&apos;);</div><div class=\"line\">var cheerio = require(&apos;cheerio&apos;);</div><div class=\"line\">var async = require(&quot;async&quot;);</div><div class=\"line\">var ep = new eventproxy();</div><div class=\"line\">var url = require(&quot;url&quot;); // url 模块是nodejs里面的</div><div class=\"line\">var baseUrl = &quot;https://segmentfault.com/questions&quot;;</div><div class=\"line\">// 存放所有主题链接链接</div><div class=\"line\">var topicUrls = [];</div><div class=\"line\">var pageUrls = [];</div><div class=\"line\">// 爬前两页的问题</div><div class=\"line\">for (var i=1; i&lt;3; i++) &#123;</div><div class=\"line\">    pageUrls.push(baseUrl + &apos;?&amp;page=&apos; + i);</div><div class=\"line\">&#125;</div><div class=\"line\">/**</div><div class=\"line\"> * 所有的url请求完成后，ep控制异步结束，进入每一个主题</div><div class=\"line\"> */</div><div class=\"line\">ep.after(&apos;topic_html&apos;, pageUrls.length, function(topics) &#123;</div><div class=\"line\">    var concurrencyCount = 0;  // 记录并发数</div><div class=\"line\">    /**</div><div class=\"line\">     * 进入主题，取得题目、作者、回答数</div><div class=\"line\">     * @callback topics [&#123;title:&apos;&apos;, author:&apos;&apos;, answer:&apos;&apos;&#125;]</div><div class=\"line\">     */</div><div class=\"line\">    var fetchUrl = function(myurl, callback) &#123;</div><div class=\"line\">        var fetchStart = new Date().getTime();</div><div class=\"line\">        concurrencyCount++;</div><div class=\"line\">        console.log(&apos;现在的并发数是&apos;, concurrencyCount, &apos;，正在抓取的是&apos;, myurl);</div><div class=\"line\">        superagent.get(myurl).end(function(err, ssres) &#123;</div><div class=\"line\">            if (err) &#123;</div><div class=\"line\">                callback(err, myurl + &apos; error happened!&apos;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            var time = new Date().getTime() - fetchStart;</div><div class=\"line\">            console.log(&apos;抓取 &apos; + myurl + &apos; 成功&apos;, &apos;，耗时&apos; + time + &apos;毫秒&apos;);</div><div class=\"line\">            concurrencyCount--;</div><div class=\"line\">            var $ = cheerio.load(ssres.text);</div><div class=\"line\">            var result = &#123;</div><div class=\"line\">              title: $(&apos;#questionTitle&gt;a&apos;).text(),</div><div class=\"line\">              author: $(&apos;.question__author&gt;a&gt;strong&apos;).text(),</div><div class=\"line\">              answer: $(&apos;#answers-title&apos;).text()</div><div class=\"line\">            &#125;;</div><div class=\"line\">            callback(null, result);</div><div class=\"line\">          &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">    // 控制最大并发数为5，在结果中取出callback返回来的整个结果数组。</div><div class=\"line\">    async.mapLimit(topicUrls, 5, function (myurl, callback) &#123;</div><div class=\"line\">        fetchUrl(myurl, callback);</div><div class=\"line\">    &#125;, function (err, result) &#123;</div><div class=\"line\">        console.log(&apos;===== result: ======\\n&apos;, result);</div><div class=\"line\">        //res.send(result);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;)</div><div class=\"line\">// 获得所有主题链接 topicUrls</div><div class=\"line\">pageUrls.forEach(function(page) &#123;</div><div class=\"line\">    superagent.get(page).end(function(err, sres) &#123;</div><div class=\"line\">        if(err) &#123;</div><div class=\"line\">            return next(err);</div><div class=\"line\">        &#125;</div><div class=\"line\">        var $ = cheerio.load(sres.text);</div><div class=\"line\">        $(&apos;.stream-list__item&apos;).each(function(idx, element) &#123;</div><div class=\"line\">            var $element = $(element).find(&apos;.title&gt;a&apos;);</div><div class=\"line\">            var href = url.resolve(baseUrl, $element.attr(&apos;href&apos;));</div><div class=\"line\">            topicUrls.push(href);</div><div class=\"line\">        &#125;)</div><div class=\"line\">        console.log(&apos;get topicUrls successful!\\n&apos;);</div><div class=\"line\">        ep.emit(&apos;topic_html&apos;, topicUrls);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>不知道怎么会在前后多出来那么大一块空白-_-</p>\n</blockquote>"},{"title":"vue-2.0 loading 组件","date":"2016-11-09T07:33:23.000Z","_content":"\n参考 [vue-hackernews-2.0](https://github.com/vuejs/vue-hackernews-2.0) 项目里面的 spinner.vue 组件，做了简单的修改。修改后的组件添加了信息提示的功能，而且对模板做了调整，方便模块化使用。\n\n> ** 功能描述：**\n\n- 列表加载时显示（转圈圈）；\n- 加载成功，结果非空则隐藏加载动画，结果为空时显示\"没有符合条件的记录\"；\n- 请求失败显示\"服务器异常\"。\n\n<!-- more -->\n\n> ** 看看效果 **\n\n![](http://ocz1xi4bl.bkt.clouddn.com/531738d44b48d3a8.gif)\n\n> ** 使用方法：**\n\n需要提供 list、loading 和 resultCode 配合。list: 列表数据；loading: 加载中；resultCode: 状态码。\n\n```\n<loading :list=\"list\" :loading=\"loading\" :resultCode=\"resultCode\"></loading>\n```\n\n> ** template **\n\n圈圈效果跟 hackernews 里的一样，这里添加了提示信息，resultCode 需要接口返回，不一定 200，也可以返回一些其它的状态码，跟接口配合好就行。\n\n```\n<template>\n    <div class=\"loading-wrap\">\n        <svg v-if=\"loading\" class=\"loading\" width=\"44px\" height=\"44px\" viewBox=\"0 0 44 44\">\n            <circle class=\"path\" fill=\"none\" stroke-width=\"4\" stroke-linecap=\"round\" cx=\"22\" cy=\"22\" r=\"20\"></circle>\n        </svg>\n        <div v-if=\"!loading\">\n            <div v-if=\"(!list && resultCode == '200')\" class=\"loading-text\">没有符合条件的记录</div>\n            <div v-if=\"resultCode != '200'\" class=\"loading-text\">服务器异常</div>\n        </div>\n    </div>\n</template>\n```\n\n> ** script **\n\nprops 是从父组件里面传过来的数据。\n\n```\n<script>\n    export default {\n        props: ['list', 'loading', 'resultCode']\n    }\n</script>\n```\n\n> ** style **\n\n这里变化也不大，主要是将圈圈放在了一个 div 里面，并给提示信息留了点地方，适合模块化的显示。\n\n```\n<style>\n\t.loading-wrap {\n\t    text-align: center;\n\t}\n\t.loading-text {\n\t    color: #999;\n\t    padding: 25px 0;\n\t}\n\t.loading {\n\t    animation: rotator 1.4s linear infinite;\n\t}\n\t@keyframes rotator {\n\t    0% {\n\t        transform: scale(0.5) rotate(0deg);\n\t    }\n\t    100% {\n\t        transform: scale(0.5) rotate(270deg);\n\t    }\n\t}\n\t.loading .path {\n\t    stroke: #009dd7;\n\t    stroke-dasharray: 126;\n\t    stroke-dashoffset: 0;\n\t    transform-origin: center;\n\t    animation: dash 1.4s ease-in-out infinite;\n\t}\n\t@keyframes dash {\n\t    0% {\n\t        stroke-dashoffset: 126;\n\t    }\n\t    50% {\n\t        stroke-dashoffset: 63;\n\t        transform: rotate(135deg);\n\t    }\n\t    100% {\n\t        stroke-dashoffset: 126;\n\t        transform: rotate(450deg);\n\t    }\n\t}\n</style>\n```\n\n> ** 总结 **\n\n最近工作中在用 angular，相对来说 vue 更容易上手，文档也很全。把模板和数据交互写在一个文件里很赞，尤其是与外界交互较少的组件，定义和使用都很方便。复杂一点的系统配合 vuex 共享状态，我已经迫不及待想在实战中试试了（可惜公司没有用 vue 的项目 /哭）。","source":"_posts/vue-2-0-loading-组件.md","raw":"---\ntitle: vue-2.0 loading 组件\ndate: 2016-11-09 15:33:23\ntags: 前端\n---\n\n参考 [vue-hackernews-2.0](https://github.com/vuejs/vue-hackernews-2.0) 项目里面的 spinner.vue 组件，做了简单的修改。修改后的组件添加了信息提示的功能，而且对模板做了调整，方便模块化使用。\n\n> ** 功能描述：**\n\n- 列表加载时显示（转圈圈）；\n- 加载成功，结果非空则隐藏加载动画，结果为空时显示\"没有符合条件的记录\"；\n- 请求失败显示\"服务器异常\"。\n\n<!-- more -->\n\n> ** 看看效果 **\n\n![](http://ocz1xi4bl.bkt.clouddn.com/531738d44b48d3a8.gif)\n\n> ** 使用方法：**\n\n需要提供 list、loading 和 resultCode 配合。list: 列表数据；loading: 加载中；resultCode: 状态码。\n\n```\n<loading :list=\"list\" :loading=\"loading\" :resultCode=\"resultCode\"></loading>\n```\n\n> ** template **\n\n圈圈效果跟 hackernews 里的一样，这里添加了提示信息，resultCode 需要接口返回，不一定 200，也可以返回一些其它的状态码，跟接口配合好就行。\n\n```\n<template>\n    <div class=\"loading-wrap\">\n        <svg v-if=\"loading\" class=\"loading\" width=\"44px\" height=\"44px\" viewBox=\"0 0 44 44\">\n            <circle class=\"path\" fill=\"none\" stroke-width=\"4\" stroke-linecap=\"round\" cx=\"22\" cy=\"22\" r=\"20\"></circle>\n        </svg>\n        <div v-if=\"!loading\">\n            <div v-if=\"(!list && resultCode == '200')\" class=\"loading-text\">没有符合条件的记录</div>\n            <div v-if=\"resultCode != '200'\" class=\"loading-text\">服务器异常</div>\n        </div>\n    </div>\n</template>\n```\n\n> ** script **\n\nprops 是从父组件里面传过来的数据。\n\n```\n<script>\n    export default {\n        props: ['list', 'loading', 'resultCode']\n    }\n</script>\n```\n\n> ** style **\n\n这里变化也不大，主要是将圈圈放在了一个 div 里面，并给提示信息留了点地方，适合模块化的显示。\n\n```\n<style>\n\t.loading-wrap {\n\t    text-align: center;\n\t}\n\t.loading-text {\n\t    color: #999;\n\t    padding: 25px 0;\n\t}\n\t.loading {\n\t    animation: rotator 1.4s linear infinite;\n\t}\n\t@keyframes rotator {\n\t    0% {\n\t        transform: scale(0.5) rotate(0deg);\n\t    }\n\t    100% {\n\t        transform: scale(0.5) rotate(270deg);\n\t    }\n\t}\n\t.loading .path {\n\t    stroke: #009dd7;\n\t    stroke-dasharray: 126;\n\t    stroke-dashoffset: 0;\n\t    transform-origin: center;\n\t    animation: dash 1.4s ease-in-out infinite;\n\t}\n\t@keyframes dash {\n\t    0% {\n\t        stroke-dashoffset: 126;\n\t    }\n\t    50% {\n\t        stroke-dashoffset: 63;\n\t        transform: rotate(135deg);\n\t    }\n\t    100% {\n\t        stroke-dashoffset: 126;\n\t        transform: rotate(450deg);\n\t    }\n\t}\n</style>\n```\n\n> ** 总结 **\n\n最近工作中在用 angular，相对来说 vue 更容易上手，文档也很全。把模板和数据交互写在一个文件里很赞，尤其是与外界交互较少的组件，定义和使用都很方便。复杂一点的系统配合 vuex 共享状态，我已经迫不及待想在实战中试试了（可惜公司没有用 vue 的项目 /哭）。","slug":"vue-2-0-loading-组件","published":1,"updated":"2017-06-15T12:08:13.790Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a77600046klbglwxxnma","content":"<p>参考 <a href=\"https://github.com/vuejs/vue-hackernews-2.0\" target=\"_blank\" rel=\"external\">vue-hackernews-2.0</a> 项目里面的 spinner.vue 组件，做了简单的修改。修改后的组件添加了信息提示的功能，而且对模板做了调整，方便模块化使用。</p>\n<blockquote>\n<p><strong> 功能描述：</strong></p>\n</blockquote>\n<ul>\n<li>列表加载时显示（转圈圈）；</li>\n<li>加载成功，结果非空则隐藏加载动画，结果为空时显示”没有符合条件的记录”；</li>\n<li>请求失败显示”服务器异常”。</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p><strong> 看看效果 </strong></p>\n</blockquote>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/531738d44b48d3a8.gif\" alt=\"\"></p>\n<blockquote>\n<p><strong> 使用方法：</strong></p>\n</blockquote>\n<p>需要提供 list、loading 和 resultCode 配合。list: 列表数据；loading: 加载中；resultCode: 状态码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;loading :list=&quot;list&quot; :loading=&quot;loading&quot; :resultCode=&quot;resultCode&quot;&gt;&lt;/loading&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> template </strong></p>\n</blockquote>\n<p>圈圈效果跟 hackernews 里的一样，这里添加了提示信息，resultCode 需要接口返回，不一定 200，也可以返回一些其它的状态码，跟接口配合好就行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">    &lt;div class=&quot;loading-wrap&quot;&gt;</div><div class=\"line\">        &lt;svg v-if=&quot;loading&quot; class=&quot;loading&quot; width=&quot;44px&quot; height=&quot;44px&quot; viewBox=&quot;0 0 44 44&quot;&gt;</div><div class=\"line\">            &lt;circle class=&quot;path&quot; fill=&quot;none&quot; stroke-width=&quot;4&quot; stroke-linecap=&quot;round&quot; cx=&quot;22&quot; cy=&quot;22&quot; r=&quot;20&quot;&gt;&lt;/circle&gt;</div><div class=\"line\">        &lt;/svg&gt;</div><div class=\"line\">        &lt;div v-if=&quot;!loading&quot;&gt;</div><div class=\"line\">            &lt;div v-if=&quot;(!list &amp;&amp; resultCode == &apos;200&apos;)&quot; class=&quot;loading-text&quot;&gt;没有符合条件的记录&lt;/div&gt;</div><div class=\"line\">            &lt;div v-if=&quot;resultCode != &apos;200&apos;&quot; class=&quot;loading-text&quot;&gt;服务器异常&lt;/div&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> script </strong></p>\n</blockquote>\n<p>props 是从父组件里面传过来的数据。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">    export default &#123;</div><div class=\"line\">        props: [&apos;list&apos;, &apos;loading&apos;, &apos;resultCode&apos;]</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> style </strong></p>\n</blockquote>\n<p>这里变化也不大，主要是将圈圈放在了一个 div 里面，并给提示信息留了点地方，适合模块化的显示。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">\t.loading-wrap &#123;</div><div class=\"line\">\t    text-align: center;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading-text &#123;</div><div class=\"line\">\t    color: #999;</div><div class=\"line\">\t    padding: 25px 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading &#123;</div><div class=\"line\">\t    animation: rotator 1.4s linear infinite;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t@keyframes rotator &#123;</div><div class=\"line\">\t    0% &#123;</div><div class=\"line\">\t        transform: scale(0.5) rotate(0deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    100% &#123;</div><div class=\"line\">\t        transform: scale(0.5) rotate(270deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading .path &#123;</div><div class=\"line\">\t    stroke: #009dd7;</div><div class=\"line\">\t    stroke-dasharray: 126;</div><div class=\"line\">\t    stroke-dashoffset: 0;</div><div class=\"line\">\t    transform-origin: center;</div><div class=\"line\">\t    animation: dash 1.4s ease-in-out infinite;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t@keyframes dash &#123;</div><div class=\"line\">\t    0% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 126;</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    50% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 63;</div><div class=\"line\">\t        transform: rotate(135deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    100% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 126;</div><div class=\"line\">\t        transform: rotate(450deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> 总结 </strong></p>\n</blockquote>\n<p>最近工作中在用 angular，相对来说 vue 更容易上手，文档也很全。把模板和数据交互写在一个文件里很赞，尤其是与外界交互较少的组件，定义和使用都很方便。复杂一点的系统配合 vuex 共享状态，我已经迫不及待想在实战中试试了（可惜公司没有用 vue 的项目 /哭）。</p>\n","site":{"data":{}},"excerpt":"<p>参考 <a href=\"https://github.com/vuejs/vue-hackernews-2.0\" target=\"_blank\" rel=\"external\">vue-hackernews-2.0</a> 项目里面的 spinner.vue 组件，做了简单的修改。修改后的组件添加了信息提示的功能，而且对模板做了调整，方便模块化使用。</p>\n<blockquote>\n<p><strong> 功能描述：</strong></p>\n</blockquote>\n<ul>\n<li>列表加载时显示（转圈圈）；</li>\n<li>加载成功，结果非空则隐藏加载动画，结果为空时显示”没有符合条件的记录”；</li>\n<li>请求失败显示”服务器异常”。</li>\n</ul>","more":"<blockquote>\n<p><strong> 看看效果 </strong></p>\n</blockquote>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/531738d44b48d3a8.gif\" alt=\"\"></p>\n<blockquote>\n<p><strong> 使用方法：</strong></p>\n</blockquote>\n<p>需要提供 list、loading 和 resultCode 配合。list: 列表数据；loading: 加载中；resultCode: 状态码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;loading :list=&quot;list&quot; :loading=&quot;loading&quot; :resultCode=&quot;resultCode&quot;&gt;&lt;/loading&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> template </strong></p>\n</blockquote>\n<p>圈圈效果跟 hackernews 里的一样，这里添加了提示信息，resultCode 需要接口返回，不一定 200，也可以返回一些其它的状态码，跟接口配合好就行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;template&gt;</div><div class=\"line\">    &lt;div class=&quot;loading-wrap&quot;&gt;</div><div class=\"line\">        &lt;svg v-if=&quot;loading&quot; class=&quot;loading&quot; width=&quot;44px&quot; height=&quot;44px&quot; viewBox=&quot;0 0 44 44&quot;&gt;</div><div class=\"line\">            &lt;circle class=&quot;path&quot; fill=&quot;none&quot; stroke-width=&quot;4&quot; stroke-linecap=&quot;round&quot; cx=&quot;22&quot; cy=&quot;22&quot; r=&quot;20&quot;&gt;&lt;/circle&gt;</div><div class=\"line\">        &lt;/svg&gt;</div><div class=\"line\">        &lt;div v-if=&quot;!loading&quot;&gt;</div><div class=\"line\">            &lt;div v-if=&quot;(!list &amp;&amp; resultCode == &apos;200&apos;)&quot; class=&quot;loading-text&quot;&gt;没有符合条件的记录&lt;/div&gt;</div><div class=\"line\">            &lt;div v-if=&quot;resultCode != &apos;200&apos;&quot; class=&quot;loading-text&quot;&gt;服务器异常&lt;/div&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    &lt;/div&gt;</div><div class=\"line\">&lt;/template&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> script </strong></p>\n</blockquote>\n<p>props 是从父组件里面传过来的数据。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;script&gt;</div><div class=\"line\">    export default &#123;</div><div class=\"line\">        props: [&apos;list&apos;, &apos;loading&apos;, &apos;resultCode&apos;]</div><div class=\"line\">    &#125;</div><div class=\"line\">&lt;/script&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> style </strong></p>\n</blockquote>\n<p>这里变化也不大，主要是将圈圈放在了一个 div 里面，并给提示信息留了点地方，适合模块化的显示。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">\t.loading-wrap &#123;</div><div class=\"line\">\t    text-align: center;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading-text &#123;</div><div class=\"line\">\t    color: #999;</div><div class=\"line\">\t    padding: 25px 0;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading &#123;</div><div class=\"line\">\t    animation: rotator 1.4s linear infinite;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t@keyframes rotator &#123;</div><div class=\"line\">\t    0% &#123;</div><div class=\"line\">\t        transform: scale(0.5) rotate(0deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    100% &#123;</div><div class=\"line\">\t        transform: scale(0.5) rotate(270deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t.loading .path &#123;</div><div class=\"line\">\t    stroke: #009dd7;</div><div class=\"line\">\t    stroke-dasharray: 126;</div><div class=\"line\">\t    stroke-dashoffset: 0;</div><div class=\"line\">\t    transform-origin: center;</div><div class=\"line\">\t    animation: dash 1.4s ease-in-out infinite;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t@keyframes dash &#123;</div><div class=\"line\">\t    0% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 126;</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    50% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 63;</div><div class=\"line\">\t        transform: rotate(135deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t    100% &#123;</div><div class=\"line\">\t        stroke-dashoffset: 126;</div><div class=\"line\">\t        transform: rotate(450deg);</div><div class=\"line\">\t    &#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&lt;/style&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong> 总结 </strong></p>\n</blockquote>\n<p>最近工作中在用 angular，相对来说 vue 更容易上手，文档也很全。把模板和数据交互写在一个文件里很赞，尤其是与外界交互较少的组件，定义和使用都很方便。复杂一点的系统配合 vuex 共享状态，我已经迫不及待想在实战中试试了（可惜公司没有用 vue 的项目 /哭）。</p>"},{"title":"一年转身不过几个瞬间","date":"2017-01-07T16:37:36.000Z","_content":"\n给琴上了新弦，本来想重新摆弄一下，刚弹了两个音手指疼的受不了，以前磨出来的那点老茧早就没了，于是就在房间坐了一阵。生活就像一个蒙布的旧盒子，你永远不知道下一秒会摸到什么，也不知道开始褪色的那一时刻。总有一些契机让人接触到从未想过的事物。\n\n记得学生时期总喜欢玩弄文字游戏，热衷于用一切华丽的辞藻和让人摸不着头脑的句式，去形容自己实质上单纯的有些愚蠢的生活，让他在文章里变得复杂。而现在却想把一切的一切，变得简单。从上大学开始就觉得时间过得快了，越来越快，一年的时光不过像相机里的快门一样，但把每个瞬间放大，却又有那么多美好可言。\n\n<!-- more -->\n\n![](http://ocz1xi4bl.bkt.clouddn.com/4977ea35d5f2ee07.jpg)\n\n** @ 珠江 **，2016 年最大的转身，离开了陪伴 20 年的校园。回不去的大学城，有一万个难以言说的理由。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/feca15a02c923c78.jpg)\n\n** @ 博尔塔拉 **，画里的家乡总是那么美，但只有身处其中，才能感受到美如画之外的深入骨髓的深刻。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f1feff60b27bc87f.jpg)\n\n** @ 香港 **，我买了一块表，它只能看时间。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f9e6aa6009be04a0.jpg)\n\n** @ 大理 **，放空自己，山水自带净化心灵的功能。迄今为止最长的一次旅行，每到一座城，都有留下的冲动。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/615fbfef369a0635.jpg)\n\n** @ 香格里拉 **，这是我到过的最干净的地方，可能是因为它距离天空近，才显得格外的神圣。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/0c61f814cf71dd72.jpg)\n\n** @ 华师 **，如果非要给自己的学术生涯划一个节点的话，估计就是这里了。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg)\n\n** @ 福州 **，印象最深的就是满大街的摩的，和肆意狂飙的出租车司机。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/9a71636bb8ae7620.jpg)\n\n** @ 平潭岛 **，做为成长在西北的孩子，门前的小水沟都够我玩好几年的。从这里开始，我喜欢上大海了。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/62dd814525796660.jpg)\n\n** @ 厦门 **，傍晚坐在海边，听着号称某知名流浪歌手唱的歌，算是一段美好的记忆。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/40c6f06b6621ab07.jpg)\n\n** @ 湄洲岛 **，这是我唯一一次一个人跑到一个地方流浪，没有抽风，感觉还好。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f5139312af8ad072.jpg)\n\n** @ 外伶仃岛 **，惶恐滩头说惶恐，零丁洋里叹零丁。\n\n好了，回头看看似乎只得出一个结论：像素略渣。后悔在学校的时候没有多买点东西，原来最有钱的阶段我已经过去了。\n\n2017 年不求做全新的自己，只希望心存善念，留住美好。","source":"_posts/一年转身不过几个瞬间.md","raw":"---\ntitle: 一年转身不过几个瞬间\ndate: 2017-01-08 00:37:36\ntags: 随笔\n---\n\n给琴上了新弦，本来想重新摆弄一下，刚弹了两个音手指疼的受不了，以前磨出来的那点老茧早就没了，于是就在房间坐了一阵。生活就像一个蒙布的旧盒子，你永远不知道下一秒会摸到什么，也不知道开始褪色的那一时刻。总有一些契机让人接触到从未想过的事物。\n\n记得学生时期总喜欢玩弄文字游戏，热衷于用一切华丽的辞藻和让人摸不着头脑的句式，去形容自己实质上单纯的有些愚蠢的生活，让他在文章里变得复杂。而现在却想把一切的一切，变得简单。从上大学开始就觉得时间过得快了，越来越快，一年的时光不过像相机里的快门一样，但把每个瞬间放大，却又有那么多美好可言。\n\n<!-- more -->\n\n![](http://ocz1xi4bl.bkt.clouddn.com/4977ea35d5f2ee07.jpg)\n\n** @ 珠江 **，2016 年最大的转身，离开了陪伴 20 年的校园。回不去的大学城，有一万个难以言说的理由。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/feca15a02c923c78.jpg)\n\n** @ 博尔塔拉 **，画里的家乡总是那么美，但只有身处其中，才能感受到美如画之外的深入骨髓的深刻。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f1feff60b27bc87f.jpg)\n\n** @ 香港 **，我买了一块表，它只能看时间。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f9e6aa6009be04a0.jpg)\n\n** @ 大理 **，放空自己，山水自带净化心灵的功能。迄今为止最长的一次旅行，每到一座城，都有留下的冲动。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/615fbfef369a0635.jpg)\n\n** @ 香格里拉 **，这是我到过的最干净的地方，可能是因为它距离天空近，才显得格外的神圣。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/0c61f814cf71dd72.jpg)\n\n** @ 华师 **，如果非要给自己的学术生涯划一个节点的话，估计就是这里了。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg)\n\n** @ 福州 **，印象最深的就是满大街的摩的，和肆意狂飙的出租车司机。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/9a71636bb8ae7620.jpg)\n\n** @ 平潭岛 **，做为成长在西北的孩子，门前的小水沟都够我玩好几年的。从这里开始，我喜欢上大海了。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/62dd814525796660.jpg)\n\n** @ 厦门 **，傍晚坐在海边，听着号称某知名流浪歌手唱的歌，算是一段美好的记忆。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/40c6f06b6621ab07.jpg)\n\n** @ 湄洲岛 **，这是我唯一一次一个人跑到一个地方流浪，没有抽风，感觉还好。\n\n![](http://ocz1xi4bl.bkt.clouddn.com/f5139312af8ad072.jpg)\n\n** @ 外伶仃岛 **，惶恐滩头说惶恐，零丁洋里叹零丁。\n\n好了，回头看看似乎只得出一个结论：像素略渣。后悔在学校的时候没有多买点东西，原来最有钱的阶段我已经过去了。\n\n2017 年不求做全新的自己，只希望心存善念，留住美好。","slug":"一年转身不过几个瞬间","published":1,"updated":"2017-06-15T11:31:51.098Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a77600056klbq7gjlt37","content":"<p>给琴上了新弦，本来想重新摆弄一下，刚弹了两个音手指疼的受不了，以前磨出来的那点老茧早就没了，于是就在房间坐了一阵。生活就像一个蒙布的旧盒子，你永远不知道下一秒会摸到什么，也不知道开始褪色的那一时刻。总有一些契机让人接触到从未想过的事物。</p>\n<p>记得学生时期总喜欢玩弄文字游戏，热衷于用一切华丽的辞藻和让人摸不着头脑的句式，去形容自己实质上单纯的有些愚蠢的生活，让他在文章里变得复杂。而现在却想把一切的一切，变得简单。从上大学开始就觉得时间过得快了，越来越快，一年的时光不过像相机里的快门一样，但把每个瞬间放大，却又有那么多美好可言。</p>\n<a id=\"more\"></a>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/4977ea35d5f2ee07.jpg\" alt=\"\"></p>\n<p><strong> @ 珠江 </strong>，2016 年最大的转身，离开了陪伴 20 年的校园。回不去的大学城，有一万个难以言说的理由。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/feca15a02c923c78.jpg\" alt=\"\"></p>\n<p><strong> @ 博尔塔拉 </strong>，画里的家乡总是那么美，但只有身处其中，才能感受到美如画之外的深入骨髓的深刻。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f1feff60b27bc87f.jpg\" alt=\"\"></p>\n<p><strong> @ 香港 </strong>，我买了一块表，它只能看时间。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f9e6aa6009be04a0.jpg\" alt=\"\"></p>\n<p><strong> @ 大理 </strong>，放空自己，山水自带净化心灵的功能。迄今为止最长的一次旅行，每到一座城，都有留下的冲动。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/615fbfef369a0635.jpg\" alt=\"\"></p>\n<p><strong> @ 香格里拉 </strong>，这是我到过的最干净的地方，可能是因为它距离天空近，才显得格外的神圣。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/0c61f814cf71dd72.jpg\" alt=\"\"></p>\n<p><strong> @ 华师 </strong>，如果非要给自己的学术生涯划一个节点的话，估计就是这里了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg\" alt=\"\"></p>\n<p><strong> @ 福州 </strong>，印象最深的就是满大街的摩的，和肆意狂飙的出租车司机。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/9a71636bb8ae7620.jpg\" alt=\"\"></p>\n<p><strong> @ 平潭岛 </strong>，做为成长在西北的孩子，门前的小水沟都够我玩好几年的。从这里开始，我喜欢上大海了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/62dd814525796660.jpg\" alt=\"\"></p>\n<p><strong> @ 厦门 </strong>，傍晚坐在海边，听着号称某知名流浪歌手唱的歌，算是一段美好的记忆。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/40c6f06b6621ab07.jpg\" alt=\"\"></p>\n<p><strong> @ 湄洲岛 </strong>，这是我唯一一次一个人跑到一个地方流浪，没有抽风，感觉还好。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f5139312af8ad072.jpg\" alt=\"\"></p>\n<p><strong> @ 外伶仃岛 </strong>，惶恐滩头说惶恐，零丁洋里叹零丁。</p>\n<p>好了，回头看看似乎只得出一个结论：像素略渣。后悔在学校的时候没有多买点东西，原来最有钱的阶段我已经过去了。</p>\n<p>2017 年不求做全新的自己，只希望心存善念，留住美好。</p>\n","site":{"data":{}},"excerpt":"<p>给琴上了新弦，本来想重新摆弄一下，刚弹了两个音手指疼的受不了，以前磨出来的那点老茧早就没了，于是就在房间坐了一阵。生活就像一个蒙布的旧盒子，你永远不知道下一秒会摸到什么，也不知道开始褪色的那一时刻。总有一些契机让人接触到从未想过的事物。</p>\n<p>记得学生时期总喜欢玩弄文字游戏，热衷于用一切华丽的辞藻和让人摸不着头脑的句式，去形容自己实质上单纯的有些愚蠢的生活，让他在文章里变得复杂。而现在却想把一切的一切，变得简单。从上大学开始就觉得时间过得快了，越来越快，一年的时光不过像相机里的快门一样，但把每个瞬间放大，却又有那么多美好可言。</p>","more":"<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/4977ea35d5f2ee07.jpg\" alt=\"\"></p>\n<p><strong> @ 珠江 </strong>，2016 年最大的转身，离开了陪伴 20 年的校园。回不去的大学城，有一万个难以言说的理由。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/feca15a02c923c78.jpg\" alt=\"\"></p>\n<p><strong> @ 博尔塔拉 </strong>，画里的家乡总是那么美，但只有身处其中，才能感受到美如画之外的深入骨髓的深刻。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f1feff60b27bc87f.jpg\" alt=\"\"></p>\n<p><strong> @ 香港 </strong>，我买了一块表，它只能看时间。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f9e6aa6009be04a0.jpg\" alt=\"\"></p>\n<p><strong> @ 大理 </strong>，放空自己，山水自带净化心灵的功能。迄今为止最长的一次旅行，每到一座城，都有留下的冲动。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/615fbfef369a0635.jpg\" alt=\"\"></p>\n<p><strong> @ 香格里拉 </strong>，这是我到过的最干净的地方，可能是因为它距离天空近，才显得格外的神圣。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/0c61f814cf71dd72.jpg\" alt=\"\"></p>\n<p><strong> @ 华师 </strong>，如果非要给自己的学术生涯划一个节点的话，估计就是这里了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg\" alt=\"\"></p>\n<p><strong> @ 福州 </strong>，印象最深的就是满大街的摩的，和肆意狂飙的出租车司机。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/9a71636bb8ae7620.jpg\" alt=\"\"></p>\n<p><strong> @ 平潭岛 </strong>，做为成长在西北的孩子，门前的小水沟都够我玩好几年的。从这里开始，我喜欢上大海了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/62dd814525796660.jpg\" alt=\"\"></p>\n<p><strong> @ 厦门 </strong>，傍晚坐在海边，听着号称某知名流浪歌手唱的歌，算是一段美好的记忆。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/40c6f06b6621ab07.jpg\" alt=\"\"></p>\n<p><strong> @ 湄洲岛 </strong>，这是我唯一一次一个人跑到一个地方流浪，没有抽风，感觉还好。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/f5139312af8ad072.jpg\" alt=\"\"></p>\n<p><strong> @ 外伶仃岛 </strong>，惶恐滩头说惶恐，零丁洋里叹零丁。</p>\n<p>好了，回头看看似乎只得出一个结论：像素略渣。后悔在学校的时候没有多买点东西，原来最有钱的阶段我已经过去了。</p>\n<p>2017 年不求做全新的自己，只希望心存善念，留住美好。</p>"},{"title":"兼容之殇","date":"2016-09-01T15:56:37.000Z","_content":"\n接着上一篇的话题，第一次浏览器大战以微软胜利收场，IE通过捆绑在Windows平台拥有巨大的用户群，一度占据百分之九十几的市场份额。**然而总有人不服**，网景算是一个，竞争失利后无奈将Netscape浏览器开源，意图在于吸引来大量的开发者完善软件，并且成立了非正式组织Mozilla，从此Mozilla登上了历史舞台。<!-- more -->该组织独立运作来负责Mozilla Application Suite的研发。这一时期网景放弃了绿色蜥蜴的造型，开始使用一只凶猛的、线条粗犷的、红色的、类似霸王龙的形象，明显可以看出反攻的意图。这一时期还出现了另一款浏览器——Opera，快速小巧十分好用，并且支持W3C协议（这个后面再说）。\n\n然而并没有卵用。IE凭借巨大的平台优势，牢牢地坐稳浏览器老大的宝座，不仅如此，IE自设计之初就问题百出，到了IE6-IE8几乎没有什么更新。这样导致的结果是大大的影响了HTML,CSS以及javascript的发展。早在94年，由Tim Berner-Lee和几家资助的公司就创建了W3C理事会，该组织旨在规范网页标记语言，促进WEB技术的兼容和发展。而此时不可一世的IE根本不理会W3C的标准，对新的WEB协议很多都不支持，这样使得WEB开发者直到今天仍然需要写一堆的额外代码，仅仅是为了兼容IE浏览器。\n\n比如这样\n\n```\n<!–[if lt IE 7]>\n<script src=”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE7.js” type=”text/javascript”></script>\n<![endif]–>\n```\n\n还有这样\n\n```\n<meta http-equiv=“X-UA-Compatible” content=“chrome=1″ />\n```\n\n这些丑陋繁杂的代码仅仅是为了解决IE的兼容性。以上的历史遗留问题延续至今，好在近几年微软在市场竞争中更加开放，IE10、11逐步跟上最近技术的步伐，WIN10起更是巨大的变革，新版的浏览器摒弃了IE改称Edge，也许这也是微软对浏览器一次自我的蜕变。从近年浏览的发展来看，谁对用户更友好，对技术更依赖，对开发者更有利，谁就将占据市场的主动。\n","source":"_posts/兼容之殇.md","raw":"---\ntitle: 兼容之殇\ndate: 2016-09-01 23:56:37\ntags: 扯\n---\n\n接着上一篇的话题，第一次浏览器大战以微软胜利收场，IE通过捆绑在Windows平台拥有巨大的用户群，一度占据百分之九十几的市场份额。**然而总有人不服**，网景算是一个，竞争失利后无奈将Netscape浏览器开源，意图在于吸引来大量的开发者完善软件，并且成立了非正式组织Mozilla，从此Mozilla登上了历史舞台。<!-- more -->该组织独立运作来负责Mozilla Application Suite的研发。这一时期网景放弃了绿色蜥蜴的造型，开始使用一只凶猛的、线条粗犷的、红色的、类似霸王龙的形象，明显可以看出反攻的意图。这一时期还出现了另一款浏览器——Opera，快速小巧十分好用，并且支持W3C协议（这个后面再说）。\n\n然而并没有卵用。IE凭借巨大的平台优势，牢牢地坐稳浏览器老大的宝座，不仅如此，IE自设计之初就问题百出，到了IE6-IE8几乎没有什么更新。这样导致的结果是大大的影响了HTML,CSS以及javascript的发展。早在94年，由Tim Berner-Lee和几家资助的公司就创建了W3C理事会，该组织旨在规范网页标记语言，促进WEB技术的兼容和发展。而此时不可一世的IE根本不理会W3C的标准，对新的WEB协议很多都不支持，这样使得WEB开发者直到今天仍然需要写一堆的额外代码，仅仅是为了兼容IE浏览器。\n\n比如这样\n\n```\n<!–[if lt IE 7]>\n<script src=”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE7.js” type=”text/javascript”></script>\n<![endif]–>\n```\n\n还有这样\n\n```\n<meta http-equiv=“X-UA-Compatible” content=“chrome=1″ />\n```\n\n这些丑陋繁杂的代码仅仅是为了解决IE的兼容性。以上的历史遗留问题延续至今，好在近几年微软在市场竞争中更加开放，IE10、11逐步跟上最近技术的步伐，WIN10起更是巨大的变革，新版的浏览器摒弃了IE改称Edge，也许这也是微软对浏览器一次自我的蜕变。从近年浏览的发展来看，谁对用户更友好，对技术更依赖，对开发者更有利，谁就将占据市场的主动。\n","slug":"兼容之殇","published":1,"updated":"2016-09-22T11:12:59.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a77m00086klbqa3rf86t","content":"<p>接着上一篇的话题，第一次浏览器大战以微软胜利收场，IE通过捆绑在Windows平台拥有巨大的用户群，一度占据百分之九十几的市场份额。<strong>然而总有人不服</strong>，网景算是一个，竞争失利后无奈将Netscape浏览器开源，意图在于吸引来大量的开发者完善软件，并且成立了非正式组织Mozilla，从此Mozilla登上了历史舞台。<a id=\"more\"></a>该组织独立运作来负责Mozilla Application Suite的研发。这一时期网景放弃了绿色蜥蜴的造型，开始使用一只凶猛的、线条粗犷的、红色的、类似霸王龙的形象，明显可以看出反攻的意图。这一时期还出现了另一款浏览器——Opera，快速小巧十分好用，并且支持W3C协议（这个后面再说）。</p>\n<p>然而并没有卵用。IE凭借巨大的平台优势，牢牢地坐稳浏览器老大的宝座，不仅如此，IE自设计之初就问题百出，到了IE6-IE8几乎没有什么更新。这样导致的结果是大大的影响了HTML,CSS以及javascript的发展。早在94年，由Tim Berner-Lee和几家资助的公司就创建了W3C理事会，该组织旨在规范网页标记语言，促进WEB技术的兼容和发展。而此时不可一世的IE根本不理会W3C的标准，对新的WEB协议很多都不支持，这样使得WEB开发者直到今天仍然需要写一堆的额外代码，仅仅是为了兼容IE浏览器。</p>\n<p>比如这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!–[if lt IE 7]&gt;</div><div class=\"line\">&lt;script src=”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE7.js” type=”text/javascript”&gt;&lt;/script&gt;</div><div class=\"line\">&lt;![endif]–&gt;</div></pre></td></tr></table></figure>\n<p>还有这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=“X-UA-Compatible” content=“chrome=1″ /&gt;</div></pre></td></tr></table></figure>\n<p>这些丑陋繁杂的代码仅仅是为了解决IE的兼容性。以上的历史遗留问题延续至今，好在近几年微软在市场竞争中更加开放，IE10、11逐步跟上最近技术的步伐，WIN10起更是巨大的变革，新版的浏览器摒弃了IE改称Edge，也许这也是微软对浏览器一次自我的蜕变。从近年浏览的发展来看，谁对用户更友好，对技术更依赖，对开发者更有利，谁就将占据市场的主动。</p>\n","site":{"data":{}},"excerpt":"<p>接着上一篇的话题，第一次浏览器大战以微软胜利收场，IE通过捆绑在Windows平台拥有巨大的用户群，一度占据百分之九十几的市场份额。<strong>然而总有人不服</strong>，网景算是一个，竞争失利后无奈将Netscape浏览器开源，意图在于吸引来大量的开发者完善软件，并且成立了非正式组织Mozilla，从此Mozilla登上了历史舞台。","more":"该组织独立运作来负责Mozilla Application Suite的研发。这一时期网景放弃了绿色蜥蜴的造型，开始使用一只凶猛的、线条粗犷的、红色的、类似霸王龙的形象，明显可以看出反攻的意图。这一时期还出现了另一款浏览器——Opera，快速小巧十分好用，并且支持W3C协议（这个后面再说）。</p>\n<p>然而并没有卵用。IE凭借巨大的平台优势，牢牢地坐稳浏览器老大的宝座，不仅如此，IE自设计之初就问题百出，到了IE6-IE8几乎没有什么更新。这样导致的结果是大大的影响了HTML,CSS以及javascript的发展。早在94年，由Tim Berner-Lee和几家资助的公司就创建了W3C理事会，该组织旨在规范网页标记语言，促进WEB技术的兼容和发展。而此时不可一世的IE根本不理会W3C的标准，对新的WEB协议很多都不支持，这样使得WEB开发者直到今天仍然需要写一堆的额外代码，仅仅是为了兼容IE浏览器。</p>\n<p>比如这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!–[if lt IE 7]&gt;</div><div class=\"line\">&lt;script src=”http://ie7-js.googlecode.com/svn/version/2.0(beta)/IE7.js” type=”text/javascript”&gt;&lt;/script&gt;</div><div class=\"line\">&lt;![endif]–&gt;</div></pre></td></tr></table></figure>\n<p>还有这样</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;meta http-equiv=“X-UA-Compatible” content=“chrome=1″ /&gt;</div></pre></td></tr></table></figure>\n<p>这些丑陋繁杂的代码仅仅是为了解决IE的兼容性。以上的历史遗留问题延续至今，好在近几年微软在市场竞争中更加开放，IE10、11逐步跟上最近技术的步伐，WIN10起更是巨大的变革，新版的浏览器摒弃了IE改称Edge，也许这也是微软对浏览器一次自我的蜕变。从近年浏览的发展来看，谁对用户更友好，对技术更依赖，对开发者更有利，谁就将占据市场的主动。</p>"},{"title":"写在重新开始的地方","date":"2016-08-29T15:25:07.000Z","_content":"\n很久没有写点什么了，任何什么。如果不是重新搭建了这个博客，可能还没那么大的决心写东西，实在太懒了。总要逼自己一把，记录点滴，比在手机上看几篇鸡汤来的实在。\n\n算一算毕业也就刚一个多月吧，整个人还没有完全转换角色，仍然晚睡晚起，周末如果没事会去附近泡一下图书馆。最近一直在翻看白岩松写的《白说》，里面的每一篇文章都是整理自他近几年在各地的演讲，都是些谈天说地的内容。<!-- more-->现如今不论是谁出本书已经不是什么新鲜事，一年随便出门到大学里讲几次，要不了几年就成一本书了。还有一些书是整理自博客的内容，比如才买的技术大牛朴灵写的《深入浅出nodejs》，其中很多内容都是来自他的博客以及社区。当然也有腾出时间，专职著书的，柴静离开央视后，专门花了几年时间写下《看见》，记录自己过去几年在各地采访的所见所感。不论采用什么方式，当他们开始回顾，或是记录，或是整理的时候，都是对自己、对周围的人事一次新的认识。在这个鸡汤泛滥的时代，不论接受了多少杂乱的信息，当它们经过自己的大脑过滤，输出的结果总会留下那么一点自己的烙印。\n\n刚刚电视里放了一段《出彩中国人》的内容，一个女孩唱了一首歌，实在没什么亮点，周立波问她唱歌意味着什么，女孩因为紧张颤颤巍巍的几乎说不出话，最后紧握双拳勉强说出：“音乐是我的半条命”。在场的人都挺震惊的，更加惊恐的是三位评委，他们实在难以决定到底给不给她出彩，给吧...唱的实在不怎么样；不给吧...残忍夺取别人半条命。听多了马云在各种场合演说：梦想总是要有的，万一实现了呢...很多时候我们表现出对某件事情持久的狂热，或者冲动，而不愿花半分钟的时间去想想这对我意味着什么。\n\n大半夜的写了这些话，最后回过神来，自己不就是想立下决心，以后多写文章嘛，扯这么多没用的...就当自己现在是个刚会写字，认识几个词语，还不会造句的小学生吧。事情的发展总是要从简单到复杂，再回归简单这么一个过程，有开始总是好的。","source":"_posts/写在重新开始的地方.md","raw":"---\ntitle: 写在重新开始的地方\ndate: 2016-08-29 23:25:07\ntags: 随笔\n---\n\n很久没有写点什么了，任何什么。如果不是重新搭建了这个博客，可能还没那么大的决心写东西，实在太懒了。总要逼自己一把，记录点滴，比在手机上看几篇鸡汤来的实在。\n\n算一算毕业也就刚一个多月吧，整个人还没有完全转换角色，仍然晚睡晚起，周末如果没事会去附近泡一下图书馆。最近一直在翻看白岩松写的《白说》，里面的每一篇文章都是整理自他近几年在各地的演讲，都是些谈天说地的内容。<!-- more-->现如今不论是谁出本书已经不是什么新鲜事，一年随便出门到大学里讲几次，要不了几年就成一本书了。还有一些书是整理自博客的内容，比如才买的技术大牛朴灵写的《深入浅出nodejs》，其中很多内容都是来自他的博客以及社区。当然也有腾出时间，专职著书的，柴静离开央视后，专门花了几年时间写下《看见》，记录自己过去几年在各地采访的所见所感。不论采用什么方式，当他们开始回顾，或是记录，或是整理的时候，都是对自己、对周围的人事一次新的认识。在这个鸡汤泛滥的时代，不论接受了多少杂乱的信息，当它们经过自己的大脑过滤，输出的结果总会留下那么一点自己的烙印。\n\n刚刚电视里放了一段《出彩中国人》的内容，一个女孩唱了一首歌，实在没什么亮点，周立波问她唱歌意味着什么，女孩因为紧张颤颤巍巍的几乎说不出话，最后紧握双拳勉强说出：“音乐是我的半条命”。在场的人都挺震惊的，更加惊恐的是三位评委，他们实在难以决定到底给不给她出彩，给吧...唱的实在不怎么样；不给吧...残忍夺取别人半条命。听多了马云在各种场合演说：梦想总是要有的，万一实现了呢...很多时候我们表现出对某件事情持久的狂热，或者冲动，而不愿花半分钟的时间去想想这对我意味着什么。\n\n大半夜的写了这些话，最后回过神来，自己不就是想立下决心，以后多写文章嘛，扯这么多没用的...就当自己现在是个刚会写字，认识几个词语，还不会造句的小学生吧。事情的发展总是要从简单到复杂，再回归简单这么一个过程，有开始总是好的。","slug":"写在重新开始的地方","published":1,"updated":"2016-09-22T11:13:07.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a781000a6klbj60r6enn","content":"<p>很久没有写点什么了，任何什么。如果不是重新搭建了这个博客，可能还没那么大的决心写东西，实在太懒了。总要逼自己一把，记录点滴，比在手机上看几篇鸡汤来的实在。</p>\n<p>算一算毕业也就刚一个多月吧，整个人还没有完全转换角色，仍然晚睡晚起，周末如果没事会去附近泡一下图书馆。最近一直在翻看白岩松写的《白说》，里面的每一篇文章都是整理自他近几年在各地的演讲，都是些谈天说地的内容。<a id=\"more\"></a>现如今不论是谁出本书已经不是什么新鲜事，一年随便出门到大学里讲几次，要不了几年就成一本书了。还有一些书是整理自博客的内容，比如才买的技术大牛朴灵写的《深入浅出nodejs》，其中很多内容都是来自他的博客以及社区。当然也有腾出时间，专职著书的，柴静离开央视后，专门花了几年时间写下《看见》，记录自己过去几年在各地采访的所见所感。不论采用什么方式，当他们开始回顾，或是记录，或是整理的时候，都是对自己、对周围的人事一次新的认识。在这个鸡汤泛滥的时代，不论接受了多少杂乱的信息，当它们经过自己的大脑过滤，输出的结果总会留下那么一点自己的烙印。</p>\n<p>刚刚电视里放了一段《出彩中国人》的内容，一个女孩唱了一首歌，实在没什么亮点，周立波问她唱歌意味着什么，女孩因为紧张颤颤巍巍的几乎说不出话，最后紧握双拳勉强说出：“音乐是我的半条命”。在场的人都挺震惊的，更加惊恐的是三位评委，他们实在难以决定到底给不给她出彩，给吧…唱的实在不怎么样；不给吧…残忍夺取别人半条命。听多了马云在各种场合演说：梦想总是要有的，万一实现了呢…很多时候我们表现出对某件事情持久的狂热，或者冲动，而不愿花半分钟的时间去想想这对我意味着什么。</p>\n<p>大半夜的写了这些话，最后回过神来，自己不就是想立下决心，以后多写文章嘛，扯这么多没用的…就当自己现在是个刚会写字，认识几个词语，还不会造句的小学生吧。事情的发展总是要从简单到复杂，再回归简单这么一个过程，有开始总是好的。</p>\n","site":{"data":{}},"excerpt":"<p>很久没有写点什么了，任何什么。如果不是重新搭建了这个博客，可能还没那么大的决心写东西，实在太懒了。总要逼自己一把，记录点滴，比在手机上看几篇鸡汤来的实在。</p>\n<p>算一算毕业也就刚一个多月吧，整个人还没有完全转换角色，仍然晚睡晚起，周末如果没事会去附近泡一下图书馆。最近一直在翻看白岩松写的《白说》，里面的每一篇文章都是整理自他近几年在各地的演讲，都是些谈天说地的内容。","more":"现如今不论是谁出本书已经不是什么新鲜事，一年随便出门到大学里讲几次，要不了几年就成一本书了。还有一些书是整理自博客的内容，比如才买的技术大牛朴灵写的《深入浅出nodejs》，其中很多内容都是来自他的博客以及社区。当然也有腾出时间，专职著书的，柴静离开央视后，专门花了几年时间写下《看见》，记录自己过去几年在各地采访的所见所感。不论采用什么方式，当他们开始回顾，或是记录，或是整理的时候，都是对自己、对周围的人事一次新的认识。在这个鸡汤泛滥的时代，不论接受了多少杂乱的信息，当它们经过自己的大脑过滤，输出的结果总会留下那么一点自己的烙印。</p>\n<p>刚刚电视里放了一段《出彩中国人》的内容，一个女孩唱了一首歌，实在没什么亮点，周立波问她唱歌意味着什么，女孩因为紧张颤颤巍巍的几乎说不出话，最后紧握双拳勉强说出：“音乐是我的半条命”。在场的人都挺震惊的，更加惊恐的是三位评委，他们实在难以决定到底给不给她出彩，给吧…唱的实在不怎么样；不给吧…残忍夺取别人半条命。听多了马云在各种场合演说：梦想总是要有的，万一实现了呢…很多时候我们表现出对某件事情持久的狂热，或者冲动，而不愿花半分钟的时间去想想这对我意味着什么。</p>\n<p>大半夜的写了这些话，最后回过神来，自己不就是想立下决心，以后多写文章嘛，扯这么多没用的…就当自己现在是个刚会写字，认识几个词语，还不会造句的小学生吧。事情的发展总是要从简单到复杂，再回归简单这么一个过程，有开始总是好的。</p>"},{"title":"厦门印象","date":"2016-10-23T15:22:59.000Z","_content":"\n国庆顶着台风和人海双重风险赶到厦门，虽然早就有计划要去，但因为是两个男人，也没什么好准备的只是买了火车票。至于具体游玩路线什么的到了再说，就喜欢这么随性（但后来事实也给了我们泪的教训.../哭）。火车上无意间跟身边一位同伴聊起来，得知我是新疆人后，意料之中给我抛出了\"千年三问\"：你是新疆人？看你怎么不像？你们那里是不是特别美丽？虽然我已经被无数次的问到这些问题，每次我都会认真地回答。\n\n<!-- more -->\n\n一个半小时后，顺利抵达厦门，LG已经在等了，简单的寒暄后直奔厦大。踏进厦大的校门，即使身处喧闹的人群，仍然能够感受到自然的美感文化的气息和历史的韵味。这里依山傍水，风光旖旎，校园建筑更是别具一格，处处充满着小资情调和文艺范，不只是厦大，整个厦门给人的印象就是精致、舒适和文艺。芙蓉湖就像是一颗碧绿的翡翠，镶嵌在校园的中心，静静地，湖上还有几只白天鹅，简直美如画。同学们，还能不能好好学习？？？校园一角伫立着鲁迅先生的雕像，先生135度仰望呈自拍状，浩然正气，顶天立地。就是这所大学，不仅有鲁迅先生这样的大文豪，还走出了数学家陈景润、物理学家谢希德，还有大作家余光中。曾经清华大学的校长说过这样一句话，\"所谓大学者，非谓有大楼之谓也，有大师之谓也\"，厦大不仅拥有如诗的模样，还有如此大师风范。LG问我要了一支烟，说是抽根烟就算是来过这里了，俩人坐在教学楼下，点支烟，吹吹风。\n\n走出厦大，旁边就是普陀寺。因为国庆小长假的缘故，这里成了我见过的香火最旺的寺庙。寥寥的几尊佛像，被人群所包围，点上三支香，为家人求平安，为孩子求前程。除了人多，这里算不上特别。我曾经在一座城市拜访过很多大大小小的寺庙，不为诵经求佛，只为片刻的宁静，想想在大城市里，真的少有这样的地方了。穿过大堂，走过一道拱形的石门，有一条通往后山的小路。山路是由石阶构成，蜿蜒而上，没爬多久，厦门大学已经在我们的脚下，俯视厦大全景，两面环山，一面临海，再次感叹一下，这哪是学习的地方啊......爬到山顶还是废了不少体力，早已满头大汗。站在这里，远处的大海与天际同界，几艘大船在海面若隐若现，最震撼的是海边伫立的\"厦门世贸双子塔\"，简直是神一般的存在，放眼整座城市，周边没有任何一座建筑能与之相提并论。LG应景诵诗一首：孤帆远影碧空尽，唯见长江天际流...这显然比长江雄伟得多，我则想到了《狄仁杰之通天帝国》里的通天塔，以及狄仁杰最后的那一句\"天意昭炯，我自独行，天地虽不容我，心安即是归处\"。归处自在心中，又何必纠结。\n\n夜晚的厦门并没有安静下来，反而更加的喧闹，熙熙攘攘。LG在酒店楼下看到了一家台球室，于是俩人打了一个多小时的台球，大老远的跑来打台球，除了LG别的也没SEI了。出门旅游睡到中午十二点，除了我俩估计更没SEI了...\n\n话说一觉睡到中午十二点，吃了个早饭（嘿嘿），出发前往鼓浪屿。鼓浪屿轮渡码头距离住的地方不远，步行二十来分钟就到了，远远地就看到黑压压的人群。挤进售票厅一问傻眼了，没有票了。。。因为台风的影响，鼓浪屿最近限流，不仅今天没票，国庆这几天的票都早已售完了。俩人呆坐在石凳上缓缓，跑来厦门居然上不了鼓浪屿，这不是开玩笑嘛。事已至此，只能改变计划了，好在本来也没什么计划，商量了一下，那就去黄厝海滩吧。\n\n十月的厦门仍然非常炎热，中午更热，俩人顶着烈日等了二十几分钟才挤上一辆公交。即使这般艰难，我仍然觉得厦门的交通真的很好，城市规划也好，想想这可是国庆呀，有车坐就不错了。路过白城沙滩，透过车窗看到沸沸扬扬的煮饺子场景，心凉了一半，如果黄厝海滩也这样就惨了。半小时车程，下来后导航了一下，大海就在我们面前了，只是隔着一堵墙，这种无限靠近又得不到的感觉特别不爽。难道还不开放吗，没有这个道理，LG建议要不咱翻过去吧...哥，你当这是翘课去网吧呢...好歹也是研究僧出门要讲文明，那就再往前走走吧。果然好事多磨，走了将近两百米，大海突然出现在眼前，蓝天、沙滩、大海，美丽来的猝不及防，最最关键的，没有人、没有人！终于可以脱了鞋，点支烟，好好欣赏欣赏这么美的风景。每当这种时刻我总会想，要是好盆友们都在该多好，分享快乐，你就会变得更快乐哈哈，这就有点扯淡了。\n\n晒了一整天，晚上大餐一顿过后，照例来几局台球。我格外严肃地跟LG说，机会不多，今晚咱们正式的比一场，我也该发挥一下自己的真实水品了...LG听完哈哈大笑，尽管我故作严肃还是觉得策略失败，没把他吓住，我们太熟了。结局出乎我的意料，本以为我会超水平发挥一次，因为我觉得以前都没有认真比过，或许LG以前也不那么认真，6-9，谁在乎呢。读书，工作，遇到形形色色的人与事，认真的时候越来越少，在厦门最认真的事是考虑中午吃什么和晚上吃什么，而这本身就带着浓浓的戏谑。当后来回想，不会想起那时的我们刚参加工作什么事情都弄得一团糟，也不会想起海边的景色具体有多美，只是觉得那段经历在特定的时期特定的地点是独特的。\n","source":"_posts/厦门印象.md","raw":"---\ntitle: 厦门印象\ndate: 2016-10-23 23:22:59\ntags: 扯\n---\n\n国庆顶着台风和人海双重风险赶到厦门，虽然早就有计划要去，但因为是两个男人，也没什么好准备的只是买了火车票。至于具体游玩路线什么的到了再说，就喜欢这么随性（但后来事实也给了我们泪的教训.../哭）。火车上无意间跟身边一位同伴聊起来，得知我是新疆人后，意料之中给我抛出了\"千年三问\"：你是新疆人？看你怎么不像？你们那里是不是特别美丽？虽然我已经被无数次的问到这些问题，每次我都会认真地回答。\n\n<!-- more -->\n\n一个半小时后，顺利抵达厦门，LG已经在等了，简单的寒暄后直奔厦大。踏进厦大的校门，即使身处喧闹的人群，仍然能够感受到自然的美感文化的气息和历史的韵味。这里依山傍水，风光旖旎，校园建筑更是别具一格，处处充满着小资情调和文艺范，不只是厦大，整个厦门给人的印象就是精致、舒适和文艺。芙蓉湖就像是一颗碧绿的翡翠，镶嵌在校园的中心，静静地，湖上还有几只白天鹅，简直美如画。同学们，还能不能好好学习？？？校园一角伫立着鲁迅先生的雕像，先生135度仰望呈自拍状，浩然正气，顶天立地。就是这所大学，不仅有鲁迅先生这样的大文豪，还走出了数学家陈景润、物理学家谢希德，还有大作家余光中。曾经清华大学的校长说过这样一句话，\"所谓大学者，非谓有大楼之谓也，有大师之谓也\"，厦大不仅拥有如诗的模样，还有如此大师风范。LG问我要了一支烟，说是抽根烟就算是来过这里了，俩人坐在教学楼下，点支烟，吹吹风。\n\n走出厦大，旁边就是普陀寺。因为国庆小长假的缘故，这里成了我见过的香火最旺的寺庙。寥寥的几尊佛像，被人群所包围，点上三支香，为家人求平安，为孩子求前程。除了人多，这里算不上特别。我曾经在一座城市拜访过很多大大小小的寺庙，不为诵经求佛，只为片刻的宁静，想想在大城市里，真的少有这样的地方了。穿过大堂，走过一道拱形的石门，有一条通往后山的小路。山路是由石阶构成，蜿蜒而上，没爬多久，厦门大学已经在我们的脚下，俯视厦大全景，两面环山，一面临海，再次感叹一下，这哪是学习的地方啊......爬到山顶还是废了不少体力，早已满头大汗。站在这里，远处的大海与天际同界，几艘大船在海面若隐若现，最震撼的是海边伫立的\"厦门世贸双子塔\"，简直是神一般的存在，放眼整座城市，周边没有任何一座建筑能与之相提并论。LG应景诵诗一首：孤帆远影碧空尽，唯见长江天际流...这显然比长江雄伟得多，我则想到了《狄仁杰之通天帝国》里的通天塔，以及狄仁杰最后的那一句\"天意昭炯，我自独行，天地虽不容我，心安即是归处\"。归处自在心中，又何必纠结。\n\n夜晚的厦门并没有安静下来，反而更加的喧闹，熙熙攘攘。LG在酒店楼下看到了一家台球室，于是俩人打了一个多小时的台球，大老远的跑来打台球，除了LG别的也没SEI了。出门旅游睡到中午十二点，除了我俩估计更没SEI了...\n\n话说一觉睡到中午十二点，吃了个早饭（嘿嘿），出发前往鼓浪屿。鼓浪屿轮渡码头距离住的地方不远，步行二十来分钟就到了，远远地就看到黑压压的人群。挤进售票厅一问傻眼了，没有票了。。。因为台风的影响，鼓浪屿最近限流，不仅今天没票，国庆这几天的票都早已售完了。俩人呆坐在石凳上缓缓，跑来厦门居然上不了鼓浪屿，这不是开玩笑嘛。事已至此，只能改变计划了，好在本来也没什么计划，商量了一下，那就去黄厝海滩吧。\n\n十月的厦门仍然非常炎热，中午更热，俩人顶着烈日等了二十几分钟才挤上一辆公交。即使这般艰难，我仍然觉得厦门的交通真的很好，城市规划也好，想想这可是国庆呀，有车坐就不错了。路过白城沙滩，透过车窗看到沸沸扬扬的煮饺子场景，心凉了一半，如果黄厝海滩也这样就惨了。半小时车程，下来后导航了一下，大海就在我们面前了，只是隔着一堵墙，这种无限靠近又得不到的感觉特别不爽。难道还不开放吗，没有这个道理，LG建议要不咱翻过去吧...哥，你当这是翘课去网吧呢...好歹也是研究僧出门要讲文明，那就再往前走走吧。果然好事多磨，走了将近两百米，大海突然出现在眼前，蓝天、沙滩、大海，美丽来的猝不及防，最最关键的，没有人、没有人！终于可以脱了鞋，点支烟，好好欣赏欣赏这么美的风景。每当这种时刻我总会想，要是好盆友们都在该多好，分享快乐，你就会变得更快乐哈哈，这就有点扯淡了。\n\n晒了一整天，晚上大餐一顿过后，照例来几局台球。我格外严肃地跟LG说，机会不多，今晚咱们正式的比一场，我也该发挥一下自己的真实水品了...LG听完哈哈大笑，尽管我故作严肃还是觉得策略失败，没把他吓住，我们太熟了。结局出乎我的意料，本以为我会超水平发挥一次，因为我觉得以前都没有认真比过，或许LG以前也不那么认真，6-9，谁在乎呢。读书，工作，遇到形形色色的人与事，认真的时候越来越少，在厦门最认真的事是考虑中午吃什么和晚上吃什么，而这本身就带着浓浓的戏谑。当后来回想，不会想起那时的我们刚参加工作什么事情都弄得一团糟，也不会想起海边的景色具体有多美，只是觉得那段经历在特定的时期特定的地点是独特的。\n","slug":"厦门印象","published":1,"updated":"2017-06-15T12:07:05.094Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a781000d6klbnahznwnj","content":"<p>国庆顶着台风和人海双重风险赶到厦门，虽然早就有计划要去，但因为是两个男人，也没什么好准备的只是买了火车票。至于具体游玩路线什么的到了再说，就喜欢这么随性（但后来事实也给了我们泪的教训…/哭）。火车上无意间跟身边一位同伴聊起来，得知我是新疆人后，意料之中给我抛出了”千年三问”：你是新疆人？看你怎么不像？你们那里是不是特别美丽？虽然我已经被无数次的问到这些问题，每次我都会认真地回答。</p>\n<a id=\"more\"></a>\n<p>一个半小时后，顺利抵达厦门，LG已经在等了，简单的寒暄后直奔厦大。踏进厦大的校门，即使身处喧闹的人群，仍然能够感受到自然的美感文化的气息和历史的韵味。这里依山傍水，风光旖旎，校园建筑更是别具一格，处处充满着小资情调和文艺范，不只是厦大，整个厦门给人的印象就是精致、舒适和文艺。芙蓉湖就像是一颗碧绿的翡翠，镶嵌在校园的中心，静静地，湖上还有几只白天鹅，简直美如画。同学们，还能不能好好学习？？？校园一角伫立着鲁迅先生的雕像，先生135度仰望呈自拍状，浩然正气，顶天立地。就是这所大学，不仅有鲁迅先生这样的大文豪，还走出了数学家陈景润、物理学家谢希德，还有大作家余光中。曾经清华大学的校长说过这样一句话，”所谓大学者，非谓有大楼之谓也，有大师之谓也”，厦大不仅拥有如诗的模样，还有如此大师风范。LG问我要了一支烟，说是抽根烟就算是来过这里了，俩人坐在教学楼下，点支烟，吹吹风。</p>\n<p>走出厦大，旁边就是普陀寺。因为国庆小长假的缘故，这里成了我见过的香火最旺的寺庙。寥寥的几尊佛像，被人群所包围，点上三支香，为家人求平安，为孩子求前程。除了人多，这里算不上特别。我曾经在一座城市拜访过很多大大小小的寺庙，不为诵经求佛，只为片刻的宁静，想想在大城市里，真的少有这样的地方了。穿过大堂，走过一道拱形的石门，有一条通往后山的小路。山路是由石阶构成，蜿蜒而上，没爬多久，厦门大学已经在我们的脚下，俯视厦大全景，两面环山，一面临海，再次感叹一下，这哪是学习的地方啊……爬到山顶还是废了不少体力，早已满头大汗。站在这里，远处的大海与天际同界，几艘大船在海面若隐若现，最震撼的是海边伫立的”厦门世贸双子塔”，简直是神一般的存在，放眼整座城市，周边没有任何一座建筑能与之相提并论。LG应景诵诗一首：孤帆远影碧空尽，唯见长江天际流…这显然比长江雄伟得多，我则想到了《狄仁杰之通天帝国》里的通天塔，以及狄仁杰最后的那一句”天意昭炯，我自独行，天地虽不容我，心安即是归处”。归处自在心中，又何必纠结。</p>\n<p>夜晚的厦门并没有安静下来，反而更加的喧闹，熙熙攘攘。LG在酒店楼下看到了一家台球室，于是俩人打了一个多小时的台球，大老远的跑来打台球，除了LG别的也没SEI了。出门旅游睡到中午十二点，除了我俩估计更没SEI了…</p>\n<p>话说一觉睡到中午十二点，吃了个早饭（嘿嘿），出发前往鼓浪屿。鼓浪屿轮渡码头距离住的地方不远，步行二十来分钟就到了，远远地就看到黑压压的人群。挤进售票厅一问傻眼了，没有票了。。。因为台风的影响，鼓浪屿最近限流，不仅今天没票，国庆这几天的票都早已售完了。俩人呆坐在石凳上缓缓，跑来厦门居然上不了鼓浪屿，这不是开玩笑嘛。事已至此，只能改变计划了，好在本来也没什么计划，商量了一下，那就去黄厝海滩吧。</p>\n<p>十月的厦门仍然非常炎热，中午更热，俩人顶着烈日等了二十几分钟才挤上一辆公交。即使这般艰难，我仍然觉得厦门的交通真的很好，城市规划也好，想想这可是国庆呀，有车坐就不错了。路过白城沙滩，透过车窗看到沸沸扬扬的煮饺子场景，心凉了一半，如果黄厝海滩也这样就惨了。半小时车程，下来后导航了一下，大海就在我们面前了，只是隔着一堵墙，这种无限靠近又得不到的感觉特别不爽。难道还不开放吗，没有这个道理，LG建议要不咱翻过去吧…哥，你当这是翘课去网吧呢…好歹也是研究僧出门要讲文明，那就再往前走走吧。果然好事多磨，走了将近两百米，大海突然出现在眼前，蓝天、沙滩、大海，美丽来的猝不及防，最最关键的，没有人、没有人！终于可以脱了鞋，点支烟，好好欣赏欣赏这么美的风景。每当这种时刻我总会想，要是好盆友们都在该多好，分享快乐，你就会变得更快乐哈哈，这就有点扯淡了。</p>\n<p>晒了一整天，晚上大餐一顿过后，照例来几局台球。我格外严肃地跟LG说，机会不多，今晚咱们正式的比一场，我也该发挥一下自己的真实水品了…LG听完哈哈大笑，尽管我故作严肃还是觉得策略失败，没把他吓住，我们太熟了。结局出乎我的意料，本以为我会超水平发挥一次，因为我觉得以前都没有认真比过，或许LG以前也不那么认真，6-9，谁在乎呢。读书，工作，遇到形形色色的人与事，认真的时候越来越少，在厦门最认真的事是考虑中午吃什么和晚上吃什么，而这本身就带着浓浓的戏谑。当后来回想，不会想起那时的我们刚参加工作什么事情都弄得一团糟，也不会想起海边的景色具体有多美，只是觉得那段经历在特定的时期特定的地点是独特的。</p>\n","site":{"data":{}},"excerpt":"<p>国庆顶着台风和人海双重风险赶到厦门，虽然早就有计划要去，但因为是两个男人，也没什么好准备的只是买了火车票。至于具体游玩路线什么的到了再说，就喜欢这么随性（但后来事实也给了我们泪的教训…/哭）。火车上无意间跟身边一位同伴聊起来，得知我是新疆人后，意料之中给我抛出了”千年三问”：你是新疆人？看你怎么不像？你们那里是不是特别美丽？虽然我已经被无数次的问到这些问题，每次我都会认真地回答。</p>","more":"<p>一个半小时后，顺利抵达厦门，LG已经在等了，简单的寒暄后直奔厦大。踏进厦大的校门，即使身处喧闹的人群，仍然能够感受到自然的美感文化的气息和历史的韵味。这里依山傍水，风光旖旎，校园建筑更是别具一格，处处充满着小资情调和文艺范，不只是厦大，整个厦门给人的印象就是精致、舒适和文艺。芙蓉湖就像是一颗碧绿的翡翠，镶嵌在校园的中心，静静地，湖上还有几只白天鹅，简直美如画。同学们，还能不能好好学习？？？校园一角伫立着鲁迅先生的雕像，先生135度仰望呈自拍状，浩然正气，顶天立地。就是这所大学，不仅有鲁迅先生这样的大文豪，还走出了数学家陈景润、物理学家谢希德，还有大作家余光中。曾经清华大学的校长说过这样一句话，”所谓大学者，非谓有大楼之谓也，有大师之谓也”，厦大不仅拥有如诗的模样，还有如此大师风范。LG问我要了一支烟，说是抽根烟就算是来过这里了，俩人坐在教学楼下，点支烟，吹吹风。</p>\n<p>走出厦大，旁边就是普陀寺。因为国庆小长假的缘故，这里成了我见过的香火最旺的寺庙。寥寥的几尊佛像，被人群所包围，点上三支香，为家人求平安，为孩子求前程。除了人多，这里算不上特别。我曾经在一座城市拜访过很多大大小小的寺庙，不为诵经求佛，只为片刻的宁静，想想在大城市里，真的少有这样的地方了。穿过大堂，走过一道拱形的石门，有一条通往后山的小路。山路是由石阶构成，蜿蜒而上，没爬多久，厦门大学已经在我们的脚下，俯视厦大全景，两面环山，一面临海，再次感叹一下，这哪是学习的地方啊……爬到山顶还是废了不少体力，早已满头大汗。站在这里，远处的大海与天际同界，几艘大船在海面若隐若现，最震撼的是海边伫立的”厦门世贸双子塔”，简直是神一般的存在，放眼整座城市，周边没有任何一座建筑能与之相提并论。LG应景诵诗一首：孤帆远影碧空尽，唯见长江天际流…这显然比长江雄伟得多，我则想到了《狄仁杰之通天帝国》里的通天塔，以及狄仁杰最后的那一句”天意昭炯，我自独行，天地虽不容我，心安即是归处”。归处自在心中，又何必纠结。</p>\n<p>夜晚的厦门并没有安静下来，反而更加的喧闹，熙熙攘攘。LG在酒店楼下看到了一家台球室，于是俩人打了一个多小时的台球，大老远的跑来打台球，除了LG别的也没SEI了。出门旅游睡到中午十二点，除了我俩估计更没SEI了…</p>\n<p>话说一觉睡到中午十二点，吃了个早饭（嘿嘿），出发前往鼓浪屿。鼓浪屿轮渡码头距离住的地方不远，步行二十来分钟就到了，远远地就看到黑压压的人群。挤进售票厅一问傻眼了，没有票了。。。因为台风的影响，鼓浪屿最近限流，不仅今天没票，国庆这几天的票都早已售完了。俩人呆坐在石凳上缓缓，跑来厦门居然上不了鼓浪屿，这不是开玩笑嘛。事已至此，只能改变计划了，好在本来也没什么计划，商量了一下，那就去黄厝海滩吧。</p>\n<p>十月的厦门仍然非常炎热，中午更热，俩人顶着烈日等了二十几分钟才挤上一辆公交。即使这般艰难，我仍然觉得厦门的交通真的很好，城市规划也好，想想这可是国庆呀，有车坐就不错了。路过白城沙滩，透过车窗看到沸沸扬扬的煮饺子场景，心凉了一半，如果黄厝海滩也这样就惨了。半小时车程，下来后导航了一下，大海就在我们面前了，只是隔着一堵墙，这种无限靠近又得不到的感觉特别不爽。难道还不开放吗，没有这个道理，LG建议要不咱翻过去吧…哥，你当这是翘课去网吧呢…好歹也是研究僧出门要讲文明，那就再往前走走吧。果然好事多磨，走了将近两百米，大海突然出现在眼前，蓝天、沙滩、大海，美丽来的猝不及防，最最关键的，没有人、没有人！终于可以脱了鞋，点支烟，好好欣赏欣赏这么美的风景。每当这种时刻我总会想，要是好盆友们都在该多好，分享快乐，你就会变得更快乐哈哈，这就有点扯淡了。</p>\n<p>晒了一整天，晚上大餐一顿过后，照例来几局台球。我格外严肃地跟LG说，机会不多，今晚咱们正式的比一场，我也该发挥一下自己的真实水品了…LG听完哈哈大笑，尽管我故作严肃还是觉得策略失败，没把他吓住，我们太熟了。结局出乎我的意料，本以为我会超水平发挥一次，因为我觉得以前都没有认真比过，或许LG以前也不那么认真，6-9，谁在乎呢。读书，工作，遇到形形色色的人与事，认真的时候越来越少，在厦门最认真的事是考虑中午吃什么和晚上吃什么，而这本身就带着浓浓的戏谑。当后来回想，不会想起那时的我们刚参加工作什么事情都弄得一团糟，也不会想起海边的景色具体有多美，只是觉得那段经历在特定的时期特定的地点是独特的。</p>"},{"title":"前端技术栈(Front-End-Develop)","date":"2017-08-22T12:21:24.000Z","_content":"\n## 基础篇\n### HTML\n参考W3C标准，理解如何浏览和创建网页、基本的语法规范、常用标签及属性、网页之间的链接与跳转、标签节点层级节点；\nDOM基本结构、节点对象的操作、事件特性及使用、常见的内置DOM对象、常见的BOM功能；\nHTML5 语义化结构、多媒体 、本地存储(LocalStorage, SessionStorage, Cookie)、其他常见API、Canvas等。\n\n<!-- more -->\n\n### CSS\n基本语法和三种书写位置、选择器和格式化排版、盒模型的高级用法、常用布局模型(两栏、三栏、垂直居中等)；\nCSS3 选择器、CSS3 边框、背景、阴影、CSS3 过渡和动画、CSS3 伸缩布局；\n移动端开发，响应式布局、编译CSS。\n### JavaScript\n基础语法和变量、数据类型和数据类型转换、条件判断、循环语句、函数、数组等内置对象；\nJS 语言的基本构成、变量、数据类型、表达式、选择结构、循环结构、短路语句、函数基础；\nJQuery 选择器、基本操作API、动画API、事件API、插件机制、原理分析、项目实战；\nAJAX 基本编程接口、异步数据交互、模板引擎的使用、跨域的实现方案、增量加载；\nJSON 语法；\nHTTP协议。\n### 计算机知识储备\n编译原理\n计算机网络\n操作系统\n算法原理\n软件工程/软件测试原理\n### PhotoShop 切图\nPhotoShop 的安装和简单的切图，像素级精确还原设计稿。\n### 框架\nJQuery、BootStrap\n### 版本控制工具\ngit\nsvn\n### 工具\nSublime Text、webstorm、Visual Studio Code、VIM、Chrome、Firefox\n参考资料\nw3school、Web 技术文档 | MDN、segmentfault、stackoverflow、CSS 语法参考、阮一峰的个人网站、菜鸟笔记、JavaScript 标准参考教程（alpha）\n\n## 进阶篇\n### JavaScript\nJS 面向对象编程： 面向对象理论、对象的基本概念、对象的属性和方法、通过字面量创建对象；\nJS 原型和原型链的理解和应用；\nJS 闭包、立即执行函数、匿名函数；\nES 6 入门，参考阮一峰写的《ECMAScript 6入门》；\nclass、Promise、async/await；\n### CSS\ncss flex 布局\n媒体查询、css3 响应式布局\ncss3 动画\ncss 3D\nscss\n### 可视化/富文本编辑器\nSVG/Canvas/VML\nD3 / HighChart.js / Echart.js\nWebGL / three.js\nueditor / wangEditor\n### 跨域/安全\nJSONP / iframe\nCSRF/XSS\nCSP\nSame-origin policy\n### 前端性能优化\nHTTP 请求/响应原理\n前端优化的几种方式\n浏览器缓存机制\n### 框架\nAngular\nReact\nVue\n### 微信小程序\n了解\n### 前后端分离\n前端使用动态模板，后端只提供接口(参考单页面应用)\n使用 Node 作为中间层(参考淘宝中途岛计划)\n### 前端自动化工具\nwebpack\ngulp\nnpm\n### 参考资料\nECMAScript 6 入门、Exploring-ES6翻译、Less教程、Sass中文文档、张鑫旭——前端性能、web前端性能优化进阶路、【高性能前端2】高性能CSS、【高性能前端1】高性能HTML、wangEditor、Gulp：任务自动管理工具 - ruanyifeng、Gulp 入门指南、Node.js 包教不包会、Vue-cli脚手架、Vue组件、vue自定义指令、Vue过渡动画、Vue指令、Vue api文档、angularjs API、angular 教程、angular 文档\n\n## 高级篇\n### 前端工作流\n自动化流程工具使用\n源代码版本控制工具使用(git, svn)\n依赖项管理工具(npm, require)\n项目模板脚手架(参考vue-cli)\n### 模块化开发\n模块化开发规范\nES6 模块化开发\n模块化开发最佳实践\n### NodeJS\n常用内置模块\n高级特性\n常用框架（express, koa...）\n### Web全平台应用\nWeb = Chrome + Angular.js + Ionic\nDesktop = Electron + Angular.js + Ionic\nMobile = Cordova + Angular.js + Ionic\nreact Native\n### 参考文档\n使用 Express + MongoDB 搭建多人博客、NodeJS的代码调试和性能调优、在 Node.js 应用中集成 Redis、electron、ionic中文指南、React Native 中文版、V8 Javascript 引擎设计理念、JavaScript V8 性能小贴士\n","source":"_posts/前端技术栈-Front-End-Develop.md","raw":"---\ntitle: 前端技术栈(Front-End-Develop)\ndate: 2017-08-22 20:21:24\ntags: 前端\n---\n\n## 基础篇\n### HTML\n参考W3C标准，理解如何浏览和创建网页、基本的语法规范、常用标签及属性、网页之间的链接与跳转、标签节点层级节点；\nDOM基本结构、节点对象的操作、事件特性及使用、常见的内置DOM对象、常见的BOM功能；\nHTML5 语义化结构、多媒体 、本地存储(LocalStorage, SessionStorage, Cookie)、其他常见API、Canvas等。\n\n<!-- more -->\n\n### CSS\n基本语法和三种书写位置、选择器和格式化排版、盒模型的高级用法、常用布局模型(两栏、三栏、垂直居中等)；\nCSS3 选择器、CSS3 边框、背景、阴影、CSS3 过渡和动画、CSS3 伸缩布局；\n移动端开发，响应式布局、编译CSS。\n### JavaScript\n基础语法和变量、数据类型和数据类型转换、条件判断、循环语句、函数、数组等内置对象；\nJS 语言的基本构成、变量、数据类型、表达式、选择结构、循环结构、短路语句、函数基础；\nJQuery 选择器、基本操作API、动画API、事件API、插件机制、原理分析、项目实战；\nAJAX 基本编程接口、异步数据交互、模板引擎的使用、跨域的实现方案、增量加载；\nJSON 语法；\nHTTP协议。\n### 计算机知识储备\n编译原理\n计算机网络\n操作系统\n算法原理\n软件工程/软件测试原理\n### PhotoShop 切图\nPhotoShop 的安装和简单的切图，像素级精确还原设计稿。\n### 框架\nJQuery、BootStrap\n### 版本控制工具\ngit\nsvn\n### 工具\nSublime Text、webstorm、Visual Studio Code、VIM、Chrome、Firefox\n参考资料\nw3school、Web 技术文档 | MDN、segmentfault、stackoverflow、CSS 语法参考、阮一峰的个人网站、菜鸟笔记、JavaScript 标准参考教程（alpha）\n\n## 进阶篇\n### JavaScript\nJS 面向对象编程： 面向对象理论、对象的基本概念、对象的属性和方法、通过字面量创建对象；\nJS 原型和原型链的理解和应用；\nJS 闭包、立即执行函数、匿名函数；\nES 6 入门，参考阮一峰写的《ECMAScript 6入门》；\nclass、Promise、async/await；\n### CSS\ncss flex 布局\n媒体查询、css3 响应式布局\ncss3 动画\ncss 3D\nscss\n### 可视化/富文本编辑器\nSVG/Canvas/VML\nD3 / HighChart.js / Echart.js\nWebGL / three.js\nueditor / wangEditor\n### 跨域/安全\nJSONP / iframe\nCSRF/XSS\nCSP\nSame-origin policy\n### 前端性能优化\nHTTP 请求/响应原理\n前端优化的几种方式\n浏览器缓存机制\n### 框架\nAngular\nReact\nVue\n### 微信小程序\n了解\n### 前后端分离\n前端使用动态模板，后端只提供接口(参考单页面应用)\n使用 Node 作为中间层(参考淘宝中途岛计划)\n### 前端自动化工具\nwebpack\ngulp\nnpm\n### 参考资料\nECMAScript 6 入门、Exploring-ES6翻译、Less教程、Sass中文文档、张鑫旭——前端性能、web前端性能优化进阶路、【高性能前端2】高性能CSS、【高性能前端1】高性能HTML、wangEditor、Gulp：任务自动管理工具 - ruanyifeng、Gulp 入门指南、Node.js 包教不包会、Vue-cli脚手架、Vue组件、vue自定义指令、Vue过渡动画、Vue指令、Vue api文档、angularjs API、angular 教程、angular 文档\n\n## 高级篇\n### 前端工作流\n自动化流程工具使用\n源代码版本控制工具使用(git, svn)\n依赖项管理工具(npm, require)\n项目模板脚手架(参考vue-cli)\n### 模块化开发\n模块化开发规范\nES6 模块化开发\n模块化开发最佳实践\n### NodeJS\n常用内置模块\n高级特性\n常用框架（express, koa...）\n### Web全平台应用\nWeb = Chrome + Angular.js + Ionic\nDesktop = Electron + Angular.js + Ionic\nMobile = Cordova + Angular.js + Ionic\nreact Native\n### 参考文档\n使用 Express + MongoDB 搭建多人博客、NodeJS的代码调试和性能调优、在 Node.js 应用中集成 Redis、electron、ionic中文指南、React Native 中文版、V8 Javascript 引擎设计理念、JavaScript V8 性能小贴士\n","slug":"前端技术栈-Front-End-Develop","published":1,"updated":"2017-10-08T17:11:40.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a78h000f6klbf2fz04tf","content":"<h2 id=\"基础篇\"><a href=\"#基础篇\" class=\"headerlink\" title=\"基础篇\"></a>基础篇</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>参考W3C标准，理解如何浏览和创建网页、基本的语法规范、常用标签及属性、网页之间的链接与跳转、标签节点层级节点；<br>DOM基本结构、节点对象的操作、事件特性及使用、常见的内置DOM对象、常见的BOM功能；<br>HTML5 语义化结构、多媒体 、本地存储(LocalStorage, SessionStorage, Cookie)、其他常见API、Canvas等。</p>\n<a id=\"more\"></a>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>基本语法和三种书写位置、选择器和格式化排版、盒模型的高级用法、常用布局模型(两栏、三栏、垂直居中等)；<br>CSS3 选择器、CSS3 边框、背景、阴影、CSS3 过渡和动画、CSS3 伸缩布局；<br>移动端开发，响应式布局、编译CSS。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>基础语法和变量、数据类型和数据类型转换、条件判断、循环语句、函数、数组等内置对象；<br>JS 语言的基本构成、变量、数据类型、表达式、选择结构、循环结构、短路语句、函数基础；<br>JQuery 选择器、基本操作API、动画API、事件API、插件机制、原理分析、项目实战；<br>AJAX 基本编程接口、异步数据交互、模板引擎的使用、跨域的实现方案、增量加载；<br>JSON 语法；<br>HTTP协议。</p>\n<h3 id=\"计算机知识储备\"><a href=\"#计算机知识储备\" class=\"headerlink\" title=\"计算机知识储备\"></a>计算机知识储备</h3><p>编译原理<br>计算机网络<br>操作系统<br>算法原理<br>软件工程/软件测试原理</p>\n<h3 id=\"PhotoShop-切图\"><a href=\"#PhotoShop-切图\" class=\"headerlink\" title=\"PhotoShop 切图\"></a>PhotoShop 切图</h3><p>PhotoShop 的安装和简单的切图，像素级精确还原设计稿。</p>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><p>JQuery、BootStrap</p>\n<h3 id=\"版本控制工具\"><a href=\"#版本控制工具\" class=\"headerlink\" title=\"版本控制工具\"></a>版本控制工具</h3><p>git<br>svn</p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>Sublime Text、webstorm、Visual Studio Code、VIM、Chrome、Firefox<br>参考资料<br>w3school、Web 技术文档 | MDN、segmentfault、stackoverflow、CSS 语法参考、阮一峰的个人网站、菜鸟笔记、JavaScript 标准参考教程（alpha）</p>\n<h2 id=\"进阶篇\"><a href=\"#进阶篇\" class=\"headerlink\" title=\"进阶篇\"></a>进阶篇</h2><h3 id=\"JavaScript-1\"><a href=\"#JavaScript-1\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>JS 面向对象编程： 面向对象理论、对象的基本概念、对象的属性和方法、通过字面量创建对象；<br>JS 原型和原型链的理解和应用；<br>JS 闭包、立即执行函数、匿名函数；<br>ES 6 入门，参考阮一峰写的《ECMAScript 6入门》；<br>class、Promise、async/await；</p>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>css flex 布局<br>媒体查询、css3 响应式布局<br>css3 动画<br>css 3D<br>scss</p>\n<h3 id=\"可视化-富文本编辑器\"><a href=\"#可视化-富文本编辑器\" class=\"headerlink\" title=\"可视化/富文本编辑器\"></a>可视化/富文本编辑器</h3><p>SVG/Canvas/VML<br>D3 / HighChart.js / Echart.js<br>WebGL / three.js<br>ueditor / wangEditor</p>\n<h3 id=\"跨域-安全\"><a href=\"#跨域-安全\" class=\"headerlink\" title=\"跨域/安全\"></a>跨域/安全</h3><p>JSONP / iframe<br>CSRF/XSS<br>CSP<br>Same-origin policy</p>\n<h3 id=\"前端性能优化\"><a href=\"#前端性能优化\" class=\"headerlink\" title=\"前端性能优化\"></a>前端性能优化</h3><p>HTTP 请求/响应原理<br>前端优化的几种方式<br>浏览器缓存机制</p>\n<h3 id=\"框架-1\"><a href=\"#框架-1\" class=\"headerlink\" title=\"框架\"></a>框架</h3><p>Angular<br>React<br>Vue</p>\n<h3 id=\"微信小程序\"><a href=\"#微信小程序\" class=\"headerlink\" title=\"微信小程序\"></a>微信小程序</h3><p>了解</p>\n<h3 id=\"前后端分离\"><a href=\"#前后端分离\" class=\"headerlink\" title=\"前后端分离\"></a>前后端分离</h3><p>前端使用动态模板，后端只提供接口(参考单页面应用)<br>使用 Node 作为中间层(参考淘宝中途岛计划)</p>\n<h3 id=\"前端自动化工具\"><a href=\"#前端自动化工具\" class=\"headerlink\" title=\"前端自动化工具\"></a>前端自动化工具</h3><p>webpack<br>gulp<br>npm</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p>ECMAScript 6 入门、Exploring-ES6翻译、Less教程、Sass中文文档、张鑫旭——前端性能、web前端性能优化进阶路、【高性能前端2】高性能CSS、【高性能前端1】高性能HTML、wangEditor、Gulp：任务自动管理工具 - ruanyifeng、Gulp 入门指南、Node.js 包教不包会、Vue-cli脚手架、Vue组件、vue自定义指令、Vue过渡动画、Vue指令、Vue api文档、angularjs API、angular 教程、angular 文档</p>\n<h2 id=\"高级篇\"><a href=\"#高级篇\" class=\"headerlink\" title=\"高级篇\"></a>高级篇</h2><h3 id=\"前端工作流\"><a href=\"#前端工作流\" class=\"headerlink\" title=\"前端工作流\"></a>前端工作流</h3><p>自动化流程工具使用<br>源代码版本控制工具使用(git, svn)<br>依赖项管理工具(npm, require)<br>项目模板脚手架(参考vue-cli)</p>\n<h3 id=\"模块化开发\"><a href=\"#模块化开发\" class=\"headerlink\" title=\"模块化开发\"></a>模块化开发</h3><p>模块化开发规范<br>ES6 模块化开发<br>模块化开发最佳实践</p>\n<h3 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h3><p>常用内置模块<br>高级特性<br>常用框架（express, koa…）</p>\n<h3 id=\"Web全平台应用\"><a href=\"#Web全平台应用\" class=\"headerlink\" title=\"Web全平台应用\"></a>Web全平台应用</h3><p>Web = Chrome + Angular.js + Ionic<br>Desktop = Electron + Angular.js + Ionic<br>Mobile = Cordova + Angular.js + Ionic<br>react Native</p>\n<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p>使用 Express + MongoDB 搭建多人博客、NodeJS的代码调试和性能调优、在 Node.js 应用中集成 Redis、electron、ionic中文指南、React Native 中文版、V8 Javascript 引擎设计理念、JavaScript V8 性能小贴士</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"基础篇\"><a href=\"#基础篇\" class=\"headerlink\" title=\"基础篇\"></a>基础篇</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>参考W3C标准，理解如何浏览和创建网页、基本的语法规范、常用标签及属性、网页之间的链接与跳转、标签节点层级节点；<br>DOM基本结构、节点对象的操作、事件特性及使用、常见的内置DOM对象、常见的BOM功能；<br>HTML5 语义化结构、多媒体 、本地存储(LocalStorage, SessionStorage, Cookie)、其他常见API、Canvas等。</p>","more":"<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>基本语法和三种书写位置、选择器和格式化排版、盒模型的高级用法、常用布局模型(两栏、三栏、垂直居中等)；<br>CSS3 选择器、CSS3 边框、背景、阴影、CSS3 过渡和动画、CSS3 伸缩布局；<br>移动端开发，响应式布局、编译CSS。</p>\n<h3 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>基础语法和变量、数据类型和数据类型转换、条件判断、循环语句、函数、数组等内置对象；<br>JS 语言的基本构成、变量、数据类型、表达式、选择结构、循环结构、短路语句、函数基础；<br>JQuery 选择器、基本操作API、动画API、事件API、插件机制、原理分析、项目实战；<br>AJAX 基本编程接口、异步数据交互、模板引擎的使用、跨域的实现方案、增量加载；<br>JSON 语法；<br>HTTP协议。</p>\n<h3 id=\"计算机知识储备\"><a href=\"#计算机知识储备\" class=\"headerlink\" title=\"计算机知识储备\"></a>计算机知识储备</h3><p>编译原理<br>计算机网络<br>操作系统<br>算法原理<br>软件工程/软件测试原理</p>\n<h3 id=\"PhotoShop-切图\"><a href=\"#PhotoShop-切图\" class=\"headerlink\" title=\"PhotoShop 切图\"></a>PhotoShop 切图</h3><p>PhotoShop 的安装和简单的切图，像素级精确还原设计稿。</p>\n<h3 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h3><p>JQuery、BootStrap</p>\n<h3 id=\"版本控制工具\"><a href=\"#版本控制工具\" class=\"headerlink\" title=\"版本控制工具\"></a>版本控制工具</h3><p>git<br>svn</p>\n<h3 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h3><p>Sublime Text、webstorm、Visual Studio Code、VIM、Chrome、Firefox<br>参考资料<br>w3school、Web 技术文档 | MDN、segmentfault、stackoverflow、CSS 语法参考、阮一峰的个人网站、菜鸟笔记、JavaScript 标准参考教程（alpha）</p>\n<h2 id=\"进阶篇\"><a href=\"#进阶篇\" class=\"headerlink\" title=\"进阶篇\"></a>进阶篇</h2><h3 id=\"JavaScript-1\"><a href=\"#JavaScript-1\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h3><p>JS 面向对象编程： 面向对象理论、对象的基本概念、对象的属性和方法、通过字面量创建对象；<br>JS 原型和原型链的理解和应用；<br>JS 闭包、立即执行函数、匿名函数；<br>ES 6 入门，参考阮一峰写的《ECMAScript 6入门》；<br>class、Promise、async/await；</p>\n<h3 id=\"CSS-1\"><a href=\"#CSS-1\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>css flex 布局<br>媒体查询、css3 响应式布局<br>css3 动画<br>css 3D<br>scss</p>\n<h3 id=\"可视化-富文本编辑器\"><a href=\"#可视化-富文本编辑器\" class=\"headerlink\" title=\"可视化/富文本编辑器\"></a>可视化/富文本编辑器</h3><p>SVG/Canvas/VML<br>D3 / HighChart.js / Echart.js<br>WebGL / three.js<br>ueditor / wangEditor</p>\n<h3 id=\"跨域-安全\"><a href=\"#跨域-安全\" class=\"headerlink\" title=\"跨域/安全\"></a>跨域/安全</h3><p>JSONP / iframe<br>CSRF/XSS<br>CSP<br>Same-origin policy</p>\n<h3 id=\"前端性能优化\"><a href=\"#前端性能优化\" class=\"headerlink\" title=\"前端性能优化\"></a>前端性能优化</h3><p>HTTP 请求/响应原理<br>前端优化的几种方式<br>浏览器缓存机制</p>\n<h3 id=\"框架-1\"><a href=\"#框架-1\" class=\"headerlink\" title=\"框架\"></a>框架</h3><p>Angular<br>React<br>Vue</p>\n<h3 id=\"微信小程序\"><a href=\"#微信小程序\" class=\"headerlink\" title=\"微信小程序\"></a>微信小程序</h3><p>了解</p>\n<h3 id=\"前后端分离\"><a href=\"#前后端分离\" class=\"headerlink\" title=\"前后端分离\"></a>前后端分离</h3><p>前端使用动态模板，后端只提供接口(参考单页面应用)<br>使用 Node 作为中间层(参考淘宝中途岛计划)</p>\n<h3 id=\"前端自动化工具\"><a href=\"#前端自动化工具\" class=\"headerlink\" title=\"前端自动化工具\"></a>前端自动化工具</h3><p>webpack<br>gulp<br>npm</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p>ECMAScript 6 入门、Exploring-ES6翻译、Less教程、Sass中文文档、张鑫旭——前端性能、web前端性能优化进阶路、【高性能前端2】高性能CSS、【高性能前端1】高性能HTML、wangEditor、Gulp：任务自动管理工具 - ruanyifeng、Gulp 入门指南、Node.js 包教不包会、Vue-cli脚手架、Vue组件、vue自定义指令、Vue过渡动画、Vue指令、Vue api文档、angularjs API、angular 教程、angular 文档</p>\n<h2 id=\"高级篇\"><a href=\"#高级篇\" class=\"headerlink\" title=\"高级篇\"></a>高级篇</h2><h3 id=\"前端工作流\"><a href=\"#前端工作流\" class=\"headerlink\" title=\"前端工作流\"></a>前端工作流</h3><p>自动化流程工具使用<br>源代码版本控制工具使用(git, svn)<br>依赖项管理工具(npm, require)<br>项目模板脚手架(参考vue-cli)</p>\n<h3 id=\"模块化开发\"><a href=\"#模块化开发\" class=\"headerlink\" title=\"模块化开发\"></a>模块化开发</h3><p>模块化开发规范<br>ES6 模块化开发<br>模块化开发最佳实践</p>\n<h3 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h3><p>常用内置模块<br>高级特性<br>常用框架（express, koa…）</p>\n<h3 id=\"Web全平台应用\"><a href=\"#Web全平台应用\" class=\"headerlink\" title=\"Web全平台应用\"></a>Web全平台应用</h3><p>Web = Chrome + Angular.js + Ionic<br>Desktop = Electron + Angular.js + Ionic<br>Mobile = Cordova + Angular.js + Ionic<br>react Native</p>\n<h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p>使用 Express + MongoDB 搭建多人博客、NodeJS的代码调试和性能调优、在 Node.js 应用中集成 Redis、electron、ionic中文指南、React Native 中文版、V8 Javascript 引擎设计理念、JavaScript V8 性能小贴士</p>"},{"title":"异步解决方案 async/await","date":"2017-07-09T13:42:29.000Z","_content":"\nAsync/Await应该是目前最简单的异步方案了，首先来看个例子。\n\n这里我们要实现一个暂停功能，输入N毫秒，则停顿N毫秒后才继续往下执行。\n\n<!-- more -->\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            resolve();\n        }, time);\n    })\n};\n\nvar start = async function () {\n    // 在这里使用起来就像同步代码那样直观\n    console.log('start');\n    await sleep(3000);\n    console.log('end');\n};\n\nstart();\n```\n控制台先输出start，稍等3秒后，输出了end。\n\n** 基本规则 **\n\n- async 表示这是一个async函数，await只能用在这个函数里面。\n- await 表示在这里等待promise返回结果了，再继续执行。\n- await 后面跟着的应该是一个promise对象（当然，其他返回值也没关系，只是会立即执行，不过那样就没有意义了…）\n\n** 获得返回值 **\n\nawait等待的虽然是promise对象，但不必写.then(..)，直接可以得到返回值。\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // 返回 ‘ok’\n            resolve('ok');\n        }, time);\n    })\n};\n\nvar start = async function () {\n    let result = await sleep(3000);\n    console.log(result); // 收到 ‘ok’\n};\n```\n\n** 捕捉错误 **\n\n既然.then(..)不用写了，那么.catch(..)也不用写，可以直接用标准的try catch语法捕捉错误。\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // 模拟出错了，返回 ‘error’\n            reject('error');\n        }, time);\n    })\n};\n\nvar start = async function () {\n    try {\n        console.log('start');\n        await sleep(3000); // 这里得到了一个返回错误\n        \n        // 所以以下代码不会被执行了\n        console.log('end');\n    } catch (err) {\n        console.log(err); // 这里捕捉到错误 `error`\n    }\n};\n```\n\n** 循环多个await **\n\nawait看起来就像是同步代码，所以可以理所当然的写在for循环里，不必担心以往需要闭包才能解决的问题。\n\n```\n..省略以上代码\n\nvar start = async function () {\n    for (var i = 1; i <= 10; i++) {\n        console.log(`当前是第${i}次等待..`);\n        await sleep(1000);\n    }\n};\n```\n\n值得注意的是，await必须在async函数的上下文中的。\n\n```\n..省略以上代码\n\nlet 一到十 = [1,2,3,4,5,6,7,8,9,10];\n\n// 错误示范\n一到十.forEach(function (v) {\n    console.log(`当前是第${v}次等待..`);\n    await sleep(1000); // 错误!! await只能在async函数中运行\n});\n\n// 正确示范\nfor(var v of 一到十) {\n    console.log(`当前是第${v}次等待..`);\n    await sleep(1000); // 正确, for循环的上下文还在async函数中\n}\n```\n\n** 第二个例子 **\n\n这个例子是一个小应用，根据电影文件名，自动下载对应的海报。\n\n直接贴出代码，就不说明了。\n\n```\nimport fs from 'fs';\nimport path from 'path';\nimport request from 'request';\n\nvar movieDir = __dirname + '/movies',\n    exts     = ['.mkv', '.avi', '.mp4', '.rm', '.rmvb', '.wmv'];\n\n// 读取文件列表\nvar readFiles = function () {\n    return new Promise(function (resolve, reject) {\n        fs.readdir(movieDir, function (err, files) {\n            resolve(files.filter((v) => exts.includes(path.parse(v).ext)));\n        });\n    });\n};\n\n// 获取海报\nvar getPoster = function (movieName) {\n    let url = `https://api.douban.com/v2/movie/search?q=${encodeURI(movieName)}`;\n\n    return new Promise(function (resolve, reject) {\n        request({url: url, json: true}, function (error, response, body) {\n            if (error) return reject(error);\n\n            resolve(body.subjects[0].images.large);\n        })\n    });\n};\n\n// 保存海报\nvar savePoster = function (movieName, url) {\n    request.get(url).pipe(fs.createWriteStream(path.join(movieDir, movieName + '.jpg')));\n};\n\n\n(async () => {\n    let files = await readFiles();\n\n    // await只能使用在原生语法\n    for (var file of files) {\n        let name = path.parse(file).name;\n\n        console.log(`正在获取【${name}】的海报`);\n        savePoster(name, await getPoster(name));\n    }\n\n    console.log('=== 获取海报完成 ===');\n})();\n```\n\n—— 本文转自《[cnodejs](https://cnodejs.org/topic/5640b80d3a6aa72c5e0030b6)》","source":"_posts/异步解决方案-async-await.md","raw":"---\ntitle: 异步解决方案 async/await\ndate: 2017-07-09 21:42:29\ntags: 前端\n---\n\nAsync/Await应该是目前最简单的异步方案了，首先来看个例子。\n\n这里我们要实现一个暂停功能，输入N毫秒，则停顿N毫秒后才继续往下执行。\n\n<!-- more -->\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            resolve();\n        }, time);\n    })\n};\n\nvar start = async function () {\n    // 在这里使用起来就像同步代码那样直观\n    console.log('start');\n    await sleep(3000);\n    console.log('end');\n};\n\nstart();\n```\n控制台先输出start，稍等3秒后，输出了end。\n\n** 基本规则 **\n\n- async 表示这是一个async函数，await只能用在这个函数里面。\n- await 表示在这里等待promise返回结果了，再继续执行。\n- await 后面跟着的应该是一个promise对象（当然，其他返回值也没关系，只是会立即执行，不过那样就没有意义了…）\n\n** 获得返回值 **\n\nawait等待的虽然是promise对象，但不必写.then(..)，直接可以得到返回值。\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // 返回 ‘ok’\n            resolve('ok');\n        }, time);\n    })\n};\n\nvar start = async function () {\n    let result = await sleep(3000);\n    console.log(result); // 收到 ‘ok’\n};\n```\n\n** 捕捉错误 **\n\n既然.then(..)不用写了，那么.catch(..)也不用写，可以直接用标准的try catch语法捕捉错误。\n\n```\nvar sleep = function (time) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n            // 模拟出错了，返回 ‘error’\n            reject('error');\n        }, time);\n    })\n};\n\nvar start = async function () {\n    try {\n        console.log('start');\n        await sleep(3000); // 这里得到了一个返回错误\n        \n        // 所以以下代码不会被执行了\n        console.log('end');\n    } catch (err) {\n        console.log(err); // 这里捕捉到错误 `error`\n    }\n};\n```\n\n** 循环多个await **\n\nawait看起来就像是同步代码，所以可以理所当然的写在for循环里，不必担心以往需要闭包才能解决的问题。\n\n```\n..省略以上代码\n\nvar start = async function () {\n    for (var i = 1; i <= 10; i++) {\n        console.log(`当前是第${i}次等待..`);\n        await sleep(1000);\n    }\n};\n```\n\n值得注意的是，await必须在async函数的上下文中的。\n\n```\n..省略以上代码\n\nlet 一到十 = [1,2,3,4,5,6,7,8,9,10];\n\n// 错误示范\n一到十.forEach(function (v) {\n    console.log(`当前是第${v}次等待..`);\n    await sleep(1000); // 错误!! await只能在async函数中运行\n});\n\n// 正确示范\nfor(var v of 一到十) {\n    console.log(`当前是第${v}次等待..`);\n    await sleep(1000); // 正确, for循环的上下文还在async函数中\n}\n```\n\n** 第二个例子 **\n\n这个例子是一个小应用，根据电影文件名，自动下载对应的海报。\n\n直接贴出代码，就不说明了。\n\n```\nimport fs from 'fs';\nimport path from 'path';\nimport request from 'request';\n\nvar movieDir = __dirname + '/movies',\n    exts     = ['.mkv', '.avi', '.mp4', '.rm', '.rmvb', '.wmv'];\n\n// 读取文件列表\nvar readFiles = function () {\n    return new Promise(function (resolve, reject) {\n        fs.readdir(movieDir, function (err, files) {\n            resolve(files.filter((v) => exts.includes(path.parse(v).ext)));\n        });\n    });\n};\n\n// 获取海报\nvar getPoster = function (movieName) {\n    let url = `https://api.douban.com/v2/movie/search?q=${encodeURI(movieName)}`;\n\n    return new Promise(function (resolve, reject) {\n        request({url: url, json: true}, function (error, response, body) {\n            if (error) return reject(error);\n\n            resolve(body.subjects[0].images.large);\n        })\n    });\n};\n\n// 保存海报\nvar savePoster = function (movieName, url) {\n    request.get(url).pipe(fs.createWriteStream(path.join(movieDir, movieName + '.jpg')));\n};\n\n\n(async () => {\n    let files = await readFiles();\n\n    // await只能使用在原生语法\n    for (var file of files) {\n        let name = path.parse(file).name;\n\n        console.log(`正在获取【${name}】的海报`);\n        savePoster(name, await getPoster(name));\n    }\n\n    console.log('=== 获取海报完成 ===');\n})();\n```\n\n—— 本文转自《[cnodejs](https://cnodejs.org/topic/5640b80d3a6aa72c5e0030b6)》","slug":"异步解决方案-async-await","published":1,"updated":"2017-07-09T13:56:56.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a78h000i6klbqrfs29sz","content":"<p>Async/Await应该是目前最简单的异步方案了，首先来看个例子。</p>\n<p>这里我们要实现一个暂停功能，输入N毫秒，则停顿N毫秒后才继续往下执行。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            resolve();</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    // 在这里使用起来就像同步代码那样直观</div><div class=\"line\">    console.log(&apos;start&apos;);</div><div class=\"line\">    await sleep(3000);</div><div class=\"line\">    console.log(&apos;end&apos;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">start();</div></pre></td></tr></table></figure>\n<p>控制台先输出start，稍等3秒后，输出了end。</p>\n<p><strong> 基本规则 </strong></p>\n<ul>\n<li>async 表示这是一个async函数，await只能用在这个函数里面。</li>\n<li>await 表示在这里等待promise返回结果了，再继续执行。</li>\n<li>await 后面跟着的应该是一个promise对象（当然，其他返回值也没关系，只是会立即执行，不过那样就没有意义了…）</li>\n</ul>\n<p><strong> 获得返回值 </strong></p>\n<p>await等待的虽然是promise对象，但不必写.then(..)，直接可以得到返回值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            // 返回 ‘ok’</div><div class=\"line\">            resolve(&apos;ok&apos;);</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    let result = await sleep(3000);</div><div class=\"line\">    console.log(result); // 收到 ‘ok’</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><strong> 捕捉错误 </strong></p>\n<p>既然.then(..)不用写了，那么.catch(..)也不用写，可以直接用标准的try catch语法捕捉错误。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            // 模拟出错了，返回 ‘error’</div><div class=\"line\">            reject(&apos;error&apos;);</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    try &#123;</div><div class=\"line\">        console.log(&apos;start&apos;);</div><div class=\"line\">        await sleep(3000); // 这里得到了一个返回错误</div><div class=\"line\">        </div><div class=\"line\">        // 所以以下代码不会被执行了</div><div class=\"line\">        console.log(&apos;end&apos;);</div><div class=\"line\">    &#125; catch (err) &#123;</div><div class=\"line\">        console.log(err); // 这里捕捉到错误 `error`</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><strong> 循环多个await </strong></p>\n<p>await看起来就像是同步代码，所以可以理所当然的写在for循环里，不必担心以往需要闭包才能解决的问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">..省略以上代码</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    for (var i = 1; i &lt;= 10; i++) &#123;</div><div class=\"line\">        console.log(`当前是第$&#123;i&#125;次等待..`);</div><div class=\"line\">        await sleep(1000);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>值得注意的是，await必须在async函数的上下文中的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">..省略以上代码</div><div class=\"line\"></div><div class=\"line\">let 一到十 = [1,2,3,4,5,6,7,8,9,10];</div><div class=\"line\"></div><div class=\"line\">// 错误示范</div><div class=\"line\">一到十.forEach(function (v) &#123;</div><div class=\"line\">    console.log(`当前是第$&#123;v&#125;次等待..`);</div><div class=\"line\">    await sleep(1000); // 错误!! await只能在async函数中运行</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">// 正确示范</div><div class=\"line\">for(var v of 一到十) &#123;</div><div class=\"line\">    console.log(`当前是第$&#123;v&#125;次等待..`);</div><div class=\"line\">    await sleep(1000); // 正确, for循环的上下文还在async函数中</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong> 第二个例子 </strong></p>\n<p>这个例子是一个小应用，根据电影文件名，自动下载对应的海报。</p>\n<p>直接贴出代码，就不说明了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">import fs from &apos;fs&apos;;</div><div class=\"line\">import path from &apos;path&apos;;</div><div class=\"line\">import request from &apos;request&apos;;</div><div class=\"line\"></div><div class=\"line\">var movieDir = __dirname + &apos;/movies&apos;,</div><div class=\"line\">    exts     = [&apos;.mkv&apos;, &apos;.avi&apos;, &apos;.mp4&apos;, &apos;.rm&apos;, &apos;.rmvb&apos;, &apos;.wmv&apos;];</div><div class=\"line\"></div><div class=\"line\">// 读取文件列表</div><div class=\"line\">var readFiles = function () &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        fs.readdir(movieDir, function (err, files) &#123;</div><div class=\"line\">            resolve(files.filter((v) =&gt; exts.includes(path.parse(v).ext)));</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">// 获取海报</div><div class=\"line\">var getPoster = function (movieName) &#123;</div><div class=\"line\">    let url = `https://api.douban.com/v2/movie/search?q=$&#123;encodeURI(movieName)&#125;`;</div><div class=\"line\"></div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        request(&#123;url: url, json: true&#125;, function (error, response, body) &#123;</div><div class=\"line\">            if (error) return reject(error);</div><div class=\"line\"></div><div class=\"line\">            resolve(body.subjects[0].images.large);</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">// 保存海报</div><div class=\"line\">var savePoster = function (movieName, url) &#123;</div><div class=\"line\">    request.get(url).pipe(fs.createWriteStream(path.join(movieDir, movieName + &apos;.jpg&apos;)));</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">(async () =&gt; &#123;</div><div class=\"line\">    let files = await readFiles();</div><div class=\"line\"></div><div class=\"line\">    // await只能使用在原生语法</div><div class=\"line\">    for (var file of files) &#123;</div><div class=\"line\">        let name = path.parse(file).name;</div><div class=\"line\"></div><div class=\"line\">        console.log(`正在获取【$&#123;name&#125;】的海报`);</div><div class=\"line\">        savePoster(name, await getPoster(name));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    console.log(&apos;=== 获取海报完成 ===&apos;);</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<p>—— 本文转自《<a href=\"https://cnodejs.org/topic/5640b80d3a6aa72c5e0030b6\" target=\"_blank\" rel=\"external\">cnodejs</a>》</p>\n","site":{"data":{}},"excerpt":"<p>Async/Await应该是目前最简单的异步方案了，首先来看个例子。</p>\n<p>这里我们要实现一个暂停功能，输入N毫秒，则停顿N毫秒后才继续往下执行。</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            resolve();</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    // 在这里使用起来就像同步代码那样直观</div><div class=\"line\">    console.log(&apos;start&apos;);</div><div class=\"line\">    await sleep(3000);</div><div class=\"line\">    console.log(&apos;end&apos;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">start();</div></pre></td></tr></table></figure>\n<p>控制台先输出start，稍等3秒后，输出了end。</p>\n<p><strong> 基本规则 </strong></p>\n<ul>\n<li>async 表示这是一个async函数，await只能用在这个函数里面。</li>\n<li>await 表示在这里等待promise返回结果了，再继续执行。</li>\n<li>await 后面跟着的应该是一个promise对象（当然，其他返回值也没关系，只是会立即执行，不过那样就没有意义了…）</li>\n</ul>\n<p><strong> 获得返回值 </strong></p>\n<p>await等待的虽然是promise对象，但不必写.then(..)，直接可以得到返回值。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            // 返回 ‘ok’</div><div class=\"line\">            resolve(&apos;ok&apos;);</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    let result = await sleep(3000);</div><div class=\"line\">    console.log(result); // 收到 ‘ok’</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><strong> 捕捉错误 </strong></p>\n<p>既然.then(..)不用写了，那么.catch(..)也不用写，可以直接用标准的try catch语法捕捉错误。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sleep = function (time) &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        setTimeout(function () &#123;</div><div class=\"line\">            // 模拟出错了，返回 ‘error’</div><div class=\"line\">            reject(&apos;error&apos;);</div><div class=\"line\">        &#125;, time);</div><div class=\"line\">    &#125;)</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    try &#123;</div><div class=\"line\">        console.log(&apos;start&apos;);</div><div class=\"line\">        await sleep(3000); // 这里得到了一个返回错误</div><div class=\"line\">        </div><div class=\"line\">        // 所以以下代码不会被执行了</div><div class=\"line\">        console.log(&apos;end&apos;);</div><div class=\"line\">    &#125; catch (err) &#123;</div><div class=\"line\">        console.log(err); // 这里捕捉到错误 `error`</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p><strong> 循环多个await </strong></p>\n<p>await看起来就像是同步代码，所以可以理所当然的写在for循环里，不必担心以往需要闭包才能解决的问题。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">..省略以上代码</div><div class=\"line\"></div><div class=\"line\">var start = async function () &#123;</div><div class=\"line\">    for (var i = 1; i &lt;= 10; i++) &#123;</div><div class=\"line\">        console.log(`当前是第$&#123;i&#125;次等待..`);</div><div class=\"line\">        await sleep(1000);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<p>值得注意的是，await必须在async函数的上下文中的。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">..省略以上代码</div><div class=\"line\"></div><div class=\"line\">let 一到十 = [1,2,3,4,5,6,7,8,9,10];</div><div class=\"line\"></div><div class=\"line\">// 错误示范</div><div class=\"line\">一到十.forEach(function (v) &#123;</div><div class=\"line\">    console.log(`当前是第$&#123;v&#125;次等待..`);</div><div class=\"line\">    await sleep(1000); // 错误!! await只能在async函数中运行</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">// 正确示范</div><div class=\"line\">for(var v of 一到十) &#123;</div><div class=\"line\">    console.log(`当前是第$&#123;v&#125;次等待..`);</div><div class=\"line\">    await sleep(1000); // 正确, for循环的上下文还在async函数中</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><strong> 第二个例子 </strong></p>\n<p>这个例子是一个小应用，根据电影文件名，自动下载对应的海报。</p>\n<p>直接贴出代码，就不说明了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">import fs from &apos;fs&apos;;</div><div class=\"line\">import path from &apos;path&apos;;</div><div class=\"line\">import request from &apos;request&apos;;</div><div class=\"line\"></div><div class=\"line\">var movieDir = __dirname + &apos;/movies&apos;,</div><div class=\"line\">    exts     = [&apos;.mkv&apos;, &apos;.avi&apos;, &apos;.mp4&apos;, &apos;.rm&apos;, &apos;.rmvb&apos;, &apos;.wmv&apos;];</div><div class=\"line\"></div><div class=\"line\">// 读取文件列表</div><div class=\"line\">var readFiles = function () &#123;</div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        fs.readdir(movieDir, function (err, files) &#123;</div><div class=\"line\">            resolve(files.filter((v) =&gt; exts.includes(path.parse(v).ext)));</div><div class=\"line\">        &#125;);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">// 获取海报</div><div class=\"line\">var getPoster = function (movieName) &#123;</div><div class=\"line\">    let url = `https://api.douban.com/v2/movie/search?q=$&#123;encodeURI(movieName)&#125;`;</div><div class=\"line\"></div><div class=\"line\">    return new Promise(function (resolve, reject) &#123;</div><div class=\"line\">        request(&#123;url: url, json: true&#125;, function (error, response, body) &#123;</div><div class=\"line\">            if (error) return reject(error);</div><div class=\"line\"></div><div class=\"line\">            resolve(body.subjects[0].images.large);</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">// 保存海报</div><div class=\"line\">var savePoster = function (movieName, url) &#123;</div><div class=\"line\">    request.get(url).pipe(fs.createWriteStream(path.join(movieDir, movieName + &apos;.jpg&apos;)));</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">(async () =&gt; &#123;</div><div class=\"line\">    let files = await readFiles();</div><div class=\"line\"></div><div class=\"line\">    // await只能使用在原生语法</div><div class=\"line\">    for (var file of files) &#123;</div><div class=\"line\">        let name = path.parse(file).name;</div><div class=\"line\"></div><div class=\"line\">        console.log(`正在获取【$&#123;name&#125;】的海报`);</div><div class=\"line\">        savePoster(name, await getPoster(name));</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    console.log(&apos;=== 获取海报完成 ===&apos;);</div><div class=\"line\">&#125;)();</div></pre></td></tr></table></figure>\n<p>—— 本文转自《<a href=\"https://cnodejs.org/topic/5640b80d3a6aa72c5e0030b6\" target=\"_blank\" rel=\"external\">cnodejs</a>》</p>"},{"title":"榕城一两事（一）","date":"2016-09-07T12:57:46.000Z","_content":"\n没有工作之前，有一段时间很纠结，以后到底选择去哪工作呢，帝都、魔都，羊城，还是我大新疆，觉得未来无限可能。真的到了选择的时候，才发现实际没得选择，一切都是安排好的，只是让你一步一步朝着一个方向走。后来我就很自然的走上了羊城小道，后来又来到了福州，没有什么道理。本人一向秉承\"既来之，则安之\"的理念，来到福州，住在福州，那么我就是半个福州人。福州又叫榕城，又叫三山。<!-- more -->\n\n( 注：福州城内于山、乌山、屏山“三山”鼎峙，闽江宛如绿带穿城而过。史载，五代梁开平二年闽王王审知扩建城池，将风景秀丽的于山、乌山、屏山圈入城内，形成了福州“山在城中、城在山内”的独特风貌。“三山一水”成为榕城主要标志，故福州亦称“三山”。  ———— 出自 [百度百科](http://baike.baidu.com/link?url=QfHvq9vjorNdkLvN7Mc2XKkVdYbbO7oSELAh42HzX5JvNxA3_791rptxBHgBG-AUfOf-Iw_TSNnobJLLJrMtkNAPMOfM4_IEHP8wAk5tsA7) )\n\n\n有朋友开玩笑福州是这样一座城，你既然进来了就别想出去，三面环山，一面临海，插翅难逃。我本来也不是来旅游的，也不是一天两天回得去，纵是八面埋伏，我不动怎奈何。福州是一个充斥着矛盾的小城（百度才知道，二线中等发达，惊讶...），喧闹与宁静交织，又好像不是我们正常理解的那样。\n\n![闽江夜色](http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg)\n\n有一天晚上散步来到闽江边，看到夜晚月光下平静的江水，江边停靠的游轮，以及不远处横卧在江面的大桥，此情此景简直就跟站在广州的小蛮腰对岸太像了。话说这里应该是三山最繁华的地方，然而岸边却特别冷清，行人寥寥，夜游闽江的售票处关着门，对岸的高层少有几扇窗亮灯，甚至江边的路灯也熄了。嗯嗯，好吧，二线中等发达，算是一种解释吧。再说说安静的地方，图书馆应该安静吧。我基本上每周末都要花上半天在这里度过，离我住的地方很近，空间也很大，好像以前是当防空洞的，后来改成图书城了。我每次坐在那里，周围小学生嬉戏打闹，中学生打情骂俏，家长来了跟逛超市一样，往教辅书那里一站，这几种一样给我来一本，多亏我爱学习加上定力高才勉强呆得住。\n\n我向来都是一个慢热的人，对一座城的认识和接纳或许也慢吧，来这里有一个月了，没有讨厌就是一个好的开始。","source":"_posts/榕城一两事（一）.md","raw":"---\ntitle: 榕城一两事（一）\ndate: 2016-09-07 20:57:46\ntags: 随笔\n---\n\n没有工作之前，有一段时间很纠结，以后到底选择去哪工作呢，帝都、魔都，羊城，还是我大新疆，觉得未来无限可能。真的到了选择的时候，才发现实际没得选择，一切都是安排好的，只是让你一步一步朝着一个方向走。后来我就很自然的走上了羊城小道，后来又来到了福州，没有什么道理。本人一向秉承\"既来之，则安之\"的理念，来到福州，住在福州，那么我就是半个福州人。福州又叫榕城，又叫三山。<!-- more -->\n\n( 注：福州城内于山、乌山、屏山“三山”鼎峙，闽江宛如绿带穿城而过。史载，五代梁开平二年闽王王审知扩建城池，将风景秀丽的于山、乌山、屏山圈入城内，形成了福州“山在城中、城在山内”的独特风貌。“三山一水”成为榕城主要标志，故福州亦称“三山”。  ———— 出自 [百度百科](http://baike.baidu.com/link?url=QfHvq9vjorNdkLvN7Mc2XKkVdYbbO7oSELAh42HzX5JvNxA3_791rptxBHgBG-AUfOf-Iw_TSNnobJLLJrMtkNAPMOfM4_IEHP8wAk5tsA7) )\n\n\n有朋友开玩笑福州是这样一座城，你既然进来了就别想出去，三面环山，一面临海，插翅难逃。我本来也不是来旅游的，也不是一天两天回得去，纵是八面埋伏，我不动怎奈何。福州是一个充斥着矛盾的小城（百度才知道，二线中等发达，惊讶...），喧闹与宁静交织，又好像不是我们正常理解的那样。\n\n![闽江夜色](http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg)\n\n有一天晚上散步来到闽江边，看到夜晚月光下平静的江水，江边停靠的游轮，以及不远处横卧在江面的大桥，此情此景简直就跟站在广州的小蛮腰对岸太像了。话说这里应该是三山最繁华的地方，然而岸边却特别冷清，行人寥寥，夜游闽江的售票处关着门，对岸的高层少有几扇窗亮灯，甚至江边的路灯也熄了。嗯嗯，好吧，二线中等发达，算是一种解释吧。再说说安静的地方，图书馆应该安静吧。我基本上每周末都要花上半天在这里度过，离我住的地方很近，空间也很大，好像以前是当防空洞的，后来改成图书城了。我每次坐在那里，周围小学生嬉戏打闹，中学生打情骂俏，家长来了跟逛超市一样，往教辅书那里一站，这几种一样给我来一本，多亏我爱学习加上定力高才勉强呆得住。\n\n我向来都是一个慢热的人，对一座城的认识和接纳或许也慢吧，来这里有一个月了，没有讨厌就是一个好的开始。","slug":"榕城一两事（一）","published":1,"updated":"2017-06-15T11:24:48.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a78w000k6klbjl71n8z8","content":"<p>没有工作之前，有一段时间很纠结，以后到底选择去哪工作呢，帝都、魔都，羊城，还是我大新疆，觉得未来无限可能。真的到了选择的时候，才发现实际没得选择，一切都是安排好的，只是让你一步一步朝着一个方向走。后来我就很自然的走上了羊城小道，后来又来到了福州，没有什么道理。本人一向秉承”既来之，则安之”的理念，来到福州，住在福州，那么我就是半个福州人。福州又叫榕城，又叫三山。<a id=\"more\"></a></p>\n<p>( 注：福州城内于山、乌山、屏山“三山”鼎峙，闽江宛如绿带穿城而过。史载，五代梁开平二年闽王王审知扩建城池，将风景秀丽的于山、乌山、屏山圈入城内，形成了福州“山在城中、城在山内”的独特风貌。“三山一水”成为榕城主要标志，故福州亦称“三山”。  ———— 出自 <a href=\"http://baike.baidu.com/link?url=QfHvq9vjorNdkLvN7Mc2XKkVdYbbO7oSELAh42HzX5JvNxA3_791rptxBHgBG-AUfOf-Iw_TSNnobJLLJrMtkNAPMOfM4_IEHP8wAk5tsA7\" target=\"_blank\" rel=\"external\">百度百科</a> )</p>\n<p>有朋友开玩笑福州是这样一座城，你既然进来了就别想出去，三面环山，一面临海，插翅难逃。我本来也不是来旅游的，也不是一天两天回得去，纵是八面埋伏，我不动怎奈何。福州是一个充斥着矛盾的小城（百度才知道，二线中等发达，惊讶…），喧闹与宁静交织，又好像不是我们正常理解的那样。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg\" alt=\"闽江夜色\"></p>\n<p>有一天晚上散步来到闽江边，看到夜晚月光下平静的江水，江边停靠的游轮，以及不远处横卧在江面的大桥，此情此景简直就跟站在广州的小蛮腰对岸太像了。话说这里应该是三山最繁华的地方，然而岸边却特别冷清，行人寥寥，夜游闽江的售票处关着门，对岸的高层少有几扇窗亮灯，甚至江边的路灯也熄了。嗯嗯，好吧，二线中等发达，算是一种解释吧。再说说安静的地方，图书馆应该安静吧。我基本上每周末都要花上半天在这里度过，离我住的地方很近，空间也很大，好像以前是当防空洞的，后来改成图书城了。我每次坐在那里，周围小学生嬉戏打闹，中学生打情骂俏，家长来了跟逛超市一样，往教辅书那里一站，这几种一样给我来一本，多亏我爱学习加上定力高才勉强呆得住。</p>\n<p>我向来都是一个慢热的人，对一座城的认识和接纳或许也慢吧，来这里有一个月了，没有讨厌就是一个好的开始。</p>\n","site":{"data":{}},"excerpt":"<p>没有工作之前，有一段时间很纠结，以后到底选择去哪工作呢，帝都、魔都，羊城，还是我大新疆，觉得未来无限可能。真的到了选择的时候，才发现实际没得选择，一切都是安排好的，只是让你一步一步朝着一个方向走。后来我就很自然的走上了羊城小道，后来又来到了福州，没有什么道理。本人一向秉承”既来之，则安之”的理念，来到福州，住在福州，那么我就是半个福州人。福州又叫榕城，又叫三山。","more":"</p>\n<p>( 注：福州城内于山、乌山、屏山“三山”鼎峙，闽江宛如绿带穿城而过。史载，五代梁开平二年闽王王审知扩建城池，将风景秀丽的于山、乌山、屏山圈入城内，形成了福州“山在城中、城在山内”的独特风貌。“三山一水”成为榕城主要标志，故福州亦称“三山”。  ———— 出自 <a href=\"http://baike.baidu.com/link?url=QfHvq9vjorNdkLvN7Mc2XKkVdYbbO7oSELAh42HzX5JvNxA3_791rptxBHgBG-AUfOf-Iw_TSNnobJLLJrMtkNAPMOfM4_IEHP8wAk5tsA7\" target=\"_blank\" rel=\"external\">百度百科</a> )</p>\n<p>有朋友开玩笑福州是这样一座城，你既然进来了就别想出去，三面环山，一面临海，插翅难逃。我本来也不是来旅游的，也不是一天两天回得去，纵是八面埋伏，我不动怎奈何。福州是一个充斥着矛盾的小城（百度才知道，二线中等发达，惊讶…），喧闹与宁静交织，又好像不是我们正常理解的那样。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/7fc689670599723e.jpg\" alt=\"闽江夜色\"></p>\n<p>有一天晚上散步来到闽江边，看到夜晚月光下平静的江水，江边停靠的游轮，以及不远处横卧在江面的大桥，此情此景简直就跟站在广州的小蛮腰对岸太像了。话说这里应该是三山最繁华的地方，然而岸边却特别冷清，行人寥寥，夜游闽江的售票处关着门，对岸的高层少有几扇窗亮灯，甚至江边的路灯也熄了。嗯嗯，好吧，二线中等发达，算是一种解释吧。再说说安静的地方，图书馆应该安静吧。我基本上每周末都要花上半天在这里度过，离我住的地方很近，空间也很大，好像以前是当防空洞的，后来改成图书城了。我每次坐在那里，周围小学生嬉戏打闹，中学生打情骂俏，家长来了跟逛超市一样，往教辅书那里一站，这几种一样给我来一本，多亏我爱学习加上定力高才勉强呆得住。</p>\n<p>我向来都是一个慢热的人，对一座城的认识和接纳或许也慢吧，来这里有一个月了，没有讨厌就是一个好的开始。</p>"},{"title":"榕城一两事（二）","date":"2016-09-19T15:45:39.000Z","_content":"\n“老司机，这一招真绝！”\n\n我惊奇地盯着身旁的师傅，惊叹一声。\n\n就在三秒前，我乘坐的出租车一个大滑步，从商场前边的人行道径直穿过，飞到十字路口的红灯下又一个急转弯，\"唰\"的一声回到了马路中间正常行驶。此时刚好变成绿灯，身后长长的车队还未启动......\n\n<!-- more -->\n\n“小伙子，刚才那条道是商场停车场出口的路线，我有没有违法交通！”\n\n“哈哈，没有没有，一看你就是老江湖了!”\n\n“我有没有违规......”\n\n“没没”\n\n司机师傅仍然喋喋不休，不是解释，更像是炫耀自己的车技。我除了惊叹之余还是有一点小怕，这样的极品飞车，我上次遇到应该还是西安的916。我真想说哥你专心开车吧，我的小心脏受不了啊。\n\n见我不吭声了，师傅又开始絮叨之前发生的事情。\n\n“刚才那两个女孩顺路，坐我的车是不是刚好！”\n\n“大哥你都拉了两伙人了，人家嫌挤也是可以理解的嘛......”\n\n“坐我的车是不是刚好顺路！”\n\n“是是...”\n\n见过拼车的，没见过出租车司机这么一路吆喝的，见人就问。有两个女孩顺路，但是看到车上已经坐了两个人，扭头离开，师傅立马健步下车追上去十几米试图挽留，俩姑娘差点都要喊非礼了。\n\n我坐在前排，看着司机师傅挽留无果，从远处人群中走回来，年纪应该有四五十岁了，但步伐矫健。不知怎么，看到这一幕我突然想起我爸，也是老司机，也是那么干练。\n\n“我们走！”师傅一脚油门。\n","source":"_posts/榕城一两事（二）.md","raw":"---\ntitle: 榕城一两事（二）\ndate: 2016-09-19 23:45:39\ntags: 随笔\n---\n\n“老司机，这一招真绝！”\n\n我惊奇地盯着身旁的师傅，惊叹一声。\n\n就在三秒前，我乘坐的出租车一个大滑步，从商场前边的人行道径直穿过，飞到十字路口的红灯下又一个急转弯，\"唰\"的一声回到了马路中间正常行驶。此时刚好变成绿灯，身后长长的车队还未启动......\n\n<!-- more -->\n\n“小伙子，刚才那条道是商场停车场出口的路线，我有没有违法交通！”\n\n“哈哈，没有没有，一看你就是老江湖了!”\n\n“我有没有违规......”\n\n“没没”\n\n司机师傅仍然喋喋不休，不是解释，更像是炫耀自己的车技。我除了惊叹之余还是有一点小怕，这样的极品飞车，我上次遇到应该还是西安的916。我真想说哥你专心开车吧，我的小心脏受不了啊。\n\n见我不吭声了，师傅又开始絮叨之前发生的事情。\n\n“刚才那两个女孩顺路，坐我的车是不是刚好！”\n\n“大哥你都拉了两伙人了，人家嫌挤也是可以理解的嘛......”\n\n“坐我的车是不是刚好顺路！”\n\n“是是...”\n\n见过拼车的，没见过出租车司机这么一路吆喝的，见人就问。有两个女孩顺路，但是看到车上已经坐了两个人，扭头离开，师傅立马健步下车追上去十几米试图挽留，俩姑娘差点都要喊非礼了。\n\n我坐在前排，看着司机师傅挽留无果，从远处人群中走回来，年纪应该有四五十岁了，但步伐矫健。不知怎么，看到这一幕我突然想起我爸，也是老司机，也是那么干练。\n\n“我们走！”师傅一脚油门。\n","slug":"榕城一两事（二）","published":1,"updated":"2016-09-29T00:50:47.775Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a79c000n6klb90c7ekzy","content":"<p>“老司机，这一招真绝！”</p>\n<p>我惊奇地盯着身旁的师傅，惊叹一声。</p>\n<p>就在三秒前，我乘坐的出租车一个大滑步，从商场前边的人行道径直穿过，飞到十字路口的红灯下又一个急转弯，”唰”的一声回到了马路中间正常行驶。此时刚好变成绿灯，身后长长的车队还未启动……</p>\n<a id=\"more\"></a>\n<p>“小伙子，刚才那条道是商场停车场出口的路线，我有没有违法交通！”</p>\n<p>“哈哈，没有没有，一看你就是老江湖了!”</p>\n<p>“我有没有违规……”</p>\n<p>“没没”</p>\n<p>司机师傅仍然喋喋不休，不是解释，更像是炫耀自己的车技。我除了惊叹之余还是有一点小怕，这样的极品飞车，我上次遇到应该还是西安的916。我真想说哥你专心开车吧，我的小心脏受不了啊。</p>\n<p>见我不吭声了，师傅又开始絮叨之前发生的事情。</p>\n<p>“刚才那两个女孩顺路，坐我的车是不是刚好！”</p>\n<p>“大哥你都拉了两伙人了，人家嫌挤也是可以理解的嘛……”</p>\n<p>“坐我的车是不是刚好顺路！”</p>\n<p>“是是…”</p>\n<p>见过拼车的，没见过出租车司机这么一路吆喝的，见人就问。有两个女孩顺路，但是看到车上已经坐了两个人，扭头离开，师傅立马健步下车追上去十几米试图挽留，俩姑娘差点都要喊非礼了。</p>\n<p>我坐在前排，看着司机师傅挽留无果，从远处人群中走回来，年纪应该有四五十岁了，但步伐矫健。不知怎么，看到这一幕我突然想起我爸，也是老司机，也是那么干练。</p>\n<p>“我们走！”师傅一脚油门。</p>\n","site":{"data":{}},"excerpt":"<p>“老司机，这一招真绝！”</p>\n<p>我惊奇地盯着身旁的师傅，惊叹一声。</p>\n<p>就在三秒前，我乘坐的出租车一个大滑步，从商场前边的人行道径直穿过，飞到十字路口的红灯下又一个急转弯，”唰”的一声回到了马路中间正常行驶。此时刚好变成绿灯，身后长长的车队还未启动……</p>","more":"<p>“小伙子，刚才那条道是商场停车场出口的路线，我有没有违法交通！”</p>\n<p>“哈哈，没有没有，一看你就是老江湖了!”</p>\n<p>“我有没有违规……”</p>\n<p>“没没”</p>\n<p>司机师傅仍然喋喋不休，不是解释，更像是炫耀自己的车技。我除了惊叹之余还是有一点小怕，这样的极品飞车，我上次遇到应该还是西安的916。我真想说哥你专心开车吧，我的小心脏受不了啊。</p>\n<p>见我不吭声了，师傅又开始絮叨之前发生的事情。</p>\n<p>“刚才那两个女孩顺路，坐我的车是不是刚好！”</p>\n<p>“大哥你都拉了两伙人了，人家嫌挤也是可以理解的嘛……”</p>\n<p>“坐我的车是不是刚好顺路！”</p>\n<p>“是是…”</p>\n<p>见过拼车的，没见过出租车司机这么一路吆喝的，见人就问。有两个女孩顺路，但是看到车上已经坐了两个人，扭头离开，师傅立马健步下车追上去十几米试图挽留，俩姑娘差点都要喊非礼了。</p>\n<p>我坐在前排，看着司机师傅挽留无果，从远处人群中走回来，年纪应该有四五十岁了，但步伐矫健。不知怎么，看到这一幕我突然想起我爸，也是老司机，也是那么干练。</p>\n<p>“我们走！”师傅一脚油门。</p>"},{"title":"浅析前后端分离","date":"2016-11-03T14:02:45.000Z","_content":"\n在那个还不算遥远的刀耕火种时代，Java Web 项目中的前端开发者写好页面模板，然后丢给后台哥们完事。这过程中后台开发人员需要写一些蹩脚的 js 交互代码，如果模板需要调整，还要求前端er在别人电脑上面修改。 这样不仅开发效率低，更主要的是，将我们前端开发人员置于何处，切图仔、网页制作？不想当厨子的士兵不是好司机，我们当然要自己主宰产品的展现，也要拒绝低效的工作环境，因此探索前后端分离的方案，从来就没有停止过。\n\n<!-- more -->\n之所以说没有停止，一方面为了赞扬广大一线 WEB 开发者勇于探索的精神(呵呵)，另一方面也是因为现有的解决方案还有待完善。目前来说比较流行的前后端分离的解决方案有两种：\n\n> ** 1. 前端使用动态模板，后端只提供接口 **\n\n这种方案主要针对包含大量交互功能的应用类系统，比如后台管理。前端采用 MV* (angular, react) 框架，或者直接简单粗暴使用 ajax ，利用模板引擎完成完整的页面效果，后台根据事先的数据交互约定，提供相应的 RESTful 接口。项目前期，前后端分别独立开发，数据联调阶段，前端可以使用 Nginx 反向代理（现在特别流行的 webpack 已经内置了该功能），静态请求由 Nginx 处理，动态的请求转发给后端服务。\n\n这种方式也有一些缺点，MV* 框架由于需要在前端渲染模板，这对于 SEO 来说简直是灾难；angular, react 需要更高级的浏览器(IE9 +)支持，这并不能满足所有用户的需求；angular, react 多数采用单页面形式，除了首屏加载慢以外，某些模块的加载失败甚至可能影响整个系统的功能。\n\n> ** 2. 使用 Node 作为中间层 **\n\n对于内容展现类应用，注重浏览效果和交互体验，可以采用这种方案。在前端和后台之间加入 Node 中间层，此时浏览器负责 CSS 渲染和 DOM 操作，Node 层进行数据请求、路由和页面渲染等任务，服务器提供数据接口。这种方式一定程度上增加了前端开发人员的工作量，也对其能力提出更高的要求，因为 Node 层也需要他们来编写。具体实现可以参考淘宝的\"中途岛\"项目。\n\n除了上述的两种方案，这两年出现了前后端通吃的\"全栈工程师\"这样的高端工种，分分钟鄙视掉前端后台，分离神马的问题也就不存在了。还有一点也想提一下，那就是 node.js 的出现使得前端er成功插足后台领域，node + mongodb + ejs 这样的组合照样可以撸出一套完整的系统。\n","source":"_posts/浅析前后端分离.md","raw":"---\ntitle: 浅析前后端分离\ndate: 2016-11-03 22:02:45\ntags: 前端\n---\n\n在那个还不算遥远的刀耕火种时代，Java Web 项目中的前端开发者写好页面模板，然后丢给后台哥们完事。这过程中后台开发人员需要写一些蹩脚的 js 交互代码，如果模板需要调整，还要求前端er在别人电脑上面修改。 这样不仅开发效率低，更主要的是，将我们前端开发人员置于何处，切图仔、网页制作？不想当厨子的士兵不是好司机，我们当然要自己主宰产品的展现，也要拒绝低效的工作环境，因此探索前后端分离的方案，从来就没有停止过。\n\n<!-- more -->\n之所以说没有停止，一方面为了赞扬广大一线 WEB 开发者勇于探索的精神(呵呵)，另一方面也是因为现有的解决方案还有待完善。目前来说比较流行的前后端分离的解决方案有两种：\n\n> ** 1. 前端使用动态模板，后端只提供接口 **\n\n这种方案主要针对包含大量交互功能的应用类系统，比如后台管理。前端采用 MV* (angular, react) 框架，或者直接简单粗暴使用 ajax ，利用模板引擎完成完整的页面效果，后台根据事先的数据交互约定，提供相应的 RESTful 接口。项目前期，前后端分别独立开发，数据联调阶段，前端可以使用 Nginx 反向代理（现在特别流行的 webpack 已经内置了该功能），静态请求由 Nginx 处理，动态的请求转发给后端服务。\n\n这种方式也有一些缺点，MV* 框架由于需要在前端渲染模板，这对于 SEO 来说简直是灾难；angular, react 需要更高级的浏览器(IE9 +)支持，这并不能满足所有用户的需求；angular, react 多数采用单页面形式，除了首屏加载慢以外，某些模块的加载失败甚至可能影响整个系统的功能。\n\n> ** 2. 使用 Node 作为中间层 **\n\n对于内容展现类应用，注重浏览效果和交互体验，可以采用这种方案。在前端和后台之间加入 Node 中间层，此时浏览器负责 CSS 渲染和 DOM 操作，Node 层进行数据请求、路由和页面渲染等任务，服务器提供数据接口。这种方式一定程度上增加了前端开发人员的工作量，也对其能力提出更高的要求，因为 Node 层也需要他们来编写。具体实现可以参考淘宝的\"中途岛\"项目。\n\n除了上述的两种方案，这两年出现了前后端通吃的\"全栈工程师\"这样的高端工种，分分钟鄙视掉前端后台，分离神马的问题也就不存在了。还有一点也想提一下，那就是 node.js 的出现使得前端er成功插足后台领域，node + mongodb + ejs 这样的组合照样可以撸出一套完整的系统。\n","slug":"浅析前后端分离","published":1,"updated":"2016-12-29T01:44:36.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a79c000p6klbag734zwh","content":"<p>在那个还不算遥远的刀耕火种时代，Java Web 项目中的前端开发者写好页面模板，然后丢给后台哥们完事。这过程中后台开发人员需要写一些蹩脚的 js 交互代码，如果模板需要调整，还要求前端er在别人电脑上面修改。 这样不仅开发效率低，更主要的是，将我们前端开发人员置于何处，切图仔、网页制作？不想当厨子的士兵不是好司机，我们当然要自己主宰产品的展现，也要拒绝低效的工作环境，因此探索前后端分离的方案，从来就没有停止过。</p>\n<a id=\"more\"></a>\n<p>之所以说没有停止，一方面为了赞扬广大一线 WEB 开发者勇于探索的精神(呵呵)，另一方面也是因为现有的解决方案还有待完善。目前来说比较流行的前后端分离的解决方案有两种：</p>\n<blockquote>\n<p><strong> 1. 前端使用动态模板，后端只提供接口 </strong></p>\n</blockquote>\n<p>这种方案主要针对包含大量交互功能的应用类系统，比如后台管理。前端采用 MV* (angular, react) 框架，或者直接简单粗暴使用 ajax ，利用模板引擎完成完整的页面效果，后台根据事先的数据交互约定，提供相应的 RESTful 接口。项目前期，前后端分别独立开发，数据联调阶段，前端可以使用 Nginx 反向代理（现在特别流行的 webpack 已经内置了该功能），静态请求由 Nginx 处理，动态的请求转发给后端服务。</p>\n<p>这种方式也有一些缺点，MV* 框架由于需要在前端渲染模板，这对于 SEO 来说简直是灾难；angular, react 需要更高级的浏览器(IE9 +)支持，这并不能满足所有用户的需求；angular, react 多数采用单页面形式，除了首屏加载慢以外，某些模块的加载失败甚至可能影响整个系统的功能。</p>\n<blockquote>\n<p><strong> 2. 使用 Node 作为中间层 </strong></p>\n</blockquote>\n<p>对于内容展现类应用，注重浏览效果和交互体验，可以采用这种方案。在前端和后台之间加入 Node 中间层，此时浏览器负责 CSS 渲染和 DOM 操作，Node 层进行数据请求、路由和页面渲染等任务，服务器提供数据接口。这种方式一定程度上增加了前端开发人员的工作量，也对其能力提出更高的要求，因为 Node 层也需要他们来编写。具体实现可以参考淘宝的”中途岛”项目。</p>\n<p>除了上述的两种方案，这两年出现了前后端通吃的”全栈工程师”这样的高端工种，分分钟鄙视掉前端后台，分离神马的问题也就不存在了。还有一点也想提一下，那就是 node.js 的出现使得前端er成功插足后台领域，node + mongodb + ejs 这样的组合照样可以撸出一套完整的系统。</p>\n","site":{"data":{}},"excerpt":"<p>在那个还不算遥远的刀耕火种时代，Java Web 项目中的前端开发者写好页面模板，然后丢给后台哥们完事。这过程中后台开发人员需要写一些蹩脚的 js 交互代码，如果模板需要调整，还要求前端er在别人电脑上面修改。 这样不仅开发效率低，更主要的是，将我们前端开发人员置于何处，切图仔、网页制作？不想当厨子的士兵不是好司机，我们当然要自己主宰产品的展现，也要拒绝低效的工作环境，因此探索前后端分离的方案，从来就没有停止过。</p>","more":"<p>之所以说没有停止，一方面为了赞扬广大一线 WEB 开发者勇于探索的精神(呵呵)，另一方面也是因为现有的解决方案还有待完善。目前来说比较流行的前后端分离的解决方案有两种：</p>\n<blockquote>\n<p><strong> 1. 前端使用动态模板，后端只提供接口 </strong></p>\n</blockquote>\n<p>这种方案主要针对包含大量交互功能的应用类系统，比如后台管理。前端采用 MV* (angular, react) 框架，或者直接简单粗暴使用 ajax ，利用模板引擎完成完整的页面效果，后台根据事先的数据交互约定，提供相应的 RESTful 接口。项目前期，前后端分别独立开发，数据联调阶段，前端可以使用 Nginx 反向代理（现在特别流行的 webpack 已经内置了该功能），静态请求由 Nginx 处理，动态的请求转发给后端服务。</p>\n<p>这种方式也有一些缺点，MV* 框架由于需要在前端渲染模板，这对于 SEO 来说简直是灾难；angular, react 需要更高级的浏览器(IE9 +)支持，这并不能满足所有用户的需求；angular, react 多数采用单页面形式，除了首屏加载慢以外，某些模块的加载失败甚至可能影响整个系统的功能。</p>\n<blockquote>\n<p><strong> 2. 使用 Node 作为中间层 </strong></p>\n</blockquote>\n<p>对于内容展现类应用，注重浏览效果和交互体验，可以采用这种方案。在前端和后台之间加入 Node 中间层，此时浏览器负责 CSS 渲染和 DOM 操作，Node 层进行数据请求、路由和页面渲染等任务，服务器提供数据接口。这种方式一定程度上增加了前端开发人员的工作量，也对其能力提出更高的要求，因为 Node 层也需要他们来编写。具体实现可以参考淘宝的”中途岛”项目。</p>\n<p>除了上述的两种方案，这两年出现了前后端通吃的”全栈工程师”这样的高端工种，分分钟鄙视掉前端后台，分离神马的问题也就不存在了。还有一点也想提一下，那就是 node.js 的出现使得前端er成功插足后台领域，node + mongodb + ejs 这样的组合照样可以撸出一套完整的系统。</p>"},{"title":"浑浑噩噩的一个周末","date":"2016-12-11T15:48:24.000Z","_content":"\n有点累了。\n\n一觉睡到十二点半，洗了个脸就打开电脑，打算把上周做的一个小 demo 部署到服务器，正好昨天买了一个阿里云 ECS，想试试手。结果这一试，一天就没了。\n\n这个点还没搞好，老出现一些莫名其妙的问题，有点不淡定了。特别想吐槽一下 linux 系统，对我这种新手充满了恶意，就不能坐下来好好聊，动不动就 error，分分钟友尽。\n\n算你狠，洗澡睡觉去了。","source":"_posts/浑浑噩噩的一个周末.md","raw":"---\ntitle: 浑浑噩噩的一个周末\ndate: 2016-12-11 23:48:24\ntags: 扯\n---\n\n有点累了。\n\n一觉睡到十二点半，洗了个脸就打开电脑，打算把上周做的一个小 demo 部署到服务器，正好昨天买了一个阿里云 ECS，想试试手。结果这一试，一天就没了。\n\n这个点还没搞好，老出现一些莫名其妙的问题，有点不淡定了。特别想吐槽一下 linux 系统，对我这种新手充满了恶意，就不能坐下来好好聊，动不动就 error，分分钟友尽。\n\n算你狠，洗澡睡觉去了。","slug":"浑浑噩噩的一个周末","published":1,"updated":"2016-12-21T06:11:15.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a79s000r6klbzy4vyhm0","content":"<p>有点累了。</p>\n<p>一觉睡到十二点半，洗了个脸就打开电脑，打算把上周做的一个小 demo 部署到服务器，正好昨天买了一个阿里云 ECS，想试试手。结果这一试，一天就没了。</p>\n<p>这个点还没搞好，老出现一些莫名其妙的问题，有点不淡定了。特别想吐槽一下 linux 系统，对我这种新手充满了恶意，就不能坐下来好好聊，动不动就 error，分分钟友尽。</p>\n<p>算你狠，洗澡睡觉去了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>有点累了。</p>\n<p>一觉睡到十二点半，洗了个脸就打开电脑，打算把上周做的一个小 demo 部署到服务器，正好昨天买了一个阿里云 ECS，想试试手。结果这一试，一天就没了。</p>\n<p>这个点还没搞好，老出现一些莫名其妙的问题，有点不淡定了。特别想吐槽一下 linux 系统，对我这种新手充满了恶意，就不能坐下来好好聊，动不动就 error，分分钟友尽。</p>\n<p>算你狠，洗澡睡觉去了。</p>\n"},{"title":"榕城一两事（三）","date":"2016-12-12T16:04:17.000Z","_content":"\n夜里坐在返程的公交车上，望着窗外霓虹点点，人流窜动。路况不是很好，一颠一颠的，但我还是睡着了。迷糊了一下，也不知道到哪了，车里只剩下我，司机，还有他儿子坐在副驾驶上。管它呢，反正火车站是终点。玩会手机吧，翻看下白天在湄洲岛拍下的美景，自然的就是好，没有七八A，没有黄金周，也没有攻略，却给人纯粹的旅行的体验。在这里更像是路过一座小乡村，走过人家的门口还能闻到浓浓的鱼腥味，路旁的海滩是孩子放学后活动的乐园。这要是有人提着鞋，大跨步跑到海浪前，兴奋和感慨忍不住强行抒发“我终于见到大海了，就是这个感觉。。。”旁边一定有人说，这人有病吧。\n\n<!-- more -->\n\n“师傅，还没有到火车站吗？”\n\n“早就到火车站了，都过了一个县了......”\n\n这......\n\n“下个站放我下去吧，刚才睡过头了。”\n\n这个心情啊，求带走我眼前这一万只草泥马吧。\n\n下车后四下里观望了一下，旁边是一个汽车站，这个点也下班了。路边连个公交站牌都没有，摩的倒是不少。我一抬头，师傅立马精确定位到我面前。\n\n“去哪里？”四十多岁的年纪，实际可能要年轻一些。\n\n“我不坐。”我连连摇头，继续寻找着公交站牌。\n\n“这里没有公交车的。”\n\n没搭理。\n\n据我多年的经验，困难找百度，绝望找淘宝，眼下这点小事百度吧。查了下果然没公交车，这下可麻烦了。\n\n“去火车站多少钱？”\n\n“35” /眼睛一亮。\n\n我转身要走。\n\n“你要多少？”\n\n“20”\n\n“那不行，去火车站很远的。”师傅微微冷笑。\n\n“能有多远，我还是打的吧。”我仍然一脸的不屑。\n\n“25吧”\n\n没搭理，我转身朝汽车站的候车大厅走去，主要是想找个地儿取点钱。取完钱，看到车站大门口停了几辆轿车，很明显是跑黑车的。我走上前去询问一下价钱。\n\n“100”\n\n去你大爷的，抢钱吧，我心里默念，转身就走。\n\n“你要多少？”\n\n没有回头，向前走了三十米的距离，找到了刚才那位摩的司机，勉强也能称作司机吧。\n\n“25，走吧！”\n\n我一个健步跨上铁驴，全速赶往火车站，一路上我只顾着扶帽子，因为速度太快，风速太大。尽管坐在师傅身后，凉风还是见缝嗖嗖的往衣服里钻。回想着这一天也够风风火火的，心血来潮坐上高铁，临时退房改变行程，昏昏沉沉坐过车站，坐着摩的踏上归程，也算是丰富。\n\n一路狂飙大概半个小时终于到火车站了，想想我这公交得坐过了多少站......\n\n“没想到还是挺远的啊。”我笑着说道。\n\n“就跟你说远嘛，你也不会多付我钱。”师傅也笑了。\n\n“知道你们也不容易，哈哈。”我感到丝丝歉意，真的想多付些钱，但我们有约在先，就是这样。我跟师傅挥手再见，径直向进站口走去。\n","source":"_posts/榕城一两事（三）.md","raw":"---\ntitle: 榕城一两事（三）\ndate: 2016-12-13 00:04:17\ntags: 随笔\n---\n\n夜里坐在返程的公交车上，望着窗外霓虹点点，人流窜动。路况不是很好，一颠一颠的，但我还是睡着了。迷糊了一下，也不知道到哪了，车里只剩下我，司机，还有他儿子坐在副驾驶上。管它呢，反正火车站是终点。玩会手机吧，翻看下白天在湄洲岛拍下的美景，自然的就是好，没有七八A，没有黄金周，也没有攻略，却给人纯粹的旅行的体验。在这里更像是路过一座小乡村，走过人家的门口还能闻到浓浓的鱼腥味，路旁的海滩是孩子放学后活动的乐园。这要是有人提着鞋，大跨步跑到海浪前，兴奋和感慨忍不住强行抒发“我终于见到大海了，就是这个感觉。。。”旁边一定有人说，这人有病吧。\n\n<!-- more -->\n\n“师傅，还没有到火车站吗？”\n\n“早就到火车站了，都过了一个县了......”\n\n这......\n\n“下个站放我下去吧，刚才睡过头了。”\n\n这个心情啊，求带走我眼前这一万只草泥马吧。\n\n下车后四下里观望了一下，旁边是一个汽车站，这个点也下班了。路边连个公交站牌都没有，摩的倒是不少。我一抬头，师傅立马精确定位到我面前。\n\n“去哪里？”四十多岁的年纪，实际可能要年轻一些。\n\n“我不坐。”我连连摇头，继续寻找着公交站牌。\n\n“这里没有公交车的。”\n\n没搭理。\n\n据我多年的经验，困难找百度，绝望找淘宝，眼下这点小事百度吧。查了下果然没公交车，这下可麻烦了。\n\n“去火车站多少钱？”\n\n“35” /眼睛一亮。\n\n我转身要走。\n\n“你要多少？”\n\n“20”\n\n“那不行，去火车站很远的。”师傅微微冷笑。\n\n“能有多远，我还是打的吧。”我仍然一脸的不屑。\n\n“25吧”\n\n没搭理，我转身朝汽车站的候车大厅走去，主要是想找个地儿取点钱。取完钱，看到车站大门口停了几辆轿车，很明显是跑黑车的。我走上前去询问一下价钱。\n\n“100”\n\n去你大爷的，抢钱吧，我心里默念，转身就走。\n\n“你要多少？”\n\n没有回头，向前走了三十米的距离，找到了刚才那位摩的司机，勉强也能称作司机吧。\n\n“25，走吧！”\n\n我一个健步跨上铁驴，全速赶往火车站，一路上我只顾着扶帽子，因为速度太快，风速太大。尽管坐在师傅身后，凉风还是见缝嗖嗖的往衣服里钻。回想着这一天也够风风火火的，心血来潮坐上高铁，临时退房改变行程，昏昏沉沉坐过车站，坐着摩的踏上归程，也算是丰富。\n\n一路狂飙大概半个小时终于到火车站了，想想我这公交得坐过了多少站......\n\n“没想到还是挺远的啊。”我笑着说道。\n\n“就跟你说远嘛，你也不会多付我钱。”师傅也笑了。\n\n“知道你们也不容易，哈哈。”我感到丝丝歉意，真的想多付些钱，但我们有约在先，就是这样。我跟师傅挥手再见，径直向进站口走去。\n","slug":"榕城一两事（三）","published":1,"updated":"2016-12-21T06:11:26.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a79s000t6klbn9crpf23","content":"<p>夜里坐在返程的公交车上，望着窗外霓虹点点，人流窜动。路况不是很好，一颠一颠的，但我还是睡着了。迷糊了一下，也不知道到哪了，车里只剩下我，司机，还有他儿子坐在副驾驶上。管它呢，反正火车站是终点。玩会手机吧，翻看下白天在湄洲岛拍下的美景，自然的就是好，没有七八A，没有黄金周，也没有攻略，却给人纯粹的旅行的体验。在这里更像是路过一座小乡村，走过人家的门口还能闻到浓浓的鱼腥味，路旁的海滩是孩子放学后活动的乐园。这要是有人提着鞋，大跨步跑到海浪前，兴奋和感慨忍不住强行抒发“我终于见到大海了，就是这个感觉。。。”旁边一定有人说，这人有病吧。</p>\n<a id=\"more\"></a>\n<p>“师傅，还没有到火车站吗？”</p>\n<p>“早就到火车站了，都过了一个县了……”</p>\n<p>这……</p>\n<p>“下个站放我下去吧，刚才睡过头了。”</p>\n<p>这个心情啊，求带走我眼前这一万只草泥马吧。</p>\n<p>下车后四下里观望了一下，旁边是一个汽车站，这个点也下班了。路边连个公交站牌都没有，摩的倒是不少。我一抬头，师傅立马精确定位到我面前。</p>\n<p>“去哪里？”四十多岁的年纪，实际可能要年轻一些。</p>\n<p>“我不坐。”我连连摇头，继续寻找着公交站牌。</p>\n<p>“这里没有公交车的。”</p>\n<p>没搭理。</p>\n<p>据我多年的经验，困难找百度，绝望找淘宝，眼下这点小事百度吧。查了下果然没公交车，这下可麻烦了。</p>\n<p>“去火车站多少钱？”</p>\n<p>“35” /眼睛一亮。</p>\n<p>我转身要走。</p>\n<p>“你要多少？”</p>\n<p>“20”</p>\n<p>“那不行，去火车站很远的。”师傅微微冷笑。</p>\n<p>“能有多远，我还是打的吧。”我仍然一脸的不屑。</p>\n<p>“25吧”</p>\n<p>没搭理，我转身朝汽车站的候车大厅走去，主要是想找个地儿取点钱。取完钱，看到车站大门口停了几辆轿车，很明显是跑黑车的。我走上前去询问一下价钱。</p>\n<p>“100”</p>\n<p>去你大爷的，抢钱吧，我心里默念，转身就走。</p>\n<p>“你要多少？”</p>\n<p>没有回头，向前走了三十米的距离，找到了刚才那位摩的司机，勉强也能称作司机吧。</p>\n<p>“25，走吧！”</p>\n<p>我一个健步跨上铁驴，全速赶往火车站，一路上我只顾着扶帽子，因为速度太快，风速太大。尽管坐在师傅身后，凉风还是见缝嗖嗖的往衣服里钻。回想着这一天也够风风火火的，心血来潮坐上高铁，临时退房改变行程，昏昏沉沉坐过车站，坐着摩的踏上归程，也算是丰富。</p>\n<p>一路狂飙大概半个小时终于到火车站了，想想我这公交得坐过了多少站……</p>\n<p>“没想到还是挺远的啊。”我笑着说道。</p>\n<p>“就跟你说远嘛，你也不会多付我钱。”师傅也笑了。</p>\n<p>“知道你们也不容易，哈哈。”我感到丝丝歉意，真的想多付些钱，但我们有约在先，就是这样。我跟师傅挥手再见，径直向进站口走去。</p>\n","site":{"data":{}},"excerpt":"<p>夜里坐在返程的公交车上，望着窗外霓虹点点，人流窜动。路况不是很好，一颠一颠的，但我还是睡着了。迷糊了一下，也不知道到哪了，车里只剩下我，司机，还有他儿子坐在副驾驶上。管它呢，反正火车站是终点。玩会手机吧，翻看下白天在湄洲岛拍下的美景，自然的就是好，没有七八A，没有黄金周，也没有攻略，却给人纯粹的旅行的体验。在这里更像是路过一座小乡村，走过人家的门口还能闻到浓浓的鱼腥味，路旁的海滩是孩子放学后活动的乐园。这要是有人提着鞋，大跨步跑到海浪前，兴奋和感慨忍不住强行抒发“我终于见到大海了，就是这个感觉。。。”旁边一定有人说，这人有病吧。</p>","more":"<p>“师傅，还没有到火车站吗？”</p>\n<p>“早就到火车站了，都过了一个县了……”</p>\n<p>这……</p>\n<p>“下个站放我下去吧，刚才睡过头了。”</p>\n<p>这个心情啊，求带走我眼前这一万只草泥马吧。</p>\n<p>下车后四下里观望了一下，旁边是一个汽车站，这个点也下班了。路边连个公交站牌都没有，摩的倒是不少。我一抬头，师傅立马精确定位到我面前。</p>\n<p>“去哪里？”四十多岁的年纪，实际可能要年轻一些。</p>\n<p>“我不坐。”我连连摇头，继续寻找着公交站牌。</p>\n<p>“这里没有公交车的。”</p>\n<p>没搭理。</p>\n<p>据我多年的经验，困难找百度，绝望找淘宝，眼下这点小事百度吧。查了下果然没公交车，这下可麻烦了。</p>\n<p>“去火车站多少钱？”</p>\n<p>“35” /眼睛一亮。</p>\n<p>我转身要走。</p>\n<p>“你要多少？”</p>\n<p>“20”</p>\n<p>“那不行，去火车站很远的。”师傅微微冷笑。</p>\n<p>“能有多远，我还是打的吧。”我仍然一脸的不屑。</p>\n<p>“25吧”</p>\n<p>没搭理，我转身朝汽车站的候车大厅走去，主要是想找个地儿取点钱。取完钱，看到车站大门口停了几辆轿车，很明显是跑黑车的。我走上前去询问一下价钱。</p>\n<p>“100”</p>\n<p>去你大爷的，抢钱吧，我心里默念，转身就走。</p>\n<p>“你要多少？”</p>\n<p>没有回头，向前走了三十米的距离，找到了刚才那位摩的司机，勉强也能称作司机吧。</p>\n<p>“25，走吧！”</p>\n<p>我一个健步跨上铁驴，全速赶往火车站，一路上我只顾着扶帽子，因为速度太快，风速太大。尽管坐在师傅身后，凉风还是见缝嗖嗖的往衣服里钻。回想着这一天也够风风火火的，心血来潮坐上高铁，临时退房改变行程，昏昏沉沉坐过车站，坐着摩的踏上归程，也算是丰富。</p>\n<p>一路狂飙大概半个小时终于到火车站了，想想我这公交得坐过了多少站……</p>\n<p>“没想到还是挺远的啊。”我笑着说道。</p>\n<p>“就跟你说远嘛，你也不会多付我钱。”师傅也笑了。</p>\n<p>“知道你们也不容易，哈哈。”我感到丝丝歉意，真的想多付些钱，但我们有约在先，就是这样。我跟师傅挥手再见，径直向进站口走去。</p>"},{"title":"第一次浏览器大战","date":"2016-08-30T15:55:51.000Z","_content":"\n互联网如汹涌的大潮，浩浩荡荡席卷全球，所到之处无论什么行业都在发生脱胎换骨的变化。作为互联网接入的窗口，浏览器一直扮演着举足轻重的角色，即使是今天各类终端五花八门，浏览器在人们的日常应用中仍然不可或缺。现在的浏览器可谓百花齐放百家争鸣，近年来Chrome强势崛起，Firefox持久稳定，IE也不再那么高冷，另外还有各类国产品牌跃跃欲试，可谓诸侯争霸。而回顾早期浏览器的发展历程，可以算得上是跌宕起伏，令人唏嘘，今天想整理一下第一次浏览器大战的始末。\n<!-- more -->\n\n![入口之争](http://ocz1xi4bl.bkt.clouddn.com/135186881.jpg)\n\n第一次浏览器大战开始于1994年，故事的主角是网景(Netscape)和微软。上世纪九十年代初互联网还是个新兴的事物，94年网景推出了第一款浏览器——Netscape，直观便捷的操作极大地提高了人们浏览的速度，加快了信息的传递，很快便开始了风光的历程，一度占据整个浏览器市场。另一方面微软觉得小小的浏览器能有什么大作为，像曾经IBM没看上微软一样，并没有在意Netscape的发展。\n\n然而，网络的发展大大出乎微软的意料，爆发式的用户增长，迅速使Netscape成为大众的焦点。可以想象，任何一个产品，即使他再不赚钱，如果能够拥有巨大的用户量，也将有无限的潜力。这个时候微软意识到了问题的严重性，于是很快开发出自己的浏览器——Internet Explorer，由于开发时间上的仓促，最初的IE版本漏洞百出，根本无法与Netscape相抗衡，微软继续加大投入，相继推出了IE2.0、3.0和4.0版本。此时的Netscape不仅趋于成熟，而且坐拥大量用户，老大的地位看似很难被撼动，直到微软使出了自己的“必杀技”。\n\n97年，微软将IE与Windows 95操作系统捆绑在一起，凭借着Windows这一大杀器，迅速使IE占据了主动权。Netscape回天乏术，很快败下阵来，最终被美国在线收购。后来Netscape开源，成立Mozilla基金会，再后来推出了Firefox浏览器。\n\n第一次浏览器大战就此落下帷幕。微软获得了最后的胜利，从此统治浏览器长达十年之久，这场战争不仅减缓了浏览器的发展，更是将WEB开发者推进无尽的深渊。为什么这么说呢，且听下回分解。。。","source":"_posts/第一次浏览器大战.md","raw":"---\ntitle: 第一次浏览器大战\ndate: 2016-08-30 23:55:51\ntags: 扯\n---\n\n互联网如汹涌的大潮，浩浩荡荡席卷全球，所到之处无论什么行业都在发生脱胎换骨的变化。作为互联网接入的窗口，浏览器一直扮演着举足轻重的角色，即使是今天各类终端五花八门，浏览器在人们的日常应用中仍然不可或缺。现在的浏览器可谓百花齐放百家争鸣，近年来Chrome强势崛起，Firefox持久稳定，IE也不再那么高冷，另外还有各类国产品牌跃跃欲试，可谓诸侯争霸。而回顾早期浏览器的发展历程，可以算得上是跌宕起伏，令人唏嘘，今天想整理一下第一次浏览器大战的始末。\n<!-- more -->\n\n![入口之争](http://ocz1xi4bl.bkt.clouddn.com/135186881.jpg)\n\n第一次浏览器大战开始于1994年，故事的主角是网景(Netscape)和微软。上世纪九十年代初互联网还是个新兴的事物，94年网景推出了第一款浏览器——Netscape，直观便捷的操作极大地提高了人们浏览的速度，加快了信息的传递，很快便开始了风光的历程，一度占据整个浏览器市场。另一方面微软觉得小小的浏览器能有什么大作为，像曾经IBM没看上微软一样，并没有在意Netscape的发展。\n\n然而，网络的发展大大出乎微软的意料，爆发式的用户增长，迅速使Netscape成为大众的焦点。可以想象，任何一个产品，即使他再不赚钱，如果能够拥有巨大的用户量，也将有无限的潜力。这个时候微软意识到了问题的严重性，于是很快开发出自己的浏览器——Internet Explorer，由于开发时间上的仓促，最初的IE版本漏洞百出，根本无法与Netscape相抗衡，微软继续加大投入，相继推出了IE2.0、3.0和4.0版本。此时的Netscape不仅趋于成熟，而且坐拥大量用户，老大的地位看似很难被撼动，直到微软使出了自己的“必杀技”。\n\n97年，微软将IE与Windows 95操作系统捆绑在一起，凭借着Windows这一大杀器，迅速使IE占据了主动权。Netscape回天乏术，很快败下阵来，最终被美国在线收购。后来Netscape开源，成立Mozilla基金会，再后来推出了Firefox浏览器。\n\n第一次浏览器大战就此落下帷幕。微软获得了最后的胜利，从此统治浏览器长达十年之久，这场战争不仅减缓了浏览器的发展，更是将WEB开发者推进无尽的深渊。为什么这么说呢，且听下回分解。。。","slug":"第一次浏览器大战","published":1,"updated":"2017-06-15T11:56:39.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a7a7000v6klboy62yhsj","content":"<p>互联网如汹涌的大潮，浩浩荡荡席卷全球，所到之处无论什么行业都在发生脱胎换骨的变化。作为互联网接入的窗口，浏览器一直扮演着举足轻重的角色，即使是今天各类终端五花八门，浏览器在人们的日常应用中仍然不可或缺。现在的浏览器可谓百花齐放百家争鸣，近年来Chrome强势崛起，Firefox持久稳定，IE也不再那么高冷，另外还有各类国产品牌跃跃欲试，可谓诸侯争霸。而回顾早期浏览器的发展历程，可以算得上是跌宕起伏，令人唏嘘，今天想整理一下第一次浏览器大战的始末。<br><a id=\"more\"></a></p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/135186881.jpg\" alt=\"入口之争\"></p>\n<p>第一次浏览器大战开始于1994年，故事的主角是网景(Netscape)和微软。上世纪九十年代初互联网还是个新兴的事物，94年网景推出了第一款浏览器——Netscape，直观便捷的操作极大地提高了人们浏览的速度，加快了信息的传递，很快便开始了风光的历程，一度占据整个浏览器市场。另一方面微软觉得小小的浏览器能有什么大作为，像曾经IBM没看上微软一样，并没有在意Netscape的发展。</p>\n<p>然而，网络的发展大大出乎微软的意料，爆发式的用户增长，迅速使Netscape成为大众的焦点。可以想象，任何一个产品，即使他再不赚钱，如果能够拥有巨大的用户量，也将有无限的潜力。这个时候微软意识到了问题的严重性，于是很快开发出自己的浏览器——Internet Explorer，由于开发时间上的仓促，最初的IE版本漏洞百出，根本无法与Netscape相抗衡，微软继续加大投入，相继推出了IE2.0、3.0和4.0版本。此时的Netscape不仅趋于成熟，而且坐拥大量用户，老大的地位看似很难被撼动，直到微软使出了自己的“必杀技”。</p>\n<p>97年，微软将IE与Windows 95操作系统捆绑在一起，凭借着Windows这一大杀器，迅速使IE占据了主动权。Netscape回天乏术，很快败下阵来，最终被美国在线收购。后来Netscape开源，成立Mozilla基金会，再后来推出了Firefox浏览器。</p>\n<p>第一次浏览器大战就此落下帷幕。微软获得了最后的胜利，从此统治浏览器长达十年之久，这场战争不仅减缓了浏览器的发展，更是将WEB开发者推进无尽的深渊。为什么这么说呢，且听下回分解。。。</p>\n","site":{"data":{}},"excerpt":"<p>互联网如汹涌的大潮，浩浩荡荡席卷全球，所到之处无论什么行业都在发生脱胎换骨的变化。作为互联网接入的窗口，浏览器一直扮演着举足轻重的角色，即使是今天各类终端五花八门，浏览器在人们的日常应用中仍然不可或缺。现在的浏览器可谓百花齐放百家争鸣，近年来Chrome强势崛起，Firefox持久稳定，IE也不再那么高冷，另外还有各类国产品牌跃跃欲试，可谓诸侯争霸。而回顾早期浏览器的发展历程，可以算得上是跌宕起伏，令人唏嘘，今天想整理一下第一次浏览器大战的始末。<br>","more":"</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/135186881.jpg\" alt=\"入口之争\"></p>\n<p>第一次浏览器大战开始于1994年，故事的主角是网景(Netscape)和微软。上世纪九十年代初互联网还是个新兴的事物，94年网景推出了第一款浏览器——Netscape，直观便捷的操作极大地提高了人们浏览的速度，加快了信息的传递，很快便开始了风光的历程，一度占据整个浏览器市场。另一方面微软觉得小小的浏览器能有什么大作为，像曾经IBM没看上微软一样，并没有在意Netscape的发展。</p>\n<p>然而，网络的发展大大出乎微软的意料，爆发式的用户增长，迅速使Netscape成为大众的焦点。可以想象，任何一个产品，即使他再不赚钱，如果能够拥有巨大的用户量，也将有无限的潜力。这个时候微软意识到了问题的严重性，于是很快开发出自己的浏览器——Internet Explorer，由于开发时间上的仓促，最初的IE版本漏洞百出，根本无法与Netscape相抗衡，微软继续加大投入，相继推出了IE2.0、3.0和4.0版本。此时的Netscape不仅趋于成熟，而且坐拥大量用户，老大的地位看似很难被撼动，直到微软使出了自己的“必杀技”。</p>\n<p>97年，微软将IE与Windows 95操作系统捆绑在一起，凭借着Windows这一大杀器，迅速使IE占据了主动权。Netscape回天乏术，很快败下阵来，最终被美国在线收购。后来Netscape开源，成立Mozilla基金会，再后来推出了Firefox浏览器。</p>\n<p>第一次浏览器大战就此落下帷幕。微软获得了最后的胜利，从此统治浏览器长达十年之久，这场战争不仅减缓了浏览器的发展，更是将WEB开发者推进无尽的深渊。为什么这么说呢，且听下回分解。。。</p>"},{"title":"美丽的平潭岛","date":"2016-09-24T15:57:49.000Z","_content":"\n平潭岛，让我找回了对大海的向往。\n\n小时候觉得只有我大新疆的戈壁滩是最广阔的，直到今天走在平潭岛的浪前。近距离的感受大海的心跳，除了广阔，还多了一份律动和敬畏。\n\n<!-- more -->\n\n“海滨沙滩甲天下，海蚀地貌冠全球”名不虚传：\n\n![海蚀地貌](http://ocz1xi4bl.bkt.clouddn.com/IMG_4284.JPG)\n\n乍一看还以为是阳光留下的影子，结果是潮涨潮落的痕迹：\n\n![潮涨潮落](http://ocz1xi4bl.bkt.clouddn.com/IMG_4287.JPG)\n\n好大的石头，据说即使地震都屹立不倒...\n\n![半洋石帆](http://ocz1xi4bl.bkt.clouddn.com/IMG_4285.JPG)\n\n就这么静静地，远远地感觉。\n\n![静静地大海](http://ocz1xi4bl.bkt.clouddn.com/IMG_4318.JPG)\n\n走在沙滩，被浪打到。\n\n![浪](http://ocz1xi4bl.bkt.clouddn.com/IMG_4349.JPG)\n\n这时候真的被征服到了。\n\n![浪格里格浪](http://ocz1xi4bl.bkt.clouddn.com/IMG_4381.JPG)\n","source":"_posts/美丽的平潭岛.md","raw":"---\ntitle: 美丽的平潭岛\ndate: 2016-09-24 23:57:49\ntags: 随笔\n---\n\n平潭岛，让我找回了对大海的向往。\n\n小时候觉得只有我大新疆的戈壁滩是最广阔的，直到今天走在平潭岛的浪前。近距离的感受大海的心跳，除了广阔，还多了一份律动和敬畏。\n\n<!-- more -->\n\n“海滨沙滩甲天下，海蚀地貌冠全球”名不虚传：\n\n![海蚀地貌](http://ocz1xi4bl.bkt.clouddn.com/IMG_4284.JPG)\n\n乍一看还以为是阳光留下的影子，结果是潮涨潮落的痕迹：\n\n![潮涨潮落](http://ocz1xi4bl.bkt.clouddn.com/IMG_4287.JPG)\n\n好大的石头，据说即使地震都屹立不倒...\n\n![半洋石帆](http://ocz1xi4bl.bkt.clouddn.com/IMG_4285.JPG)\n\n就这么静静地，远远地感觉。\n\n![静静地大海](http://ocz1xi4bl.bkt.clouddn.com/IMG_4318.JPG)\n\n走在沙滩，被浪打到。\n\n![浪](http://ocz1xi4bl.bkt.clouddn.com/IMG_4349.JPG)\n\n这时候真的被征服到了。\n\n![浪格里格浪](http://ocz1xi4bl.bkt.clouddn.com/IMG_4381.JPG)\n","slug":"美丽的平潭岛","published":1,"updated":"2017-06-15T12:06:01.996Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a7a7000x6klb6gvk0ln2","content":"<p>平潭岛，让我找回了对大海的向往。</p>\n<p>小时候觉得只有我大新疆的戈壁滩是最广阔的，直到今天走在平潭岛的浪前。近距离的感受大海的心跳，除了广阔，还多了一份律动和敬畏。</p>\n<a id=\"more\"></a>\n<p>“海滨沙滩甲天下，海蚀地貌冠全球”名不虚传：</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4284.JPG\" alt=\"海蚀地貌\"></p>\n<p>乍一看还以为是阳光留下的影子，结果是潮涨潮落的痕迹：</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4287.JPG\" alt=\"潮涨潮落\"></p>\n<p>好大的石头，据说即使地震都屹立不倒…</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4285.JPG\" alt=\"半洋石帆\"></p>\n<p>就这么静静地，远远地感觉。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4318.JPG\" alt=\"静静地大海\"></p>\n<p>走在沙滩，被浪打到。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4349.JPG\" alt=\"浪\"></p>\n<p>这时候真的被征服到了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4381.JPG\" alt=\"浪格里格浪\"></p>\n","site":{"data":{}},"excerpt":"<p>平潭岛，让我找回了对大海的向往。</p>\n<p>小时候觉得只有我大新疆的戈壁滩是最广阔的，直到今天走在平潭岛的浪前。近距离的感受大海的心跳，除了广阔，还多了一份律动和敬畏。</p>","more":"<p>“海滨沙滩甲天下，海蚀地貌冠全球”名不虚传：</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4284.JPG\" alt=\"海蚀地貌\"></p>\n<p>乍一看还以为是阳光留下的影子，结果是潮涨潮落的痕迹：</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4287.JPG\" alt=\"潮涨潮落\"></p>\n<p>好大的石头，据说即使地震都屹立不倒…</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4285.JPG\" alt=\"半洋石帆\"></p>\n<p>就这么静静地，远远地感觉。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4318.JPG\" alt=\"静静地大海\"></p>\n<p>走在沙滩，被浪打到。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4349.JPG\" alt=\"浪\"></p>\n<p>这时候真的被征服到了。</p>\n<p><img src=\"http://ocz1xi4bl.bkt.clouddn.com/IMG_4381.JPG\" alt=\"浪格里格浪\"></p>"},{"title":"老派剧的闪光","date":"2016-10-01T14:41:27.000Z","_content":"\n很久不看国产片，记得住名字的不少，但都是从朋友圈里看来的影评。今晚瞄了一下《湄公河行动》，挺让人印象深刻，论剧情且看跨国走私大案，论颜值担当且看益达男彭于晏，再加上铁汉直男形象的张涵予，可以说该剧几乎满足了各种口味的观众。今天我不想说剧情怎么的跌宕起伏，走私题材的影视剧我在上小学的时候就开始看了，也不想膜拜哪位明星偶像，连个像样点的女一号都没有也实在不值一提（奸笑）。\n<!-- more -->\n\n最让我印象深刻的是最后一关打BOSS，如果单论技能来说，在主角光环下我缉毒警察是无敌的，至少也是以一敌百。然而这一关的BOSS几乎开启了作弊模式，我缉毒战士被下了死命令，为了得到罪犯口中的情报，要求必须抓活的。想想在战场上能够击毙敌方又能全身而退的已经是九死一生，要在不被伤害的情况下制服对方，这个代价太大了。结局也确实惨痛，彭于晏饰演的卧底警察为了让反一号能被安全带走，他与敌人同归于尽，甚至连尸体都没能完好的带回祖国。\n\n浴血奋战，英勇牺牲，这样的桥段乍一听还以为又是抗日呢，但这就是根据真实故事所改编。平时过得太安逸，几乎忘了现代社会还有奉献这么一回事，上周我赴苏丹维和部队第14批和15批完成工作物资交接。哦哦，原来都去过13批了啊，你或许会有这样的惊讶。如今能够抱有信念和使命工作的，可能只有在军人身上才能体现的淋漓尽致。\n\n我有的时候发朋友圈秀一下努力工作的样子，我叔都会点赞，还要写下评论\"好好工作，回报社会\"，简直就是圈里的一股清(qi)流(pa)。老一辈工作者喜欢唱高调，摆道理。叔，现在已经不流行这一套了啊。然而真的是这样吗，小年轻们总喜欢自嘲都市里的高级打工仔，喜欢高姿态的表达\"工作就是工作，生活就是生活\"，而实际分的清吗？到了工作岗位才渐渐地体会，没有梦想的人生是多么的悲剧，没有使命的工作是多么的折磨。","source":"_posts/老派剧的闪光.md","raw":"---\ntitle: 老派剧的闪光\ndate: 2016-10-01 22:41:27\ntags: 随笔\n---\n\n很久不看国产片，记得住名字的不少，但都是从朋友圈里看来的影评。今晚瞄了一下《湄公河行动》，挺让人印象深刻，论剧情且看跨国走私大案，论颜值担当且看益达男彭于晏，再加上铁汉直男形象的张涵予，可以说该剧几乎满足了各种口味的观众。今天我不想说剧情怎么的跌宕起伏，走私题材的影视剧我在上小学的时候就开始看了，也不想膜拜哪位明星偶像，连个像样点的女一号都没有也实在不值一提（奸笑）。\n<!-- more -->\n\n最让我印象深刻的是最后一关打BOSS，如果单论技能来说，在主角光环下我缉毒警察是无敌的，至少也是以一敌百。然而这一关的BOSS几乎开启了作弊模式，我缉毒战士被下了死命令，为了得到罪犯口中的情报，要求必须抓活的。想想在战场上能够击毙敌方又能全身而退的已经是九死一生，要在不被伤害的情况下制服对方，这个代价太大了。结局也确实惨痛，彭于晏饰演的卧底警察为了让反一号能被安全带走，他与敌人同归于尽，甚至连尸体都没能完好的带回祖国。\n\n浴血奋战，英勇牺牲，这样的桥段乍一听还以为又是抗日呢，但这就是根据真实故事所改编。平时过得太安逸，几乎忘了现代社会还有奉献这么一回事，上周我赴苏丹维和部队第14批和15批完成工作物资交接。哦哦，原来都去过13批了啊，你或许会有这样的惊讶。如今能够抱有信念和使命工作的，可能只有在军人身上才能体现的淋漓尽致。\n\n我有的时候发朋友圈秀一下努力工作的样子，我叔都会点赞，还要写下评论\"好好工作，回报社会\"，简直就是圈里的一股清(qi)流(pa)。老一辈工作者喜欢唱高调，摆道理。叔，现在已经不流行这一套了啊。然而真的是这样吗，小年轻们总喜欢自嘲都市里的高级打工仔，喜欢高姿态的表达\"工作就是工作，生活就是生活\"，而实际分的清吗？到了工作岗位才渐渐地体会，没有梦想的人生是多么的悲剧，没有使命的工作是多么的折磨。","slug":"老派剧的闪光","published":1,"updated":"2017-06-15T12:06:35.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a7a7000z6klb71diladm","content":"<p>很久不看国产片，记得住名字的不少，但都是从朋友圈里看来的影评。今晚瞄了一下《湄公河行动》，挺让人印象深刻，论剧情且看跨国走私大案，论颜值担当且看益达男彭于晏，再加上铁汉直男形象的张涵予，可以说该剧几乎满足了各种口味的观众。今天我不想说剧情怎么的跌宕起伏，走私题材的影视剧我在上小学的时候就开始看了，也不想膜拜哪位明星偶像，连个像样点的女一号都没有也实在不值一提（奸笑）。<br><a id=\"more\"></a></p>\n<p>最让我印象深刻的是最后一关打BOSS，如果单论技能来说，在主角光环下我缉毒警察是无敌的，至少也是以一敌百。然而这一关的BOSS几乎开启了作弊模式，我缉毒战士被下了死命令，为了得到罪犯口中的情报，要求必须抓活的。想想在战场上能够击毙敌方又能全身而退的已经是九死一生，要在不被伤害的情况下制服对方，这个代价太大了。结局也确实惨痛，彭于晏饰演的卧底警察为了让反一号能被安全带走，他与敌人同归于尽，甚至连尸体都没能完好的带回祖国。</p>\n<p>浴血奋战，英勇牺牲，这样的桥段乍一听还以为又是抗日呢，但这就是根据真实故事所改编。平时过得太安逸，几乎忘了现代社会还有奉献这么一回事，上周我赴苏丹维和部队第14批和15批完成工作物资交接。哦哦，原来都去过13批了啊，你或许会有这样的惊讶。如今能够抱有信念和使命工作的，可能只有在军人身上才能体现的淋漓尽致。</p>\n<p>我有的时候发朋友圈秀一下努力工作的样子，我叔都会点赞，还要写下评论”好好工作，回报社会”，简直就是圈里的一股清(qi)流(pa)。老一辈工作者喜欢唱高调，摆道理。叔，现在已经不流行这一套了啊。然而真的是这样吗，小年轻们总喜欢自嘲都市里的高级打工仔，喜欢高姿态的表达”工作就是工作，生活就是生活”，而实际分的清吗？到了工作岗位才渐渐地体会，没有梦想的人生是多么的悲剧，没有使命的工作是多么的折磨。</p>\n","site":{"data":{}},"excerpt":"<p>很久不看国产片，记得住名字的不少，但都是从朋友圈里看来的影评。今晚瞄了一下《湄公河行动》，挺让人印象深刻，论剧情且看跨国走私大案，论颜值担当且看益达男彭于晏，再加上铁汉直男形象的张涵予，可以说该剧几乎满足了各种口味的观众。今天我不想说剧情怎么的跌宕起伏，走私题材的影视剧我在上小学的时候就开始看了，也不想膜拜哪位明星偶像，连个像样点的女一号都没有也实在不值一提（奸笑）。<br>","more":"</p>\n<p>最让我印象深刻的是最后一关打BOSS，如果单论技能来说，在主角光环下我缉毒警察是无敌的，至少也是以一敌百。然而这一关的BOSS几乎开启了作弊模式，我缉毒战士被下了死命令，为了得到罪犯口中的情报，要求必须抓活的。想想在战场上能够击毙敌方又能全身而退的已经是九死一生，要在不被伤害的情况下制服对方，这个代价太大了。结局也确实惨痛，彭于晏饰演的卧底警察为了让反一号能被安全带走，他与敌人同归于尽，甚至连尸体都没能完好的带回祖国。</p>\n<p>浴血奋战，英勇牺牲，这样的桥段乍一听还以为又是抗日呢，但这就是根据真实故事所改编。平时过得太安逸，几乎忘了现代社会还有奉献这么一回事，上周我赴苏丹维和部队第14批和15批完成工作物资交接。哦哦，原来都去过13批了啊，你或许会有这样的惊讶。如今能够抱有信念和使命工作的，可能只有在军人身上才能体现的淋漓尽致。</p>\n<p>我有的时候发朋友圈秀一下努力工作的样子，我叔都会点赞，还要写下评论”好好工作，回报社会”，简直就是圈里的一股清(qi)流(pa)。老一辈工作者喜欢唱高调，摆道理。叔，现在已经不流行这一套了啊。然而真的是这样吗，小年轻们总喜欢自嘲都市里的高级打工仔，喜欢高姿态的表达”工作就是工作，生活就是生活”，而实际分的清吗？到了工作岗位才渐渐地体会，没有梦想的人生是多么的悲剧，没有使命的工作是多么的折磨。</p>"},{"title":"车","date":"2017-06-14T16:28:59.000Z","_content":"\n黑云压境，台风将袭，航班延误，机场躺尸...\n\n\"此时应该有副扑克牌的\"，我望着窗外低沉的乌云。\n\n\"早知道我就带一些零食来了\"，老妹一边啃着手里的鸭脖，一边看向大屏幕上的延误通知。\n\n<!-- more -->\n\n毕业之后跟老妹见面次数寥寥，能在机场偶遇特别惊喜，她去济南，我去南京。虽然同在一座城市工作，一年中也很难约个时间。坐下来喝个茶，聊聊现在的工作、聊聊以前的学校，算是奢求。相约不如偶遇，有的时候就是这样。\n\n高考刚刚结束，不久后就是一群小鲜肉占领大学食堂的日子。回想八年前第一次坐火车去大学报到，临走前我妈给我在裤子里层缝了一个布兜，塞了一张银行卡，里面存着我的学费和几个月的生活费。我拎着一个大的特别夸张的箱子（现在我还在用，而且每次都有人说我带的东西多，其实只是箱子大）上了火车，行李架放不上去，只能摆在两节车厢的连接处。我拿着手里的车票找到自己的座位，发现有个中年壮汉坐在那里，怎么说呢，左右为难。\n\n\"哎你好，我能不能坐那里，我有点不太舒服，想坐在靠窗的位子。\"不好意思叫别人让座，好不容易想出来一个理由，简直烂透了。\n\n\"可以可以，你坐吧！\"壮汉倒也干脆，这表现要放在任何一个创作者笔下都是巨大的资源浪费。\n\n可算是坐下了，但也很纠结，我的箱子又不在身边，别被人偷了...TNND，过几分钟起身去看看吧...于是乎我一晚上不知道跑了多少个来回。这一趟火车是我迄今为止坐过的最漫长的一列，也是最'走心'的一列。\n\n后来的四年我又无数次的踏上这列火车，从最开始的小心翼翼，到后来轻车熟路。这其中的每一次经历，从我收集的厚厚的上百张火车票里，都能找到源头。每一趟旅行都是自我的修行，列车承载着每位乘客的模样，也承载着我眼中世界的样子。\n\n上了研究生就很少再坐火车。只有一次，那是参加工作之前，有十几天的时间，干什么呢...身无分文，只能回家。这回坐了一趟最久的车，全程足足有50个小时。我仍然拖着我的移动巨无霸行李箱，上了车就把它放在窗边的小桌子下，然后坐下来开始我漫长的发呆之旅。这个时间点学生还没有放假，车上乘客什么年龄段的都有。\n\n傍晚温暖的柔光透过车窗，远处景物的轮廓，一幅接着一幅的闪现，或山坡，或高楼，或树木，或行人。我发了三个小时的呆后，终于决定换个姿势，起身坐在过道的座位上。对面是一个大约四十来岁的中年大叔，一只手拖着下巴，望着窗外，若有所思。简单的寒暄后，大叔很快就打开了话匣子，家在湖北，来新疆工作了三年。\n\n\"我这一次回来心里其实很忐忑的。\"大叔突然紧蹙双眉，像个考试不及格回家见家长的孩子。\n\n\"怎么...\"\n\n\"我在这个岗位干了二十多年了，现在年纪大了，到了不得不转行的时候了。我计划跟老婆做一点小生意...\"面对改变和未知，即使处于不惑之年，大叔仍然纠结不安。\n\n\"也可能是另一次机遇呢，毕竟你还年轻，哈哈。\"我能怎么办呢，我只能强行充当老司机呀...大叔也是笑一笑回应我。每天车来车往的，没开过车，谁还没见过车跑呢！\n\n想想孔老夫子所说：十有五而至于学，三十而立，四十不惑...七十而从心所欲...嗯嗯，真正的老司机怎么也得年至古稀吧。\n\n...\n\n台风离去，拨云见日，航班终于恢复，跟老妹告别，起飞...\n","source":"_posts/车.md","raw":"---\ntitle: 车\ndate: 2017-06-15 00:28:59\ntags: 扯\n---\n\n黑云压境，台风将袭，航班延误，机场躺尸...\n\n\"此时应该有副扑克牌的\"，我望着窗外低沉的乌云。\n\n\"早知道我就带一些零食来了\"，老妹一边啃着手里的鸭脖，一边看向大屏幕上的延误通知。\n\n<!-- more -->\n\n毕业之后跟老妹见面次数寥寥，能在机场偶遇特别惊喜，她去济南，我去南京。虽然同在一座城市工作，一年中也很难约个时间。坐下来喝个茶，聊聊现在的工作、聊聊以前的学校，算是奢求。相约不如偶遇，有的时候就是这样。\n\n高考刚刚结束，不久后就是一群小鲜肉占领大学食堂的日子。回想八年前第一次坐火车去大学报到，临走前我妈给我在裤子里层缝了一个布兜，塞了一张银行卡，里面存着我的学费和几个月的生活费。我拎着一个大的特别夸张的箱子（现在我还在用，而且每次都有人说我带的东西多，其实只是箱子大）上了火车，行李架放不上去，只能摆在两节车厢的连接处。我拿着手里的车票找到自己的座位，发现有个中年壮汉坐在那里，怎么说呢，左右为难。\n\n\"哎你好，我能不能坐那里，我有点不太舒服，想坐在靠窗的位子。\"不好意思叫别人让座，好不容易想出来一个理由，简直烂透了。\n\n\"可以可以，你坐吧！\"壮汉倒也干脆，这表现要放在任何一个创作者笔下都是巨大的资源浪费。\n\n可算是坐下了，但也很纠结，我的箱子又不在身边，别被人偷了...TNND，过几分钟起身去看看吧...于是乎我一晚上不知道跑了多少个来回。这一趟火车是我迄今为止坐过的最漫长的一列，也是最'走心'的一列。\n\n后来的四年我又无数次的踏上这列火车，从最开始的小心翼翼，到后来轻车熟路。这其中的每一次经历，从我收集的厚厚的上百张火车票里，都能找到源头。每一趟旅行都是自我的修行，列车承载着每位乘客的模样，也承载着我眼中世界的样子。\n\n上了研究生就很少再坐火车。只有一次，那是参加工作之前，有十几天的时间，干什么呢...身无分文，只能回家。这回坐了一趟最久的车，全程足足有50个小时。我仍然拖着我的移动巨无霸行李箱，上了车就把它放在窗边的小桌子下，然后坐下来开始我漫长的发呆之旅。这个时间点学生还没有放假，车上乘客什么年龄段的都有。\n\n傍晚温暖的柔光透过车窗，远处景物的轮廓，一幅接着一幅的闪现，或山坡，或高楼，或树木，或行人。我发了三个小时的呆后，终于决定换个姿势，起身坐在过道的座位上。对面是一个大约四十来岁的中年大叔，一只手拖着下巴，望着窗外，若有所思。简单的寒暄后，大叔很快就打开了话匣子，家在湖北，来新疆工作了三年。\n\n\"我这一次回来心里其实很忐忑的。\"大叔突然紧蹙双眉，像个考试不及格回家见家长的孩子。\n\n\"怎么...\"\n\n\"我在这个岗位干了二十多年了，现在年纪大了，到了不得不转行的时候了。我计划跟老婆做一点小生意...\"面对改变和未知，即使处于不惑之年，大叔仍然纠结不安。\n\n\"也可能是另一次机遇呢，毕竟你还年轻，哈哈。\"我能怎么办呢，我只能强行充当老司机呀...大叔也是笑一笑回应我。每天车来车往的，没开过车，谁还没见过车跑呢！\n\n想想孔老夫子所说：十有五而至于学，三十而立，四十不惑...七十而从心所欲...嗯嗯，真正的老司机怎么也得年至古稀吧。\n\n...\n\n台风离去，拨云见日，航班终于恢复，跟老妹告别，起飞...\n","slug":"车","published":1,"updated":"2017-06-15T14:49:02.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj8j0a7an00116klbt42danrt","content":"<p>黑云压境，台风将袭，航班延误，机场躺尸…</p>\n<p>“此时应该有副扑克牌的”，我望着窗外低沉的乌云。</p>\n<p>“早知道我就带一些零食来了”，老妹一边啃着手里的鸭脖，一边看向大屏幕上的延误通知。</p>\n<a id=\"more\"></a>\n<p>毕业之后跟老妹见面次数寥寥，能在机场偶遇特别惊喜，她去济南，我去南京。虽然同在一座城市工作，一年中也很难约个时间。坐下来喝个茶，聊聊现在的工作、聊聊以前的学校，算是奢求。相约不如偶遇，有的时候就是这样。</p>\n<p>高考刚刚结束，不久后就是一群小鲜肉占领大学食堂的日子。回想八年前第一次坐火车去大学报到，临走前我妈给我在裤子里层缝了一个布兜，塞了一张银行卡，里面存着我的学费和几个月的生活费。我拎着一个大的特别夸张的箱子（现在我还在用，而且每次都有人说我带的东西多，其实只是箱子大）上了火车，行李架放不上去，只能摆在两节车厢的连接处。我拿着手里的车票找到自己的座位，发现有个中年壮汉坐在那里，怎么说呢，左右为难。</p>\n<p>“哎你好，我能不能坐那里，我有点不太舒服，想坐在靠窗的位子。”不好意思叫别人让座，好不容易想出来一个理由，简直烂透了。</p>\n<p>“可以可以，你坐吧！”壮汉倒也干脆，这表现要放在任何一个创作者笔下都是巨大的资源浪费。</p>\n<p>可算是坐下了，但也很纠结，我的箱子又不在身边，别被人偷了…TNND，过几分钟起身去看看吧…于是乎我一晚上不知道跑了多少个来回。这一趟火车是我迄今为止坐过的最漫长的一列，也是最’走心’的一列。</p>\n<p>后来的四年我又无数次的踏上这列火车，从最开始的小心翼翼，到后来轻车熟路。这其中的每一次经历，从我收集的厚厚的上百张火车票里，都能找到源头。每一趟旅行都是自我的修行，列车承载着每位乘客的模样，也承载着我眼中世界的样子。</p>\n<p>上了研究生就很少再坐火车。只有一次，那是参加工作之前，有十几天的时间，干什么呢…身无分文，只能回家。这回坐了一趟最久的车，全程足足有50个小时。我仍然拖着我的移动巨无霸行李箱，上了车就把它放在窗边的小桌子下，然后坐下来开始我漫长的发呆之旅。这个时间点学生还没有放假，车上乘客什么年龄段的都有。</p>\n<p>傍晚温暖的柔光透过车窗，远处景物的轮廓，一幅接着一幅的闪现，或山坡，或高楼，或树木，或行人。我发了三个小时的呆后，终于决定换个姿势，起身坐在过道的座位上。对面是一个大约四十来岁的中年大叔，一只手拖着下巴，望着窗外，若有所思。简单的寒暄后，大叔很快就打开了话匣子，家在湖北，来新疆工作了三年。</p>\n<p>“我这一次回来心里其实很忐忑的。”大叔突然紧蹙双眉，像个考试不及格回家见家长的孩子。</p>\n<p>“怎么…”</p>\n<p>“我在这个岗位干了二十多年了，现在年纪大了，到了不得不转行的时候了。我计划跟老婆做一点小生意…”面对改变和未知，即使处于不惑之年，大叔仍然纠结不安。</p>\n<p>“也可能是另一次机遇呢，毕竟你还年轻，哈哈。”我能怎么办呢，我只能强行充当老司机呀…大叔也是笑一笑回应我。每天车来车往的，没开过车，谁还没见过车跑呢！</p>\n<p>想想孔老夫子所说：十有五而至于学，三十而立，四十不惑…七十而从心所欲…嗯嗯，真正的老司机怎么也得年至古稀吧。</p>\n<p>…</p>\n<p>台风离去，拨云见日，航班终于恢复，跟老妹告别，起飞…</p>\n","site":{"data":{}},"excerpt":"<p>黑云压境，台风将袭，航班延误，机场躺尸…</p>\n<p>“此时应该有副扑克牌的”，我望着窗外低沉的乌云。</p>\n<p>“早知道我就带一些零食来了”，老妹一边啃着手里的鸭脖，一边看向大屏幕上的延误通知。</p>","more":"<p>毕业之后跟老妹见面次数寥寥，能在机场偶遇特别惊喜，她去济南，我去南京。虽然同在一座城市工作，一年中也很难约个时间。坐下来喝个茶，聊聊现在的工作、聊聊以前的学校，算是奢求。相约不如偶遇，有的时候就是这样。</p>\n<p>高考刚刚结束，不久后就是一群小鲜肉占领大学食堂的日子。回想八年前第一次坐火车去大学报到，临走前我妈给我在裤子里层缝了一个布兜，塞了一张银行卡，里面存着我的学费和几个月的生活费。我拎着一个大的特别夸张的箱子（现在我还在用，而且每次都有人说我带的东西多，其实只是箱子大）上了火车，行李架放不上去，只能摆在两节车厢的连接处。我拿着手里的车票找到自己的座位，发现有个中年壮汉坐在那里，怎么说呢，左右为难。</p>\n<p>“哎你好，我能不能坐那里，我有点不太舒服，想坐在靠窗的位子。”不好意思叫别人让座，好不容易想出来一个理由，简直烂透了。</p>\n<p>“可以可以，你坐吧！”壮汉倒也干脆，这表现要放在任何一个创作者笔下都是巨大的资源浪费。</p>\n<p>可算是坐下了，但也很纠结，我的箱子又不在身边，别被人偷了…TNND，过几分钟起身去看看吧…于是乎我一晚上不知道跑了多少个来回。这一趟火车是我迄今为止坐过的最漫长的一列，也是最’走心’的一列。</p>\n<p>后来的四年我又无数次的踏上这列火车，从最开始的小心翼翼，到后来轻车熟路。这其中的每一次经历，从我收集的厚厚的上百张火车票里，都能找到源头。每一趟旅行都是自我的修行，列车承载着每位乘客的模样，也承载着我眼中世界的样子。</p>\n<p>上了研究生就很少再坐火车。只有一次，那是参加工作之前，有十几天的时间，干什么呢…身无分文，只能回家。这回坐了一趟最久的车，全程足足有50个小时。我仍然拖着我的移动巨无霸行李箱，上了车就把它放在窗边的小桌子下，然后坐下来开始我漫长的发呆之旅。这个时间点学生还没有放假，车上乘客什么年龄段的都有。</p>\n<p>傍晚温暖的柔光透过车窗，远处景物的轮廓，一幅接着一幅的闪现，或山坡，或高楼，或树木，或行人。我发了三个小时的呆后，终于决定换个姿势，起身坐在过道的座位上。对面是一个大约四十来岁的中年大叔，一只手拖着下巴，望着窗外，若有所思。简单的寒暄后，大叔很快就打开了话匣子，家在湖北，来新疆工作了三年。</p>\n<p>“我这一次回来心里其实很忐忑的。”大叔突然紧蹙双眉，像个考试不及格回家见家长的孩子。</p>\n<p>“怎么…”</p>\n<p>“我在这个岗位干了二十多年了，现在年纪大了，到了不得不转行的时候了。我计划跟老婆做一点小生意…”面对改变和未知，即使处于不惑之年，大叔仍然纠结不安。</p>\n<p>“也可能是另一次机遇呢，毕竟你还年轻，哈哈。”我能怎么办呢，我只能强行充当老司机呀…大叔也是笑一笑回应我。每天车来车往的，没开过车，谁还没见过车跑呢！</p>\n<p>想想孔老夫子所说：十有五而至于学，三十而立，四十不惑…七十而从心所欲…嗯嗯，真正的老司机怎么也得年至古稀吧。</p>\n<p>…</p>\n<p>台风离去，拨云见日，航班终于恢复，跟老妹告别，起飞…</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj8j0a77600046klbglwxxnma","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a77m00076klb6rst93kn"},{"post_id":"cj8j0a75d00006klb7i824lr9","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a78100096klb453mdgi4"},{"post_id":"cj8j0a77m00086klbqa3rf86t","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a781000c6klbmo6hxhoi"},{"post_id":"cj8j0a76800016klb08ien14g","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a78h000e6klbxo596v6w"},{"post_id":"cj8j0a781000d6klbnahznwnj","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a78h000h6klb2z8yur38"},{"post_id":"cj8j0a76q00036klbcnn88jph","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a78w000j6klbiqbve1hf"},{"post_id":"cj8j0a78h000f6klbf2fz04tf","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a78w000m6klbgycczn2q"},{"post_id":"cj8j0a78h000i6klbqrfs29sz","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a79c000o6klbnbyo586y"},{"post_id":"cj8j0a77600056klbq7gjlt37","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a79s000q6klb32za6alj"},{"post_id":"cj8j0a78w000k6klbjl71n8z8","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a79s000s6klbxnp405yo"},{"post_id":"cj8j0a79c000n6klb90c7ekzy","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a7a7000u6klbd5hr44wq"},{"post_id":"cj8j0a781000a6klbj60r6enn","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a7a7000w6klbulbcd131"},{"post_id":"cj8j0a79c000p6klbag734zwh","tag_id":"cj8j0a76q00026klbseamevqo","_id":"cj8j0a7a7000y6klbb2hg4z0v"},{"post_id":"cj8j0a79s000r6klbzy4vyhm0","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a7an00106klb8vy6evjf"},{"post_id":"cj8j0a79s000t6klbn9crpf23","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a7an00126klb92wi5dto"},{"post_id":"cj8j0a7a7000v6klboy62yhsj","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a7an00136klbsz4cuoez"},{"post_id":"cj8j0a7a7000x6klb6gvk0ln2","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a7an00146klbb4lo7erw"},{"post_id":"cj8j0a7a7000z6klb71diladm","tag_id":"cj8j0a78h000g6klbgjsk6j3g","_id":"cj8j0a7b200156klbk6q50pix"},{"post_id":"cj8j0a7an00116klbt42danrt","tag_id":"cj8j0a77m00066klb587uxdjd","_id":"cj8j0a7b200166klbeijzqg8w"}],"Tag":[{"name":"前端","_id":"cj8j0a76q00026klbseamevqo"},{"name":"扯","_id":"cj8j0a77m00066klb587uxdjd"},{"name":"随笔","_id":"cj8j0a78h000g6klbgjsk6j3g"}]}}